{"ast":null,"code":"// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n(function (global, factory) {\n  /* global define, require, module */\n\n  /* AMD */\n  if (typeof define === 'function' && define.amd) define([\"protobufjs/minimal\"], factory);\n  /* CommonJS */\n  else if (typeof require === 'function' && typeof module === 'object' && module && module.exports) module.exports = factory(require(\"protobufjs/minimal\"));\n})(this, function ($protobuf) {\n  \"use strict\"; // Common aliases\n\n  var $Reader = $protobuf.Reader,\n      $Writer = $protobuf.Writer,\n      $util = $protobuf.util; // Exported root namespace\n\n  var $root = $protobuf.roots._google_cloud_language_3_8_0_protos || ($protobuf.roots._google_cloud_language_3_8_0_protos = {});\n\n  $root.google = function () {\n    /**\n     * Namespace google.\n     * @exports google\n     * @namespace\n     */\n    var google = {};\n\n    google.cloud = function () {\n      /**\n       * Namespace cloud.\n       * @memberof google\n       * @namespace\n       */\n      var cloud = {};\n\n      cloud.language = function () {\n        /**\n         * Namespace language.\n         * @memberof google.cloud\n         * @namespace\n         */\n        var language = {};\n\n        language.v1 = function () {\n          /**\n           * Namespace v1.\n           * @memberof google.cloud.language\n           * @namespace\n           */\n          var v1 = {};\n\n          v1.LanguageService = function () {\n            /**\n             * Constructs a new LanguageService service.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a LanguageService\n             * @extends $protobuf.rpc.Service\n             * @constructor\n             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n             */\n            function LanguageService(rpcImpl, requestDelimited, responseDelimited) {\n              $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n            }\n\n            (LanguageService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = LanguageService;\n            /**\n             * Creates new LanguageService service using the specified rpc implementation.\n             * @function create\n             * @memberof google.cloud.language.v1.LanguageService\n             * @static\n             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n             * @returns {LanguageService} RPC service. Useful where requests and/or responses are streamed.\n             */\n\n            LanguageService.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n              return new this(rpcImpl, requestDelimited, responseDelimited);\n            };\n            /**\n             * Callback as used by {@link google.cloud.language.v1.LanguageService#analyzeSentiment}.\n             * @memberof google.cloud.language.v1.LanguageService\n             * @typedef AnalyzeSentimentCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1.AnalyzeSentimentResponse} [response] AnalyzeSentimentResponse\n             */\n\n            /**\n             * Calls AnalyzeSentiment.\n             * @function analyzeSentiment\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnalyzeSentimentRequest} request AnalyzeSentimentRequest message or plain object\n             * @param {google.cloud.language.v1.LanguageService.AnalyzeSentimentCallback} callback Node-style callback called with the error, if any, and AnalyzeSentimentResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n\n            Object.defineProperty(LanguageService.prototype.analyzeSentiment = function analyzeSentiment(request, callback) {\n              return this.rpcCall(analyzeSentiment, $root.google.cloud.language.v1.AnalyzeSentimentRequest, $root.google.cloud.language.v1.AnalyzeSentimentResponse, request, callback);\n            }, \"name\", {\n              value: \"AnalyzeSentiment\"\n            });\n            /**\n             * Calls AnalyzeSentiment.\n             * @function analyzeSentiment\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnalyzeSentimentRequest} request AnalyzeSentimentRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1.AnalyzeSentimentResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1.LanguageService#analyzeEntities}.\n             * @memberof google.cloud.language.v1.LanguageService\n             * @typedef AnalyzeEntitiesCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1.AnalyzeEntitiesResponse} [response] AnalyzeEntitiesResponse\n             */\n\n            /**\n             * Calls AnalyzeEntities.\n             * @function analyzeEntities\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest} request AnalyzeEntitiesRequest message or plain object\n             * @param {google.cloud.language.v1.LanguageService.AnalyzeEntitiesCallback} callback Node-style callback called with the error, if any, and AnalyzeEntitiesResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.analyzeEntities = function analyzeEntities(request, callback) {\n              return this.rpcCall(analyzeEntities, $root.google.cloud.language.v1.AnalyzeEntitiesRequest, $root.google.cloud.language.v1.AnalyzeEntitiesResponse, request, callback);\n            }, \"name\", {\n              value: \"AnalyzeEntities\"\n            });\n            /**\n             * Calls AnalyzeEntities.\n             * @function analyzeEntities\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest} request AnalyzeEntitiesRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1.AnalyzeEntitiesResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1.LanguageService#analyzeEntitySentiment}.\n             * @memberof google.cloud.language.v1.LanguageService\n             * @typedef AnalyzeEntitySentimentCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1.AnalyzeEntitySentimentResponse} [response] AnalyzeEntitySentimentResponse\n             */\n\n            /**\n             * Calls AnalyzeEntitySentiment.\n             * @function analyzeEntitySentiment\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest} request AnalyzeEntitySentimentRequest message or plain object\n             * @param {google.cloud.language.v1.LanguageService.AnalyzeEntitySentimentCallback} callback Node-style callback called with the error, if any, and AnalyzeEntitySentimentResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.analyzeEntitySentiment = function analyzeEntitySentiment(request, callback) {\n              return this.rpcCall(analyzeEntitySentiment, $root.google.cloud.language.v1.AnalyzeEntitySentimentRequest, $root.google.cloud.language.v1.AnalyzeEntitySentimentResponse, request, callback);\n            }, \"name\", {\n              value: \"AnalyzeEntitySentiment\"\n            });\n            /**\n             * Calls AnalyzeEntitySentiment.\n             * @function analyzeEntitySentiment\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest} request AnalyzeEntitySentimentRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1.AnalyzeEntitySentimentResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1.LanguageService#analyzeSyntax}.\n             * @memberof google.cloud.language.v1.LanguageService\n             * @typedef AnalyzeSyntaxCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1.AnalyzeSyntaxResponse} [response] AnalyzeSyntaxResponse\n             */\n\n            /**\n             * Calls AnalyzeSyntax.\n             * @function analyzeSyntax\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest} request AnalyzeSyntaxRequest message or plain object\n             * @param {google.cloud.language.v1.LanguageService.AnalyzeSyntaxCallback} callback Node-style callback called with the error, if any, and AnalyzeSyntaxResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.analyzeSyntax = function analyzeSyntax(request, callback) {\n              return this.rpcCall(analyzeSyntax, $root.google.cloud.language.v1.AnalyzeSyntaxRequest, $root.google.cloud.language.v1.AnalyzeSyntaxResponse, request, callback);\n            }, \"name\", {\n              value: \"AnalyzeSyntax\"\n            });\n            /**\n             * Calls AnalyzeSyntax.\n             * @function analyzeSyntax\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest} request AnalyzeSyntaxRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1.AnalyzeSyntaxResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1.LanguageService#classifyText}.\n             * @memberof google.cloud.language.v1.LanguageService\n             * @typedef ClassifyTextCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1.ClassifyTextResponse} [response] ClassifyTextResponse\n             */\n\n            /**\n             * Calls ClassifyText.\n             * @function classifyText\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IClassifyTextRequest} request ClassifyTextRequest message or plain object\n             * @param {google.cloud.language.v1.LanguageService.ClassifyTextCallback} callback Node-style callback called with the error, if any, and ClassifyTextResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.classifyText = function classifyText(request, callback) {\n              return this.rpcCall(classifyText, $root.google.cloud.language.v1.ClassifyTextRequest, $root.google.cloud.language.v1.ClassifyTextResponse, request, callback);\n            }, \"name\", {\n              value: \"ClassifyText\"\n            });\n            /**\n             * Calls ClassifyText.\n             * @function classifyText\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IClassifyTextRequest} request ClassifyTextRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1.ClassifyTextResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1.LanguageService#annotateText}.\n             * @memberof google.cloud.language.v1.LanguageService\n             * @typedef AnnotateTextCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1.AnnotateTextResponse} [response] AnnotateTextResponse\n             */\n\n            /**\n             * Calls AnnotateText.\n             * @function annotateText\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnnotateTextRequest} request AnnotateTextRequest message or plain object\n             * @param {google.cloud.language.v1.LanguageService.AnnotateTextCallback} callback Node-style callback called with the error, if any, and AnnotateTextResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.annotateText = function annotateText(request, callback) {\n              return this.rpcCall(annotateText, $root.google.cloud.language.v1.AnnotateTextRequest, $root.google.cloud.language.v1.AnnotateTextResponse, request, callback);\n            }, \"name\", {\n              value: \"AnnotateText\"\n            });\n            /**\n             * Calls AnnotateText.\n             * @function annotateText\n             * @memberof google.cloud.language.v1.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1.IAnnotateTextRequest} request AnnotateTextRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1.AnnotateTextResponse>} Promise\n             * @variation 2\n             */\n\n            return LanguageService;\n          }();\n\n          v1.Document = function () {\n            /**\n             * Properties of a Document.\n             * @memberof google.cloud.language.v1\n             * @interface IDocument\n             * @property {google.cloud.language.v1.Document.Type|null} [type] Document type\n             * @property {string|null} [content] Document content\n             * @property {string|null} [gcsContentUri] Document gcsContentUri\n             * @property {string|null} [language] Document language\n             */\n\n            /**\n             * Constructs a new Document.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a Document.\n             * @implements IDocument\n             * @constructor\n             * @param {google.cloud.language.v1.IDocument=} [properties] Properties to set\n             */\n            function Document(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Document type.\n             * @member {google.cloud.language.v1.Document.Type} type\n             * @memberof google.cloud.language.v1.Document\n             * @instance\n             */\n\n\n            Document.prototype.type = 0;\n            /**\n             * Document content.\n             * @member {string} content\n             * @memberof google.cloud.language.v1.Document\n             * @instance\n             */\n\n            Document.prototype.content = \"\";\n            /**\n             * Document gcsContentUri.\n             * @member {string} gcsContentUri\n             * @memberof google.cloud.language.v1.Document\n             * @instance\n             */\n\n            Document.prototype.gcsContentUri = \"\";\n            /**\n             * Document language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1.Document\n             * @instance\n             */\n\n            Document.prototype.language = \"\"; // OneOf field names bound to virtual getters and setters\n\n            var $oneOfFields;\n            /**\n             * Document source.\n             * @member {\"content\"|\"gcsContentUri\"|undefined} source\n             * @memberof google.cloud.language.v1.Document\n             * @instance\n             */\n\n            Object.defineProperty(Document.prototype, \"source\", {\n              get: $util.oneOfGetter($oneOfFields = [\"content\", \"gcsContentUri\"]),\n              set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Creates a new Document instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.Document\n             * @static\n             * @param {google.cloud.language.v1.IDocument=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.Document} Document instance\n             */\n\n            Document.create = function create(properties) {\n              return new Document(properties);\n            };\n            /**\n             * Encodes the specified Document message. Does not implicitly {@link google.cloud.language.v1.Document.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.Document\n             * @static\n             * @param {google.cloud.language.v1.IDocument} message Document message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Document.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n              /* id 1, wireType 0 =*/\n              8).int32(message.type);\n              if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.content);\n              if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).string(message.gcsContentUri);\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 4, wireType 2 =*/\n              34).string(message.language);\n              return writer;\n            };\n            /**\n             * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.language.v1.Document.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.Document\n             * @static\n             * @param {google.cloud.language.v1.IDocument} message Document message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Document.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a Document message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.Document\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.Document} Document\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Document.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.Document();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.type = reader.int32();\n                    break;\n\n                  case 2:\n                    message.content = reader.string();\n                    break;\n\n                  case 3:\n                    message.gcsContentUri = reader.string();\n                    break;\n\n                  case 4:\n                    message.language = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a Document message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.Document\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.Document} Document\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Document.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a Document message.\n             * @function verify\n             * @memberof google.cloud.language.v1.Document\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Document.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              var properties = {};\n              if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n                default:\n                  return \"type: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                  break;\n              }\n\n              if (message.content != null && message.hasOwnProperty(\"content\")) {\n                properties.source = 1;\n                if (!$util.isString(message.content)) return \"content: string expected\";\n              }\n\n              if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) {\n                if (properties.source === 1) return \"source: multiple values\";\n                properties.source = 1;\n                if (!$util.isString(message.gcsContentUri)) return \"gcsContentUri: string expected\";\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n              return null;\n            };\n            /**\n             * Creates a Document message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.Document\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.Document} Document\n             */\n\n\n            Document.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.Document) return object;\n              var message = new $root.google.cloud.language.v1.Document();\n\n              switch (object.type) {\n                case \"TYPE_UNSPECIFIED\":\n                case 0:\n                  message.type = 0;\n                  break;\n\n                case \"PLAIN_TEXT\":\n                case 1:\n                  message.type = 1;\n                  break;\n\n                case \"HTML\":\n                case 2:\n                  message.type = 2;\n                  break;\n              }\n\n              if (object.content != null) message.content = String(object.content);\n              if (object.gcsContentUri != null) message.gcsContentUri = String(object.gcsContentUri);\n              if (object.language != null) message.language = String(object.language);\n              return message;\n            };\n            /**\n             * Creates a plain object from a Document message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.Document\n             * @static\n             * @param {google.cloud.language.v1.Document} message Document\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Document.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.type = options.enums === String ? \"TYPE_UNSPECIFIED\" : 0;\n                object.language = \"\";\n              }\n\n              if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.google.cloud.language.v1.Document.Type[message.type] : message.type;\n\n              if (message.content != null && message.hasOwnProperty(\"content\")) {\n                object.content = message.content;\n                if (options.oneofs) object.source = \"content\";\n              }\n\n              if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) {\n                object.gcsContentUri = message.gcsContentUri;\n                if (options.oneofs) object.source = \"gcsContentUri\";\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n              return object;\n            };\n            /**\n             * Converts this Document to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.Document\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Document.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Type enum.\n             * @name google.cloud.language.v1.Document.Type\n             * @enum {string}\n             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value\n             * @property {number} PLAIN_TEXT=1 PLAIN_TEXT value\n             * @property {number} HTML=2 HTML value\n             */\n\n\n            Document.Type = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"TYPE_UNSPECIFIED\"] = 0;\n              values[valuesById[1] = \"PLAIN_TEXT\"] = 1;\n              values[valuesById[2] = \"HTML\"] = 2;\n              return values;\n            }();\n\n            return Document;\n          }();\n\n          v1.Sentence = function () {\n            /**\n             * Properties of a Sentence.\n             * @memberof google.cloud.language.v1\n             * @interface ISentence\n             * @property {google.cloud.language.v1.ITextSpan|null} [text] Sentence text\n             * @property {google.cloud.language.v1.ISentiment|null} [sentiment] Sentence sentiment\n             */\n\n            /**\n             * Constructs a new Sentence.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a Sentence.\n             * @implements ISentence\n             * @constructor\n             * @param {google.cloud.language.v1.ISentence=} [properties] Properties to set\n             */\n            function Sentence(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Sentence text.\n             * @member {google.cloud.language.v1.ITextSpan|null|undefined} text\n             * @memberof google.cloud.language.v1.Sentence\n             * @instance\n             */\n\n\n            Sentence.prototype.text = null;\n            /**\n             * Sentence sentiment.\n             * @member {google.cloud.language.v1.ISentiment|null|undefined} sentiment\n             * @memberof google.cloud.language.v1.Sentence\n             * @instance\n             */\n\n            Sentence.prototype.sentiment = null;\n            /**\n             * Creates a new Sentence instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.Sentence\n             * @static\n             * @param {google.cloud.language.v1.ISentence=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.Sentence} Sentence instance\n             */\n\n            Sentence.create = function create(properties) {\n              return new Sentence(properties);\n            };\n            /**\n             * Encodes the specified Sentence message. Does not implicitly {@link google.cloud.language.v1.Sentence.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.Sentence\n             * @static\n             * @param {google.cloud.language.v1.ISentence} message Sentence message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Sentence.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.text != null && message.hasOwnProperty(\"text\")) $root.google.cloud.language.v1.TextSpan.encode(message.text, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) $root.google.cloud.language.v1.Sentiment.encode(message.sentiment, writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified Sentence message, length delimited. Does not implicitly {@link google.cloud.language.v1.Sentence.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.Sentence\n             * @static\n             * @param {google.cloud.language.v1.ISentence} message Sentence message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Sentence.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a Sentence message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.Sentence\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.Sentence} Sentence\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Sentence.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.Sentence();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.text = $root.google.cloud.language.v1.TextSpan.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.sentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a Sentence message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.Sentence\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.Sentence} Sentence\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Sentence.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a Sentence message.\n             * @function verify\n             * @memberof google.cloud.language.v1.Sentence\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Sentence.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) {\n                var error = $root.google.cloud.language.v1.TextSpan.verify(message.text);\n                if (error) return \"text.\" + error;\n              }\n\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                var error = $root.google.cloud.language.v1.Sentiment.verify(message.sentiment);\n                if (error) return \"sentiment.\" + error;\n              }\n\n              return null;\n            };\n            /**\n             * Creates a Sentence message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.Sentence\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.Sentence} Sentence\n             */\n\n\n            Sentence.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.Sentence) return object;\n              var message = new $root.google.cloud.language.v1.Sentence();\n\n              if (object.text != null) {\n                if (typeof object.text !== \"object\") throw TypeError(\".google.cloud.language.v1.Sentence.text: object expected\");\n                message.text = $root.google.cloud.language.v1.TextSpan.fromObject(object.text);\n              }\n\n              if (object.sentiment != null) {\n                if (typeof object.sentiment !== \"object\") throw TypeError(\".google.cloud.language.v1.Sentence.sentiment: object expected\");\n                message.sentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.sentiment);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a Sentence message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.Sentence\n             * @static\n             * @param {google.cloud.language.v1.Sentence} message Sentence\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Sentence.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.text = null;\n                object.sentiment = null;\n              }\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) object.text = $root.google.cloud.language.v1.TextSpan.toObject(message.text, options);\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) object.sentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.sentiment, options);\n              return object;\n            };\n            /**\n             * Converts this Sentence to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.Sentence\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Sentence.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Sentence;\n          }();\n\n          v1.Entity = function () {\n            /**\n             * Properties of an Entity.\n             * @memberof google.cloud.language.v1\n             * @interface IEntity\n             * @property {string|null} [name] Entity name\n             * @property {google.cloud.language.v1.Entity.Type|null} [type] Entity type\n             * @property {Object.<string,string>|null} [metadata] Entity metadata\n             * @property {number|null} [salience] Entity salience\n             * @property {Array.<google.cloud.language.v1.IEntityMention>|null} [mentions] Entity mentions\n             * @property {google.cloud.language.v1.ISentiment|null} [sentiment] Entity sentiment\n             */\n\n            /**\n             * Constructs a new Entity.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an Entity.\n             * @implements IEntity\n             * @constructor\n             * @param {google.cloud.language.v1.IEntity=} [properties] Properties to set\n             */\n            function Entity(properties) {\n              this.metadata = {};\n              this.mentions = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Entity name.\n             * @member {string} name\n             * @memberof google.cloud.language.v1.Entity\n             * @instance\n             */\n\n\n            Entity.prototype.name = \"\";\n            /**\n             * Entity type.\n             * @member {google.cloud.language.v1.Entity.Type} type\n             * @memberof google.cloud.language.v1.Entity\n             * @instance\n             */\n\n            Entity.prototype.type = 0;\n            /**\n             * Entity metadata.\n             * @member {Object.<string,string>} metadata\n             * @memberof google.cloud.language.v1.Entity\n             * @instance\n             */\n\n            Entity.prototype.metadata = $util.emptyObject;\n            /**\n             * Entity salience.\n             * @member {number} salience\n             * @memberof google.cloud.language.v1.Entity\n             * @instance\n             */\n\n            Entity.prototype.salience = 0;\n            /**\n             * Entity mentions.\n             * @member {Array.<google.cloud.language.v1.IEntityMention>} mentions\n             * @memberof google.cloud.language.v1.Entity\n             * @instance\n             */\n\n            Entity.prototype.mentions = $util.emptyArray;\n            /**\n             * Entity sentiment.\n             * @member {google.cloud.language.v1.ISentiment|null|undefined} sentiment\n             * @memberof google.cloud.language.v1.Entity\n             * @instance\n             */\n\n            Entity.prototype.sentiment = null;\n            /**\n             * Creates a new Entity instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.Entity\n             * @static\n             * @param {google.cloud.language.v1.IEntity=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.Entity} Entity instance\n             */\n\n            Entity.create = function create(properties) {\n              return new Entity(properties);\n            };\n            /**\n             * Encodes the specified Entity message. Does not implicitly {@link google.cloud.language.v1.Entity.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.Entity\n             * @static\n             * @param {google.cloud.language.v1.IEntity} message Entity message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Entity.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).string(message.name);\n              if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.type);\n              if (message.metadata != null && message.hasOwnProperty(\"metadata\")) for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i) writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork().uint32(\n              /* id 1, wireType 2 =*/\n              10).string(keys[i]).uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.metadata[keys[i]]).ldelim();\n              if (message.salience != null && message.hasOwnProperty(\"salience\")) writer.uint32(\n              /* id 4, wireType 5 =*/\n              37).float(message.salience);\n              if (message.mentions != null && message.mentions.length) for (var i = 0; i < message.mentions.length; ++i) $root.google.cloud.language.v1.EntityMention.encode(message.mentions[i], writer.uint32(\n              /* id 5, wireType 2 =*/\n              42).fork()).ldelim();\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) $root.google.cloud.language.v1.Sentiment.encode(message.sentiment, writer.uint32(\n              /* id 6, wireType 2 =*/\n              50).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified Entity message, length delimited. Does not implicitly {@link google.cloud.language.v1.Entity.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.Entity\n             * @static\n             * @param {google.cloud.language.v1.IEntity} message Entity message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Entity.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an Entity message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.Entity\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.Entity} Entity\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Entity.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.Entity(),\n                  key;\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.name = reader.string();\n                    break;\n\n                  case 2:\n                    message.type = reader.int32();\n                    break;\n\n                  case 3:\n                    reader.skip().pos++;\n                    if (message.metadata === $util.emptyObject) message.metadata = {};\n                    key = reader.string();\n                    reader.pos++;\n                    message.metadata[key] = reader.string();\n                    break;\n\n                  case 4:\n                    message.salience = reader.float();\n                    break;\n\n                  case 5:\n                    if (!(message.mentions && message.mentions.length)) message.mentions = [];\n                    message.mentions.push($root.google.cloud.language.v1.EntityMention.decode(reader, reader.uint32()));\n                    break;\n\n                  case 6:\n                    message.sentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an Entity message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.Entity\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.Entity} Entity\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Entity.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an Entity message.\n             * @function verify\n             * @memberof google.cloud.language.v1.Entity\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Entity.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n              if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n                default:\n                  return \"type: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                  break;\n              }\n\n              if (message.metadata != null && message.hasOwnProperty(\"metadata\")) {\n                if (!$util.isObject(message.metadata)) return \"metadata: object expected\";\n                var key = Object.keys(message.metadata);\n\n                for (var i = 0; i < key.length; ++i) if (!$util.isString(message.metadata[key[i]])) return \"metadata: string{k:string} expected\";\n              }\n\n              if (message.salience != null && message.hasOwnProperty(\"salience\")) if (typeof message.salience !== \"number\") return \"salience: number expected\";\n\n              if (message.mentions != null && message.hasOwnProperty(\"mentions\")) {\n                if (!Array.isArray(message.mentions)) return \"mentions: array expected\";\n\n                for (var i = 0; i < message.mentions.length; ++i) {\n                  var error = $root.google.cloud.language.v1.EntityMention.verify(message.mentions[i]);\n                  if (error) return \"mentions.\" + error;\n                }\n              }\n\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                var error = $root.google.cloud.language.v1.Sentiment.verify(message.sentiment);\n                if (error) return \"sentiment.\" + error;\n              }\n\n              return null;\n            };\n            /**\n             * Creates an Entity message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.Entity\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.Entity} Entity\n             */\n\n\n            Entity.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.Entity) return object;\n              var message = new $root.google.cloud.language.v1.Entity();\n              if (object.name != null) message.name = String(object.name);\n\n              switch (object.type) {\n                case \"UNKNOWN\":\n                case 0:\n                  message.type = 0;\n                  break;\n\n                case \"PERSON\":\n                case 1:\n                  message.type = 1;\n                  break;\n\n                case \"LOCATION\":\n                case 2:\n                  message.type = 2;\n                  break;\n\n                case \"ORGANIZATION\":\n                case 3:\n                  message.type = 3;\n                  break;\n\n                case \"EVENT\":\n                case 4:\n                  message.type = 4;\n                  break;\n\n                case \"WORK_OF_ART\":\n                case 5:\n                  message.type = 5;\n                  break;\n\n                case \"CONSUMER_GOOD\":\n                case 6:\n                  message.type = 6;\n                  break;\n\n                case \"OTHER\":\n                case 7:\n                  message.type = 7;\n                  break;\n\n                case \"PHONE_NUMBER\":\n                case 9:\n                  message.type = 9;\n                  break;\n\n                case \"ADDRESS\":\n                case 10:\n                  message.type = 10;\n                  break;\n\n                case \"DATE\":\n                case 11:\n                  message.type = 11;\n                  break;\n\n                case \"NUMBER\":\n                case 12:\n                  message.type = 12;\n                  break;\n\n                case \"PRICE\":\n                case 13:\n                  message.type = 13;\n                  break;\n              }\n\n              if (object.metadata) {\n                if (typeof object.metadata !== \"object\") throw TypeError(\".google.cloud.language.v1.Entity.metadata: object expected\");\n                message.metadata = {};\n\n                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i) message.metadata[keys[i]] = String(object.metadata[keys[i]]);\n              }\n\n              if (object.salience != null) message.salience = Number(object.salience);\n\n              if (object.mentions) {\n                if (!Array.isArray(object.mentions)) throw TypeError(\".google.cloud.language.v1.Entity.mentions: array expected\");\n                message.mentions = [];\n\n                for (var i = 0; i < object.mentions.length; ++i) {\n                  if (typeof object.mentions[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.Entity.mentions: object expected\");\n                  message.mentions[i] = $root.google.cloud.language.v1.EntityMention.fromObject(object.mentions[i]);\n                }\n              }\n\n              if (object.sentiment != null) {\n                if (typeof object.sentiment !== \"object\") throw TypeError(\".google.cloud.language.v1.Entity.sentiment: object expected\");\n                message.sentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.sentiment);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an Entity message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.Entity\n             * @static\n             * @param {google.cloud.language.v1.Entity} message Entity\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Entity.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.mentions = [];\n              if (options.objects || options.defaults) object.metadata = {};\n\n              if (options.defaults) {\n                object.name = \"\";\n                object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                object.salience = 0;\n                object.sentiment = null;\n              }\n\n              if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n              if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.google.cloud.language.v1.Entity.Type[message.type] : message.type;\n              var keys2;\n\n              if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {\n                object.metadata = {};\n\n                for (var j = 0; j < keys2.length; ++j) object.metadata[keys2[j]] = message.metadata[keys2[j]];\n              }\n\n              if (message.salience != null && message.hasOwnProperty(\"salience\")) object.salience = options.json && !isFinite(message.salience) ? String(message.salience) : message.salience;\n\n              if (message.mentions && message.mentions.length) {\n                object.mentions = [];\n\n                for (var j = 0; j < message.mentions.length; ++j) object.mentions[j] = $root.google.cloud.language.v1.EntityMention.toObject(message.mentions[j], options);\n              }\n\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) object.sentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.sentiment, options);\n              return object;\n            };\n            /**\n             * Converts this Entity to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.Entity\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Entity.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Type enum.\n             * @name google.cloud.language.v1.Entity.Type\n             * @enum {string}\n             * @property {number} UNKNOWN=0 UNKNOWN value\n             * @property {number} PERSON=1 PERSON value\n             * @property {number} LOCATION=2 LOCATION value\n             * @property {number} ORGANIZATION=3 ORGANIZATION value\n             * @property {number} EVENT=4 EVENT value\n             * @property {number} WORK_OF_ART=5 WORK_OF_ART value\n             * @property {number} CONSUMER_GOOD=6 CONSUMER_GOOD value\n             * @property {number} OTHER=7 OTHER value\n             * @property {number} PHONE_NUMBER=9 PHONE_NUMBER value\n             * @property {number} ADDRESS=10 ADDRESS value\n             * @property {number} DATE=11 DATE value\n             * @property {number} NUMBER=12 NUMBER value\n             * @property {number} PRICE=13 PRICE value\n             */\n\n\n            Entity.Type = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"UNKNOWN\"] = 0;\n              values[valuesById[1] = \"PERSON\"] = 1;\n              values[valuesById[2] = \"LOCATION\"] = 2;\n              values[valuesById[3] = \"ORGANIZATION\"] = 3;\n              values[valuesById[4] = \"EVENT\"] = 4;\n              values[valuesById[5] = \"WORK_OF_ART\"] = 5;\n              values[valuesById[6] = \"CONSUMER_GOOD\"] = 6;\n              values[valuesById[7] = \"OTHER\"] = 7;\n              values[valuesById[9] = \"PHONE_NUMBER\"] = 9;\n              values[valuesById[10] = \"ADDRESS\"] = 10;\n              values[valuesById[11] = \"DATE\"] = 11;\n              values[valuesById[12] = \"NUMBER\"] = 12;\n              values[valuesById[13] = \"PRICE\"] = 13;\n              return values;\n            }();\n\n            return Entity;\n          }();\n          /**\n           * EncodingType enum.\n           * @name google.cloud.language.v1.EncodingType\n           * @enum {string}\n           * @property {number} NONE=0 NONE value\n           * @property {number} UTF8=1 UTF8 value\n           * @property {number} UTF16=2 UTF16 value\n           * @property {number} UTF32=3 UTF32 value\n           */\n\n\n          v1.EncodingType = function () {\n            var valuesById = {},\n                values = Object.create(valuesById);\n            values[valuesById[0] = \"NONE\"] = 0;\n            values[valuesById[1] = \"UTF8\"] = 1;\n            values[valuesById[2] = \"UTF16\"] = 2;\n            values[valuesById[3] = \"UTF32\"] = 3;\n            return values;\n          }();\n\n          v1.Token = function () {\n            /**\n             * Properties of a Token.\n             * @memberof google.cloud.language.v1\n             * @interface IToken\n             * @property {google.cloud.language.v1.ITextSpan|null} [text] Token text\n             * @property {google.cloud.language.v1.IPartOfSpeech|null} [partOfSpeech] Token partOfSpeech\n             * @property {google.cloud.language.v1.IDependencyEdge|null} [dependencyEdge] Token dependencyEdge\n             * @property {string|null} [lemma] Token lemma\n             */\n\n            /**\n             * Constructs a new Token.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a Token.\n             * @implements IToken\n             * @constructor\n             * @param {google.cloud.language.v1.IToken=} [properties] Properties to set\n             */\n            function Token(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Token text.\n             * @member {google.cloud.language.v1.ITextSpan|null|undefined} text\n             * @memberof google.cloud.language.v1.Token\n             * @instance\n             */\n\n\n            Token.prototype.text = null;\n            /**\n             * Token partOfSpeech.\n             * @member {google.cloud.language.v1.IPartOfSpeech|null|undefined} partOfSpeech\n             * @memberof google.cloud.language.v1.Token\n             * @instance\n             */\n\n            Token.prototype.partOfSpeech = null;\n            /**\n             * Token dependencyEdge.\n             * @member {google.cloud.language.v1.IDependencyEdge|null|undefined} dependencyEdge\n             * @memberof google.cloud.language.v1.Token\n             * @instance\n             */\n\n            Token.prototype.dependencyEdge = null;\n            /**\n             * Token lemma.\n             * @member {string} lemma\n             * @memberof google.cloud.language.v1.Token\n             * @instance\n             */\n\n            Token.prototype.lemma = \"\";\n            /**\n             * Creates a new Token instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.Token\n             * @static\n             * @param {google.cloud.language.v1.IToken=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.Token} Token instance\n             */\n\n            Token.create = function create(properties) {\n              return new Token(properties);\n            };\n            /**\n             * Encodes the specified Token message. Does not implicitly {@link google.cloud.language.v1.Token.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.Token\n             * @static\n             * @param {google.cloud.language.v1.IToken} message Token message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Token.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.text != null && message.hasOwnProperty(\"text\")) $root.google.cloud.language.v1.TextSpan.encode(message.text, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\")) $root.google.cloud.language.v1.PartOfSpeech.encode(message.partOfSpeech, writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\")) $root.google.cloud.language.v1.DependencyEdge.encode(message.dependencyEdge, writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork()).ldelim();\n              if (message.lemma != null && message.hasOwnProperty(\"lemma\")) writer.uint32(\n              /* id 4, wireType 2 =*/\n              34).string(message.lemma);\n              return writer;\n            };\n            /**\n             * Encodes the specified Token message, length delimited. Does not implicitly {@link google.cloud.language.v1.Token.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.Token\n             * @static\n             * @param {google.cloud.language.v1.IToken} message Token message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Token.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a Token message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.Token\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.Token} Token\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Token.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.Token();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.text = $root.google.cloud.language.v1.TextSpan.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.partOfSpeech = $root.google.cloud.language.v1.PartOfSpeech.decode(reader, reader.uint32());\n                    break;\n\n                  case 3:\n                    message.dependencyEdge = $root.google.cloud.language.v1.DependencyEdge.decode(reader, reader.uint32());\n                    break;\n\n                  case 4:\n                    message.lemma = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a Token message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.Token\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.Token} Token\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Token.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a Token message.\n             * @function verify\n             * @memberof google.cloud.language.v1.Token\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Token.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) {\n                var error = $root.google.cloud.language.v1.TextSpan.verify(message.text);\n                if (error) return \"text.\" + error;\n              }\n\n              if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\")) {\n                var error = $root.google.cloud.language.v1.PartOfSpeech.verify(message.partOfSpeech);\n                if (error) return \"partOfSpeech.\" + error;\n              }\n\n              if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\")) {\n                var error = $root.google.cloud.language.v1.DependencyEdge.verify(message.dependencyEdge);\n                if (error) return \"dependencyEdge.\" + error;\n              }\n\n              if (message.lemma != null && message.hasOwnProperty(\"lemma\")) if (!$util.isString(message.lemma)) return \"lemma: string expected\";\n              return null;\n            };\n            /**\n             * Creates a Token message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.Token\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.Token} Token\n             */\n\n\n            Token.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.Token) return object;\n              var message = new $root.google.cloud.language.v1.Token();\n\n              if (object.text != null) {\n                if (typeof object.text !== \"object\") throw TypeError(\".google.cloud.language.v1.Token.text: object expected\");\n                message.text = $root.google.cloud.language.v1.TextSpan.fromObject(object.text);\n              }\n\n              if (object.partOfSpeech != null) {\n                if (typeof object.partOfSpeech !== \"object\") throw TypeError(\".google.cloud.language.v1.Token.partOfSpeech: object expected\");\n                message.partOfSpeech = $root.google.cloud.language.v1.PartOfSpeech.fromObject(object.partOfSpeech);\n              }\n\n              if (object.dependencyEdge != null) {\n                if (typeof object.dependencyEdge !== \"object\") throw TypeError(\".google.cloud.language.v1.Token.dependencyEdge: object expected\");\n                message.dependencyEdge = $root.google.cloud.language.v1.DependencyEdge.fromObject(object.dependencyEdge);\n              }\n\n              if (object.lemma != null) message.lemma = String(object.lemma);\n              return message;\n            };\n            /**\n             * Creates a plain object from a Token message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.Token\n             * @static\n             * @param {google.cloud.language.v1.Token} message Token\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Token.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.text = null;\n                object.partOfSpeech = null;\n                object.dependencyEdge = null;\n                object.lemma = \"\";\n              }\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) object.text = $root.google.cloud.language.v1.TextSpan.toObject(message.text, options);\n              if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\")) object.partOfSpeech = $root.google.cloud.language.v1.PartOfSpeech.toObject(message.partOfSpeech, options);\n              if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\")) object.dependencyEdge = $root.google.cloud.language.v1.DependencyEdge.toObject(message.dependencyEdge, options);\n              if (message.lemma != null && message.hasOwnProperty(\"lemma\")) object.lemma = message.lemma;\n              return object;\n            };\n            /**\n             * Converts this Token to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.Token\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Token.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Token;\n          }();\n\n          v1.Sentiment = function () {\n            /**\n             * Properties of a Sentiment.\n             * @memberof google.cloud.language.v1\n             * @interface ISentiment\n             * @property {number|null} [magnitude] Sentiment magnitude\n             * @property {number|null} [score] Sentiment score\n             */\n\n            /**\n             * Constructs a new Sentiment.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a Sentiment.\n             * @implements ISentiment\n             * @constructor\n             * @param {google.cloud.language.v1.ISentiment=} [properties] Properties to set\n             */\n            function Sentiment(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Sentiment magnitude.\n             * @member {number} magnitude\n             * @memberof google.cloud.language.v1.Sentiment\n             * @instance\n             */\n\n\n            Sentiment.prototype.magnitude = 0;\n            /**\n             * Sentiment score.\n             * @member {number} score\n             * @memberof google.cloud.language.v1.Sentiment\n             * @instance\n             */\n\n            Sentiment.prototype.score = 0;\n            /**\n             * Creates a new Sentiment instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.Sentiment\n             * @static\n             * @param {google.cloud.language.v1.ISentiment=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.Sentiment} Sentiment instance\n             */\n\n            Sentiment.create = function create(properties) {\n              return new Sentiment(properties);\n            };\n            /**\n             * Encodes the specified Sentiment message. Does not implicitly {@link google.cloud.language.v1.Sentiment.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.Sentiment\n             * @static\n             * @param {google.cloud.language.v1.ISentiment} message Sentiment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Sentiment.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.magnitude != null && message.hasOwnProperty(\"magnitude\")) writer.uint32(\n              /* id 2, wireType 5 =*/\n              21).float(message.magnitude);\n              if (message.score != null && message.hasOwnProperty(\"score\")) writer.uint32(\n              /* id 3, wireType 5 =*/\n              29).float(message.score);\n              return writer;\n            };\n            /**\n             * Encodes the specified Sentiment message, length delimited. Does not implicitly {@link google.cloud.language.v1.Sentiment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.Sentiment\n             * @static\n             * @param {google.cloud.language.v1.ISentiment} message Sentiment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Sentiment.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a Sentiment message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.Sentiment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.Sentiment} Sentiment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Sentiment.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.Sentiment();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 2:\n                    message.magnitude = reader.float();\n                    break;\n\n                  case 3:\n                    message.score = reader.float();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a Sentiment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.Sentiment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.Sentiment} Sentiment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Sentiment.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a Sentiment message.\n             * @function verify\n             * @memberof google.cloud.language.v1.Sentiment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Sentiment.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.magnitude != null && message.hasOwnProperty(\"magnitude\")) if (typeof message.magnitude !== \"number\") return \"magnitude: number expected\";\n              if (message.score != null && message.hasOwnProperty(\"score\")) if (typeof message.score !== \"number\") return \"score: number expected\";\n              return null;\n            };\n            /**\n             * Creates a Sentiment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.Sentiment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.Sentiment} Sentiment\n             */\n\n\n            Sentiment.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.Sentiment) return object;\n              var message = new $root.google.cloud.language.v1.Sentiment();\n              if (object.magnitude != null) message.magnitude = Number(object.magnitude);\n              if (object.score != null) message.score = Number(object.score);\n              return message;\n            };\n            /**\n             * Creates a plain object from a Sentiment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.Sentiment\n             * @static\n             * @param {google.cloud.language.v1.Sentiment} message Sentiment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Sentiment.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.magnitude = 0;\n                object.score = 0;\n              }\n\n              if (message.magnitude != null && message.hasOwnProperty(\"magnitude\")) object.magnitude = options.json && !isFinite(message.magnitude) ? String(message.magnitude) : message.magnitude;\n              if (message.score != null && message.hasOwnProperty(\"score\")) object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;\n              return object;\n            };\n            /**\n             * Converts this Sentiment to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.Sentiment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Sentiment.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Sentiment;\n          }();\n\n          v1.PartOfSpeech = function () {\n            /**\n             * Properties of a PartOfSpeech.\n             * @memberof google.cloud.language.v1\n             * @interface IPartOfSpeech\n             * @property {google.cloud.language.v1.PartOfSpeech.Tag|null} [tag] PartOfSpeech tag\n             * @property {google.cloud.language.v1.PartOfSpeech.Aspect|null} [aspect] PartOfSpeech aspect\n             * @property {google.cloud.language.v1.PartOfSpeech.Case|null} [\"case\"] PartOfSpeech case\n             * @property {google.cloud.language.v1.PartOfSpeech.Form|null} [form] PartOfSpeech form\n             * @property {google.cloud.language.v1.PartOfSpeech.Gender|null} [gender] PartOfSpeech gender\n             * @property {google.cloud.language.v1.PartOfSpeech.Mood|null} [mood] PartOfSpeech mood\n             * @property {google.cloud.language.v1.PartOfSpeech.Number|null} [number] PartOfSpeech number\n             * @property {google.cloud.language.v1.PartOfSpeech.Person|null} [person] PartOfSpeech person\n             * @property {google.cloud.language.v1.PartOfSpeech.Proper|null} [proper] PartOfSpeech proper\n             * @property {google.cloud.language.v1.PartOfSpeech.Reciprocity|null} [reciprocity] PartOfSpeech reciprocity\n             * @property {google.cloud.language.v1.PartOfSpeech.Tense|null} [tense] PartOfSpeech tense\n             * @property {google.cloud.language.v1.PartOfSpeech.Voice|null} [voice] PartOfSpeech voice\n             */\n\n            /**\n             * Constructs a new PartOfSpeech.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a PartOfSpeech.\n             * @implements IPartOfSpeech\n             * @constructor\n             * @param {google.cloud.language.v1.IPartOfSpeech=} [properties] Properties to set\n             */\n            function PartOfSpeech(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * PartOfSpeech tag.\n             * @member {google.cloud.language.v1.PartOfSpeech.Tag} tag\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n\n            PartOfSpeech.prototype.tag = 0;\n            /**\n             * PartOfSpeech aspect.\n             * @member {google.cloud.language.v1.PartOfSpeech.Aspect} aspect\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.aspect = 0;\n            /**\n             * PartOfSpeech case.\n             * @member {google.cloud.language.v1.PartOfSpeech.Case} case\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype[\"case\"] = 0;\n            /**\n             * PartOfSpeech form.\n             * @member {google.cloud.language.v1.PartOfSpeech.Form} form\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.form = 0;\n            /**\n             * PartOfSpeech gender.\n             * @member {google.cloud.language.v1.PartOfSpeech.Gender} gender\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.gender = 0;\n            /**\n             * PartOfSpeech mood.\n             * @member {google.cloud.language.v1.PartOfSpeech.Mood} mood\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.mood = 0;\n            /**\n             * PartOfSpeech number.\n             * @member {google.cloud.language.v1.PartOfSpeech.Number} number\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.number = 0;\n            /**\n             * PartOfSpeech person.\n             * @member {google.cloud.language.v1.PartOfSpeech.Person} person\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.person = 0;\n            /**\n             * PartOfSpeech proper.\n             * @member {google.cloud.language.v1.PartOfSpeech.Proper} proper\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.proper = 0;\n            /**\n             * PartOfSpeech reciprocity.\n             * @member {google.cloud.language.v1.PartOfSpeech.Reciprocity} reciprocity\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.reciprocity = 0;\n            /**\n             * PartOfSpeech tense.\n             * @member {google.cloud.language.v1.PartOfSpeech.Tense} tense\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.tense = 0;\n            /**\n             * PartOfSpeech voice.\n             * @member {google.cloud.language.v1.PartOfSpeech.Voice} voice\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.voice = 0;\n            /**\n             * Creates a new PartOfSpeech instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @static\n             * @param {google.cloud.language.v1.IPartOfSpeech=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.PartOfSpeech} PartOfSpeech instance\n             */\n\n            PartOfSpeech.create = function create(properties) {\n              return new PartOfSpeech(properties);\n            };\n            /**\n             * Encodes the specified PartOfSpeech message. Does not implicitly {@link google.cloud.language.v1.PartOfSpeech.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @static\n             * @param {google.cloud.language.v1.IPartOfSpeech} message PartOfSpeech message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            PartOfSpeech.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.tag != null && message.hasOwnProperty(\"tag\")) writer.uint32(\n              /* id 1, wireType 0 =*/\n              8).int32(message.tag);\n              if (message.aspect != null && message.hasOwnProperty(\"aspect\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.aspect);\n              if (message[\"case\"] != null && message.hasOwnProperty(\"case\")) writer.uint32(\n              /* id 3, wireType 0 =*/\n              24).int32(message[\"case\"]);\n              if (message.form != null && message.hasOwnProperty(\"form\")) writer.uint32(\n              /* id 4, wireType 0 =*/\n              32).int32(message.form);\n              if (message.gender != null && message.hasOwnProperty(\"gender\")) writer.uint32(\n              /* id 5, wireType 0 =*/\n              40).int32(message.gender);\n              if (message.mood != null && message.hasOwnProperty(\"mood\")) writer.uint32(\n              /* id 6, wireType 0 =*/\n              48).int32(message.mood);\n              if (message.number != null && message.hasOwnProperty(\"number\")) writer.uint32(\n              /* id 7, wireType 0 =*/\n              56).int32(message.number);\n              if (message.person != null && message.hasOwnProperty(\"person\")) writer.uint32(\n              /* id 8, wireType 0 =*/\n              64).int32(message.person);\n              if (message.proper != null && message.hasOwnProperty(\"proper\")) writer.uint32(\n              /* id 9, wireType 0 =*/\n              72).int32(message.proper);\n              if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\")) writer.uint32(\n              /* id 10, wireType 0 =*/\n              80).int32(message.reciprocity);\n              if (message.tense != null && message.hasOwnProperty(\"tense\")) writer.uint32(\n              /* id 11, wireType 0 =*/\n              88).int32(message.tense);\n              if (message.voice != null && message.hasOwnProperty(\"voice\")) writer.uint32(\n              /* id 12, wireType 0 =*/\n              96).int32(message.voice);\n              return writer;\n            };\n            /**\n             * Encodes the specified PartOfSpeech message, length delimited. Does not implicitly {@link google.cloud.language.v1.PartOfSpeech.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @static\n             * @param {google.cloud.language.v1.IPartOfSpeech} message PartOfSpeech message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            PartOfSpeech.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a PartOfSpeech message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.PartOfSpeech} PartOfSpeech\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            PartOfSpeech.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.PartOfSpeech();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.tag = reader.int32();\n                    break;\n\n                  case 2:\n                    message.aspect = reader.int32();\n                    break;\n\n                  case 3:\n                    message[\"case\"] = reader.int32();\n                    break;\n\n                  case 4:\n                    message.form = reader.int32();\n                    break;\n\n                  case 5:\n                    message.gender = reader.int32();\n                    break;\n\n                  case 6:\n                    message.mood = reader.int32();\n                    break;\n\n                  case 7:\n                    message.number = reader.int32();\n                    break;\n\n                  case 8:\n                    message.person = reader.int32();\n                    break;\n\n                  case 9:\n                    message.proper = reader.int32();\n                    break;\n\n                  case 10:\n                    message.reciprocity = reader.int32();\n                    break;\n\n                  case 11:\n                    message.tense = reader.int32();\n                    break;\n\n                  case 12:\n                    message.voice = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a PartOfSpeech message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.PartOfSpeech} PartOfSpeech\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            PartOfSpeech.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a PartOfSpeech message.\n             * @function verify\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            PartOfSpeech.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.tag != null && message.hasOwnProperty(\"tag\")) switch (message.tag) {\n                default:\n                  return \"tag: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                  break;\n              }\n              if (message.aspect != null && message.hasOwnProperty(\"aspect\")) switch (message.aspect) {\n                default:\n                  return \"aspect: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              if (message[\"case\"] != null && message.hasOwnProperty(\"case\")) switch (message[\"case\"]) {\n                default:\n                  return \"case: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                  break;\n              }\n              if (message.form != null && message.hasOwnProperty(\"form\")) switch (message.form) {\n                default:\n                  return \"form: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                  break;\n              }\n              if (message.gender != null && message.hasOwnProperty(\"gender\")) switch (message.gender) {\n                default:\n                  return \"gender: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              if (message.mood != null && message.hasOwnProperty(\"mood\")) switch (message.mood) {\n                default:\n                  return \"mood: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                  break;\n              }\n              if (message.number != null && message.hasOwnProperty(\"number\")) switch (message.number) {\n                default:\n                  return \"number: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              if (message.person != null && message.hasOwnProperty(\"person\")) switch (message.person) {\n                default:\n                  return \"person: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                  break;\n              }\n              if (message.proper != null && message.hasOwnProperty(\"proper\")) switch (message.proper) {\n                default:\n                  return \"proper: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                  break;\n              }\n              if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\")) switch (message.reciprocity) {\n                default:\n                  return \"reciprocity: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                  break;\n              }\n              if (message.tense != null && message.hasOwnProperty(\"tense\")) switch (message.tense) {\n                default:\n                  return \"tense: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                  break;\n              }\n              if (message.voice != null && message.hasOwnProperty(\"voice\")) switch (message.voice) {\n                default:\n                  return \"voice: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates a PartOfSpeech message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.PartOfSpeech} PartOfSpeech\n             */\n\n\n            PartOfSpeech.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.PartOfSpeech) return object;\n              var message = new $root.google.cloud.language.v1.PartOfSpeech();\n\n              switch (object.tag) {\n                case \"UNKNOWN\":\n                case 0:\n                  message.tag = 0;\n                  break;\n\n                case \"ADJ\":\n                case 1:\n                  message.tag = 1;\n                  break;\n\n                case \"ADP\":\n                case 2:\n                  message.tag = 2;\n                  break;\n\n                case \"ADV\":\n                case 3:\n                  message.tag = 3;\n                  break;\n\n                case \"CONJ\":\n                case 4:\n                  message.tag = 4;\n                  break;\n\n                case \"DET\":\n                case 5:\n                  message.tag = 5;\n                  break;\n\n                case \"NOUN\":\n                case 6:\n                  message.tag = 6;\n                  break;\n\n                case \"NUM\":\n                case 7:\n                  message.tag = 7;\n                  break;\n\n                case \"PRON\":\n                case 8:\n                  message.tag = 8;\n                  break;\n\n                case \"PRT\":\n                case 9:\n                  message.tag = 9;\n                  break;\n\n                case \"PUNCT\":\n                case 10:\n                  message.tag = 10;\n                  break;\n\n                case \"VERB\":\n                case 11:\n                  message.tag = 11;\n                  break;\n\n                case \"X\":\n                case 12:\n                  message.tag = 12;\n                  break;\n\n                case \"AFFIX\":\n                case 13:\n                  message.tag = 13;\n                  break;\n              }\n\n              switch (object.aspect) {\n                case \"ASPECT_UNKNOWN\":\n                case 0:\n                  message.aspect = 0;\n                  break;\n\n                case \"PERFECTIVE\":\n                case 1:\n                  message.aspect = 1;\n                  break;\n\n                case \"IMPERFECTIVE\":\n                case 2:\n                  message.aspect = 2;\n                  break;\n\n                case \"PROGRESSIVE\":\n                case 3:\n                  message.aspect = 3;\n                  break;\n              }\n\n              switch (object[\"case\"]) {\n                case \"CASE_UNKNOWN\":\n                case 0:\n                  message[\"case\"] = 0;\n                  break;\n\n                case \"ACCUSATIVE\":\n                case 1:\n                  message[\"case\"] = 1;\n                  break;\n\n                case \"ADVERBIAL\":\n                case 2:\n                  message[\"case\"] = 2;\n                  break;\n\n                case \"COMPLEMENTIVE\":\n                case 3:\n                  message[\"case\"] = 3;\n                  break;\n\n                case \"DATIVE\":\n                case 4:\n                  message[\"case\"] = 4;\n                  break;\n\n                case \"GENITIVE\":\n                case 5:\n                  message[\"case\"] = 5;\n                  break;\n\n                case \"INSTRUMENTAL\":\n                case 6:\n                  message[\"case\"] = 6;\n                  break;\n\n                case \"LOCATIVE\":\n                case 7:\n                  message[\"case\"] = 7;\n                  break;\n\n                case \"NOMINATIVE\":\n                case 8:\n                  message[\"case\"] = 8;\n                  break;\n\n                case \"OBLIQUE\":\n                case 9:\n                  message[\"case\"] = 9;\n                  break;\n\n                case \"PARTITIVE\":\n                case 10:\n                  message[\"case\"] = 10;\n                  break;\n\n                case \"PREPOSITIONAL\":\n                case 11:\n                  message[\"case\"] = 11;\n                  break;\n\n                case \"REFLEXIVE_CASE\":\n                case 12:\n                  message[\"case\"] = 12;\n                  break;\n\n                case \"RELATIVE_CASE\":\n                case 13:\n                  message[\"case\"] = 13;\n                  break;\n\n                case \"VOCATIVE\":\n                case 14:\n                  message[\"case\"] = 14;\n                  break;\n              }\n\n              switch (object.form) {\n                case \"FORM_UNKNOWN\":\n                case 0:\n                  message.form = 0;\n                  break;\n\n                case \"ADNOMIAL\":\n                case 1:\n                  message.form = 1;\n                  break;\n\n                case \"AUXILIARY\":\n                case 2:\n                  message.form = 2;\n                  break;\n\n                case \"COMPLEMENTIZER\":\n                case 3:\n                  message.form = 3;\n                  break;\n\n                case \"FINAL_ENDING\":\n                case 4:\n                  message.form = 4;\n                  break;\n\n                case \"GERUND\":\n                case 5:\n                  message.form = 5;\n                  break;\n\n                case \"REALIS\":\n                case 6:\n                  message.form = 6;\n                  break;\n\n                case \"IRREALIS\":\n                case 7:\n                  message.form = 7;\n                  break;\n\n                case \"SHORT\":\n                case 8:\n                  message.form = 8;\n                  break;\n\n                case \"LONG\":\n                case 9:\n                  message.form = 9;\n                  break;\n\n                case \"ORDER\":\n                case 10:\n                  message.form = 10;\n                  break;\n\n                case \"SPECIFIC\":\n                case 11:\n                  message.form = 11;\n                  break;\n              }\n\n              switch (object.gender) {\n                case \"GENDER_UNKNOWN\":\n                case 0:\n                  message.gender = 0;\n                  break;\n\n                case \"FEMININE\":\n                case 1:\n                  message.gender = 1;\n                  break;\n\n                case \"MASCULINE\":\n                case 2:\n                  message.gender = 2;\n                  break;\n\n                case \"NEUTER\":\n                case 3:\n                  message.gender = 3;\n                  break;\n              }\n\n              switch (object.mood) {\n                case \"MOOD_UNKNOWN\":\n                case 0:\n                  message.mood = 0;\n                  break;\n\n                case \"CONDITIONAL_MOOD\":\n                case 1:\n                  message.mood = 1;\n                  break;\n\n                case \"IMPERATIVE\":\n                case 2:\n                  message.mood = 2;\n                  break;\n\n                case \"INDICATIVE\":\n                case 3:\n                  message.mood = 3;\n                  break;\n\n                case \"INTERROGATIVE\":\n                case 4:\n                  message.mood = 4;\n                  break;\n\n                case \"JUSSIVE\":\n                case 5:\n                  message.mood = 5;\n                  break;\n\n                case \"SUBJUNCTIVE\":\n                case 6:\n                  message.mood = 6;\n                  break;\n              }\n\n              switch (object.number) {\n                case \"NUMBER_UNKNOWN\":\n                case 0:\n                  message.number = 0;\n                  break;\n\n                case \"SINGULAR\":\n                case 1:\n                  message.number = 1;\n                  break;\n\n                case \"PLURAL\":\n                case 2:\n                  message.number = 2;\n                  break;\n\n                case \"DUAL\":\n                case 3:\n                  message.number = 3;\n                  break;\n              }\n\n              switch (object.person) {\n                case \"PERSON_UNKNOWN\":\n                case 0:\n                  message.person = 0;\n                  break;\n\n                case \"FIRST\":\n                case 1:\n                  message.person = 1;\n                  break;\n\n                case \"SECOND\":\n                case 2:\n                  message.person = 2;\n                  break;\n\n                case \"THIRD\":\n                case 3:\n                  message.person = 3;\n                  break;\n\n                case \"REFLEXIVE_PERSON\":\n                case 4:\n                  message.person = 4;\n                  break;\n              }\n\n              switch (object.proper) {\n                case \"PROPER_UNKNOWN\":\n                case 0:\n                  message.proper = 0;\n                  break;\n\n                case \"PROPER\":\n                case 1:\n                  message.proper = 1;\n                  break;\n\n                case \"NOT_PROPER\":\n                case 2:\n                  message.proper = 2;\n                  break;\n              }\n\n              switch (object.reciprocity) {\n                case \"RECIPROCITY_UNKNOWN\":\n                case 0:\n                  message.reciprocity = 0;\n                  break;\n\n                case \"RECIPROCAL\":\n                case 1:\n                  message.reciprocity = 1;\n                  break;\n\n                case \"NON_RECIPROCAL\":\n                case 2:\n                  message.reciprocity = 2;\n                  break;\n              }\n\n              switch (object.tense) {\n                case \"TENSE_UNKNOWN\":\n                case 0:\n                  message.tense = 0;\n                  break;\n\n                case \"CONDITIONAL_TENSE\":\n                case 1:\n                  message.tense = 1;\n                  break;\n\n                case \"FUTURE\":\n                case 2:\n                  message.tense = 2;\n                  break;\n\n                case \"PAST\":\n                case 3:\n                  message.tense = 3;\n                  break;\n\n                case \"PRESENT\":\n                case 4:\n                  message.tense = 4;\n                  break;\n\n                case \"IMPERFECT\":\n                case 5:\n                  message.tense = 5;\n                  break;\n\n                case \"PLUPERFECT\":\n                case 6:\n                  message.tense = 6;\n                  break;\n              }\n\n              switch (object.voice) {\n                case \"VOICE_UNKNOWN\":\n                case 0:\n                  message.voice = 0;\n                  break;\n\n                case \"ACTIVE\":\n                case 1:\n                  message.voice = 1;\n                  break;\n\n                case \"CAUSATIVE\":\n                case 2:\n                  message.voice = 2;\n                  break;\n\n                case \"PASSIVE\":\n                case 3:\n                  message.voice = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a PartOfSpeech message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @static\n             * @param {google.cloud.language.v1.PartOfSpeech} message PartOfSpeech\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            PartOfSpeech.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.tag = options.enums === String ? \"UNKNOWN\" : 0;\n                object.aspect = options.enums === String ? \"ASPECT_UNKNOWN\" : 0;\n                object[\"case\"] = options.enums === String ? \"CASE_UNKNOWN\" : 0;\n                object.form = options.enums === String ? \"FORM_UNKNOWN\" : 0;\n                object.gender = options.enums === String ? \"GENDER_UNKNOWN\" : 0;\n                object.mood = options.enums === String ? \"MOOD_UNKNOWN\" : 0;\n                object.number = options.enums === String ? \"NUMBER_UNKNOWN\" : 0;\n                object.person = options.enums === String ? \"PERSON_UNKNOWN\" : 0;\n                object.proper = options.enums === String ? \"PROPER_UNKNOWN\" : 0;\n                object.reciprocity = options.enums === String ? \"RECIPROCITY_UNKNOWN\" : 0;\n                object.tense = options.enums === String ? \"TENSE_UNKNOWN\" : 0;\n                object.voice = options.enums === String ? \"VOICE_UNKNOWN\" : 0;\n              }\n\n              if (message.tag != null && message.hasOwnProperty(\"tag\")) object.tag = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Tag[message.tag] : message.tag;\n              if (message.aspect != null && message.hasOwnProperty(\"aspect\")) object.aspect = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Aspect[message.aspect] : message.aspect;\n              if (message[\"case\"] != null && message.hasOwnProperty(\"case\")) object[\"case\"] = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Case[message[\"case\"]] : message[\"case\"];\n              if (message.form != null && message.hasOwnProperty(\"form\")) object.form = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Form[message.form] : message.form;\n              if (message.gender != null && message.hasOwnProperty(\"gender\")) object.gender = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Gender[message.gender] : message.gender;\n              if (message.mood != null && message.hasOwnProperty(\"mood\")) object.mood = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Mood[message.mood] : message.mood;\n              if (message.number != null && message.hasOwnProperty(\"number\")) object.number = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Number[message.number] : message.number;\n              if (message.person != null && message.hasOwnProperty(\"person\")) object.person = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Person[message.person] : message.person;\n              if (message.proper != null && message.hasOwnProperty(\"proper\")) object.proper = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Proper[message.proper] : message.proper;\n              if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\")) object.reciprocity = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Reciprocity[message.reciprocity] : message.reciprocity;\n              if (message.tense != null && message.hasOwnProperty(\"tense\")) object.tense = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Tense[message.tense] : message.tense;\n              if (message.voice != null && message.hasOwnProperty(\"voice\")) object.voice = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Voice[message.voice] : message.voice;\n              return object;\n            };\n            /**\n             * Converts this PartOfSpeech to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.PartOfSpeech\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            PartOfSpeech.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Tag enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Tag\n             * @enum {string}\n             * @property {number} UNKNOWN=0 UNKNOWN value\n             * @property {number} ADJ=1 ADJ value\n             * @property {number} ADP=2 ADP value\n             * @property {number} ADV=3 ADV value\n             * @property {number} CONJ=4 CONJ value\n             * @property {number} DET=5 DET value\n             * @property {number} NOUN=6 NOUN value\n             * @property {number} NUM=7 NUM value\n             * @property {number} PRON=8 PRON value\n             * @property {number} PRT=9 PRT value\n             * @property {number} PUNCT=10 PUNCT value\n             * @property {number} VERB=11 VERB value\n             * @property {number} X=12 X value\n             * @property {number} AFFIX=13 AFFIX value\n             */\n\n\n            PartOfSpeech.Tag = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ADJ\"] = 1;\n              values[valuesById[2] = \"ADP\"] = 2;\n              values[valuesById[3] = \"ADV\"] = 3;\n              values[valuesById[4] = \"CONJ\"] = 4;\n              values[valuesById[5] = \"DET\"] = 5;\n              values[valuesById[6] = \"NOUN\"] = 6;\n              values[valuesById[7] = \"NUM\"] = 7;\n              values[valuesById[8] = \"PRON\"] = 8;\n              values[valuesById[9] = \"PRT\"] = 9;\n              values[valuesById[10] = \"PUNCT\"] = 10;\n              values[valuesById[11] = \"VERB\"] = 11;\n              values[valuesById[12] = \"X\"] = 12;\n              values[valuesById[13] = \"AFFIX\"] = 13;\n              return values;\n            }();\n            /**\n             * Aspect enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Aspect\n             * @enum {string}\n             * @property {number} ASPECT_UNKNOWN=0 ASPECT_UNKNOWN value\n             * @property {number} PERFECTIVE=1 PERFECTIVE value\n             * @property {number} IMPERFECTIVE=2 IMPERFECTIVE value\n             * @property {number} PROGRESSIVE=3 PROGRESSIVE value\n             */\n\n\n            PartOfSpeech.Aspect = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"ASPECT_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"PERFECTIVE\"] = 1;\n              values[valuesById[2] = \"IMPERFECTIVE\"] = 2;\n              values[valuesById[3] = \"PROGRESSIVE\"] = 3;\n              return values;\n            }();\n            /**\n             * Case enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Case\n             * @enum {string}\n             * @property {number} CASE_UNKNOWN=0 CASE_UNKNOWN value\n             * @property {number} ACCUSATIVE=1 ACCUSATIVE value\n             * @property {number} ADVERBIAL=2 ADVERBIAL value\n             * @property {number} COMPLEMENTIVE=3 COMPLEMENTIVE value\n             * @property {number} DATIVE=4 DATIVE value\n             * @property {number} GENITIVE=5 GENITIVE value\n             * @property {number} INSTRUMENTAL=6 INSTRUMENTAL value\n             * @property {number} LOCATIVE=7 LOCATIVE value\n             * @property {number} NOMINATIVE=8 NOMINATIVE value\n             * @property {number} OBLIQUE=9 OBLIQUE value\n             * @property {number} PARTITIVE=10 PARTITIVE value\n             * @property {number} PREPOSITIONAL=11 PREPOSITIONAL value\n             * @property {number} REFLEXIVE_CASE=12 REFLEXIVE_CASE value\n             * @property {number} RELATIVE_CASE=13 RELATIVE_CASE value\n             * @property {number} VOCATIVE=14 VOCATIVE value\n             */\n\n\n            PartOfSpeech.Case = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"CASE_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ACCUSATIVE\"] = 1;\n              values[valuesById[2] = \"ADVERBIAL\"] = 2;\n              values[valuesById[3] = \"COMPLEMENTIVE\"] = 3;\n              values[valuesById[4] = \"DATIVE\"] = 4;\n              values[valuesById[5] = \"GENITIVE\"] = 5;\n              values[valuesById[6] = \"INSTRUMENTAL\"] = 6;\n              values[valuesById[7] = \"LOCATIVE\"] = 7;\n              values[valuesById[8] = \"NOMINATIVE\"] = 8;\n              values[valuesById[9] = \"OBLIQUE\"] = 9;\n              values[valuesById[10] = \"PARTITIVE\"] = 10;\n              values[valuesById[11] = \"PREPOSITIONAL\"] = 11;\n              values[valuesById[12] = \"REFLEXIVE_CASE\"] = 12;\n              values[valuesById[13] = \"RELATIVE_CASE\"] = 13;\n              values[valuesById[14] = \"VOCATIVE\"] = 14;\n              return values;\n            }();\n            /**\n             * Form enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Form\n             * @enum {string}\n             * @property {number} FORM_UNKNOWN=0 FORM_UNKNOWN value\n             * @property {number} ADNOMIAL=1 ADNOMIAL value\n             * @property {number} AUXILIARY=2 AUXILIARY value\n             * @property {number} COMPLEMENTIZER=3 COMPLEMENTIZER value\n             * @property {number} FINAL_ENDING=4 FINAL_ENDING value\n             * @property {number} GERUND=5 GERUND value\n             * @property {number} REALIS=6 REALIS value\n             * @property {number} IRREALIS=7 IRREALIS value\n             * @property {number} SHORT=8 SHORT value\n             * @property {number} LONG=9 LONG value\n             * @property {number} ORDER=10 ORDER value\n             * @property {number} SPECIFIC=11 SPECIFIC value\n             */\n\n\n            PartOfSpeech.Form = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"FORM_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ADNOMIAL\"] = 1;\n              values[valuesById[2] = \"AUXILIARY\"] = 2;\n              values[valuesById[3] = \"COMPLEMENTIZER\"] = 3;\n              values[valuesById[4] = \"FINAL_ENDING\"] = 4;\n              values[valuesById[5] = \"GERUND\"] = 5;\n              values[valuesById[6] = \"REALIS\"] = 6;\n              values[valuesById[7] = \"IRREALIS\"] = 7;\n              values[valuesById[8] = \"SHORT\"] = 8;\n              values[valuesById[9] = \"LONG\"] = 9;\n              values[valuesById[10] = \"ORDER\"] = 10;\n              values[valuesById[11] = \"SPECIFIC\"] = 11;\n              return values;\n            }();\n            /**\n             * Gender enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Gender\n             * @enum {string}\n             * @property {number} GENDER_UNKNOWN=0 GENDER_UNKNOWN value\n             * @property {number} FEMININE=1 FEMININE value\n             * @property {number} MASCULINE=2 MASCULINE value\n             * @property {number} NEUTER=3 NEUTER value\n             */\n\n\n            PartOfSpeech.Gender = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"GENDER_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"FEMININE\"] = 1;\n              values[valuesById[2] = \"MASCULINE\"] = 2;\n              values[valuesById[3] = \"NEUTER\"] = 3;\n              return values;\n            }();\n            /**\n             * Mood enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Mood\n             * @enum {string}\n             * @property {number} MOOD_UNKNOWN=0 MOOD_UNKNOWN value\n             * @property {number} CONDITIONAL_MOOD=1 CONDITIONAL_MOOD value\n             * @property {number} IMPERATIVE=2 IMPERATIVE value\n             * @property {number} INDICATIVE=3 INDICATIVE value\n             * @property {number} INTERROGATIVE=4 INTERROGATIVE value\n             * @property {number} JUSSIVE=5 JUSSIVE value\n             * @property {number} SUBJUNCTIVE=6 SUBJUNCTIVE value\n             */\n\n\n            PartOfSpeech.Mood = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"MOOD_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"CONDITIONAL_MOOD\"] = 1;\n              values[valuesById[2] = \"IMPERATIVE\"] = 2;\n              values[valuesById[3] = \"INDICATIVE\"] = 3;\n              values[valuesById[4] = \"INTERROGATIVE\"] = 4;\n              values[valuesById[5] = \"JUSSIVE\"] = 5;\n              values[valuesById[6] = \"SUBJUNCTIVE\"] = 6;\n              return values;\n            }();\n            /**\n             * Number enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Number\n             * @enum {string}\n             * @property {number} NUMBER_UNKNOWN=0 NUMBER_UNKNOWN value\n             * @property {number} SINGULAR=1 SINGULAR value\n             * @property {number} PLURAL=2 PLURAL value\n             * @property {number} DUAL=3 DUAL value\n             */\n\n\n            PartOfSpeech.Number = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"NUMBER_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"SINGULAR\"] = 1;\n              values[valuesById[2] = \"PLURAL\"] = 2;\n              values[valuesById[3] = \"DUAL\"] = 3;\n              return values;\n            }();\n            /**\n             * Person enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Person\n             * @enum {string}\n             * @property {number} PERSON_UNKNOWN=0 PERSON_UNKNOWN value\n             * @property {number} FIRST=1 FIRST value\n             * @property {number} SECOND=2 SECOND value\n             * @property {number} THIRD=3 THIRD value\n             * @property {number} REFLEXIVE_PERSON=4 REFLEXIVE_PERSON value\n             */\n\n\n            PartOfSpeech.Person = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"PERSON_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"FIRST\"] = 1;\n              values[valuesById[2] = \"SECOND\"] = 2;\n              values[valuesById[3] = \"THIRD\"] = 3;\n              values[valuesById[4] = \"REFLEXIVE_PERSON\"] = 4;\n              return values;\n            }();\n            /**\n             * Proper enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Proper\n             * @enum {string}\n             * @property {number} PROPER_UNKNOWN=0 PROPER_UNKNOWN value\n             * @property {number} PROPER=1 PROPER value\n             * @property {number} NOT_PROPER=2 NOT_PROPER value\n             */\n\n\n            PartOfSpeech.Proper = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"PROPER_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"PROPER\"] = 1;\n              values[valuesById[2] = \"NOT_PROPER\"] = 2;\n              return values;\n            }();\n            /**\n             * Reciprocity enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Reciprocity\n             * @enum {string}\n             * @property {number} RECIPROCITY_UNKNOWN=0 RECIPROCITY_UNKNOWN value\n             * @property {number} RECIPROCAL=1 RECIPROCAL value\n             * @property {number} NON_RECIPROCAL=2 NON_RECIPROCAL value\n             */\n\n\n            PartOfSpeech.Reciprocity = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"RECIPROCITY_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"RECIPROCAL\"] = 1;\n              values[valuesById[2] = \"NON_RECIPROCAL\"] = 2;\n              return values;\n            }();\n            /**\n             * Tense enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Tense\n             * @enum {string}\n             * @property {number} TENSE_UNKNOWN=0 TENSE_UNKNOWN value\n             * @property {number} CONDITIONAL_TENSE=1 CONDITIONAL_TENSE value\n             * @property {number} FUTURE=2 FUTURE value\n             * @property {number} PAST=3 PAST value\n             * @property {number} PRESENT=4 PRESENT value\n             * @property {number} IMPERFECT=5 IMPERFECT value\n             * @property {number} PLUPERFECT=6 PLUPERFECT value\n             */\n\n\n            PartOfSpeech.Tense = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"TENSE_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"CONDITIONAL_TENSE\"] = 1;\n              values[valuesById[2] = \"FUTURE\"] = 2;\n              values[valuesById[3] = \"PAST\"] = 3;\n              values[valuesById[4] = \"PRESENT\"] = 4;\n              values[valuesById[5] = \"IMPERFECT\"] = 5;\n              values[valuesById[6] = \"PLUPERFECT\"] = 6;\n              return values;\n            }();\n            /**\n             * Voice enum.\n             * @name google.cloud.language.v1.PartOfSpeech.Voice\n             * @enum {string}\n             * @property {number} VOICE_UNKNOWN=0 VOICE_UNKNOWN value\n             * @property {number} ACTIVE=1 ACTIVE value\n             * @property {number} CAUSATIVE=2 CAUSATIVE value\n             * @property {number} PASSIVE=3 PASSIVE value\n             */\n\n\n            PartOfSpeech.Voice = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"VOICE_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ACTIVE\"] = 1;\n              values[valuesById[2] = \"CAUSATIVE\"] = 2;\n              values[valuesById[3] = \"PASSIVE\"] = 3;\n              return values;\n            }();\n\n            return PartOfSpeech;\n          }();\n\n          v1.DependencyEdge = function () {\n            /**\n             * Properties of a DependencyEdge.\n             * @memberof google.cloud.language.v1\n             * @interface IDependencyEdge\n             * @property {number|null} [headTokenIndex] DependencyEdge headTokenIndex\n             * @property {google.cloud.language.v1.DependencyEdge.Label|null} [label] DependencyEdge label\n             */\n\n            /**\n             * Constructs a new DependencyEdge.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a DependencyEdge.\n             * @implements IDependencyEdge\n             * @constructor\n             * @param {google.cloud.language.v1.IDependencyEdge=} [properties] Properties to set\n             */\n            function DependencyEdge(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * DependencyEdge headTokenIndex.\n             * @member {number} headTokenIndex\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @instance\n             */\n\n\n            DependencyEdge.prototype.headTokenIndex = 0;\n            /**\n             * DependencyEdge label.\n             * @member {google.cloud.language.v1.DependencyEdge.Label} label\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @instance\n             */\n\n            DependencyEdge.prototype.label = 0;\n            /**\n             * Creates a new DependencyEdge instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @static\n             * @param {google.cloud.language.v1.IDependencyEdge=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.DependencyEdge} DependencyEdge instance\n             */\n\n            DependencyEdge.create = function create(properties) {\n              return new DependencyEdge(properties);\n            };\n            /**\n             * Encodes the specified DependencyEdge message. Does not implicitly {@link google.cloud.language.v1.DependencyEdge.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @static\n             * @param {google.cloud.language.v1.IDependencyEdge} message DependencyEdge message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            DependencyEdge.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\")) writer.uint32(\n              /* id 1, wireType 0 =*/\n              8).int32(message.headTokenIndex);\n              if (message.label != null && message.hasOwnProperty(\"label\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.label);\n              return writer;\n            };\n            /**\n             * Encodes the specified DependencyEdge message, length delimited. Does not implicitly {@link google.cloud.language.v1.DependencyEdge.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @static\n             * @param {google.cloud.language.v1.IDependencyEdge} message DependencyEdge message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            DependencyEdge.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a DependencyEdge message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.DependencyEdge} DependencyEdge\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            DependencyEdge.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.DependencyEdge();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.headTokenIndex = reader.int32();\n                    break;\n\n                  case 2:\n                    message.label = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a DependencyEdge message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.DependencyEdge} DependencyEdge\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            DependencyEdge.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a DependencyEdge message.\n             * @function verify\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            DependencyEdge.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\")) if (!$util.isInteger(message.headTokenIndex)) return \"headTokenIndex: integer expected\";\n              if (message.label != null && message.hasOwnProperty(\"label\")) switch (message.label) {\n                default:\n                  return \"label: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                case 15:\n                case 16:\n                case 17:\n                case 18:\n                case 19:\n                case 20:\n                case 21:\n                case 22:\n                case 23:\n                case 24:\n                case 25:\n                case 26:\n                case 27:\n                case 28:\n                case 29:\n                case 30:\n                case 31:\n                case 32:\n                case 33:\n                case 34:\n                case 35:\n                case 36:\n                case 37:\n                case 38:\n                case 39:\n                case 40:\n                case 41:\n                case 42:\n                case 43:\n                case 44:\n                case 45:\n                case 46:\n                case 47:\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                case 58:\n                case 59:\n                case 60:\n                case 61:\n                case 62:\n                case 63:\n                case 64:\n                case 65:\n                case 66:\n                case 67:\n                case 68:\n                case 69:\n                case 70:\n                case 71:\n                case 72:\n                case 73:\n                case 74:\n                case 75:\n                case 76:\n                case 77:\n                case 78:\n                case 79:\n                case 80:\n                case 81:\n                case 82:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates a DependencyEdge message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.DependencyEdge} DependencyEdge\n             */\n\n\n            DependencyEdge.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.DependencyEdge) return object;\n              var message = new $root.google.cloud.language.v1.DependencyEdge();\n              if (object.headTokenIndex != null) message.headTokenIndex = object.headTokenIndex | 0;\n\n              switch (object.label) {\n                case \"UNKNOWN\":\n                case 0:\n                  message.label = 0;\n                  break;\n\n                case \"ABBREV\":\n                case 1:\n                  message.label = 1;\n                  break;\n\n                case \"ACOMP\":\n                case 2:\n                  message.label = 2;\n                  break;\n\n                case \"ADVCL\":\n                case 3:\n                  message.label = 3;\n                  break;\n\n                case \"ADVMOD\":\n                case 4:\n                  message.label = 4;\n                  break;\n\n                case \"AMOD\":\n                case 5:\n                  message.label = 5;\n                  break;\n\n                case \"APPOS\":\n                case 6:\n                  message.label = 6;\n                  break;\n\n                case \"ATTR\":\n                case 7:\n                  message.label = 7;\n                  break;\n\n                case \"AUX\":\n                case 8:\n                  message.label = 8;\n                  break;\n\n                case \"AUXPASS\":\n                case 9:\n                  message.label = 9;\n                  break;\n\n                case \"CC\":\n                case 10:\n                  message.label = 10;\n                  break;\n\n                case \"CCOMP\":\n                case 11:\n                  message.label = 11;\n                  break;\n\n                case \"CONJ\":\n                case 12:\n                  message.label = 12;\n                  break;\n\n                case \"CSUBJ\":\n                case 13:\n                  message.label = 13;\n                  break;\n\n                case \"CSUBJPASS\":\n                case 14:\n                  message.label = 14;\n                  break;\n\n                case \"DEP\":\n                case 15:\n                  message.label = 15;\n                  break;\n\n                case \"DET\":\n                case 16:\n                  message.label = 16;\n                  break;\n\n                case \"DISCOURSE\":\n                case 17:\n                  message.label = 17;\n                  break;\n\n                case \"DOBJ\":\n                case 18:\n                  message.label = 18;\n                  break;\n\n                case \"EXPL\":\n                case 19:\n                  message.label = 19;\n                  break;\n\n                case \"GOESWITH\":\n                case 20:\n                  message.label = 20;\n                  break;\n\n                case \"IOBJ\":\n                case 21:\n                  message.label = 21;\n                  break;\n\n                case \"MARK\":\n                case 22:\n                  message.label = 22;\n                  break;\n\n                case \"MWE\":\n                case 23:\n                  message.label = 23;\n                  break;\n\n                case \"MWV\":\n                case 24:\n                  message.label = 24;\n                  break;\n\n                case \"NEG\":\n                case 25:\n                  message.label = 25;\n                  break;\n\n                case \"NN\":\n                case 26:\n                  message.label = 26;\n                  break;\n\n                case \"NPADVMOD\":\n                case 27:\n                  message.label = 27;\n                  break;\n\n                case \"NSUBJ\":\n                case 28:\n                  message.label = 28;\n                  break;\n\n                case \"NSUBJPASS\":\n                case 29:\n                  message.label = 29;\n                  break;\n\n                case \"NUM\":\n                case 30:\n                  message.label = 30;\n                  break;\n\n                case \"NUMBER\":\n                case 31:\n                  message.label = 31;\n                  break;\n\n                case \"P\":\n                case 32:\n                  message.label = 32;\n                  break;\n\n                case \"PARATAXIS\":\n                case 33:\n                  message.label = 33;\n                  break;\n\n                case \"PARTMOD\":\n                case 34:\n                  message.label = 34;\n                  break;\n\n                case \"PCOMP\":\n                case 35:\n                  message.label = 35;\n                  break;\n\n                case \"POBJ\":\n                case 36:\n                  message.label = 36;\n                  break;\n\n                case \"POSS\":\n                case 37:\n                  message.label = 37;\n                  break;\n\n                case \"POSTNEG\":\n                case 38:\n                  message.label = 38;\n                  break;\n\n                case \"PRECOMP\":\n                case 39:\n                  message.label = 39;\n                  break;\n\n                case \"PRECONJ\":\n                case 40:\n                  message.label = 40;\n                  break;\n\n                case \"PREDET\":\n                case 41:\n                  message.label = 41;\n                  break;\n\n                case \"PREF\":\n                case 42:\n                  message.label = 42;\n                  break;\n\n                case \"PREP\":\n                case 43:\n                  message.label = 43;\n                  break;\n\n                case \"PRONL\":\n                case 44:\n                  message.label = 44;\n                  break;\n\n                case \"PRT\":\n                case 45:\n                  message.label = 45;\n                  break;\n\n                case \"PS\":\n                case 46:\n                  message.label = 46;\n                  break;\n\n                case \"QUANTMOD\":\n                case 47:\n                  message.label = 47;\n                  break;\n\n                case \"RCMOD\":\n                case 48:\n                  message.label = 48;\n                  break;\n\n                case \"RCMODREL\":\n                case 49:\n                  message.label = 49;\n                  break;\n\n                case \"RDROP\":\n                case 50:\n                  message.label = 50;\n                  break;\n\n                case \"REF\":\n                case 51:\n                  message.label = 51;\n                  break;\n\n                case \"REMNANT\":\n                case 52:\n                  message.label = 52;\n                  break;\n\n                case \"REPARANDUM\":\n                case 53:\n                  message.label = 53;\n                  break;\n\n                case \"ROOT\":\n                case 54:\n                  message.label = 54;\n                  break;\n\n                case \"SNUM\":\n                case 55:\n                  message.label = 55;\n                  break;\n\n                case \"SUFF\":\n                case 56:\n                  message.label = 56;\n                  break;\n\n                case \"TMOD\":\n                case 57:\n                  message.label = 57;\n                  break;\n\n                case \"TOPIC\":\n                case 58:\n                  message.label = 58;\n                  break;\n\n                case \"VMOD\":\n                case 59:\n                  message.label = 59;\n                  break;\n\n                case \"VOCATIVE\":\n                case 60:\n                  message.label = 60;\n                  break;\n\n                case \"XCOMP\":\n                case 61:\n                  message.label = 61;\n                  break;\n\n                case \"SUFFIX\":\n                case 62:\n                  message.label = 62;\n                  break;\n\n                case \"TITLE\":\n                case 63:\n                  message.label = 63;\n                  break;\n\n                case \"ADVPHMOD\":\n                case 64:\n                  message.label = 64;\n                  break;\n\n                case \"AUXCAUS\":\n                case 65:\n                  message.label = 65;\n                  break;\n\n                case \"AUXVV\":\n                case 66:\n                  message.label = 66;\n                  break;\n\n                case \"DTMOD\":\n                case 67:\n                  message.label = 67;\n                  break;\n\n                case \"FOREIGN\":\n                case 68:\n                  message.label = 68;\n                  break;\n\n                case \"KW\":\n                case 69:\n                  message.label = 69;\n                  break;\n\n                case \"LIST\":\n                case 70:\n                  message.label = 70;\n                  break;\n\n                case \"NOMC\":\n                case 71:\n                  message.label = 71;\n                  break;\n\n                case \"NOMCSUBJ\":\n                case 72:\n                  message.label = 72;\n                  break;\n\n                case \"NOMCSUBJPASS\":\n                case 73:\n                  message.label = 73;\n                  break;\n\n                case \"NUMC\":\n                case 74:\n                  message.label = 74;\n                  break;\n\n                case \"COP\":\n                case 75:\n                  message.label = 75;\n                  break;\n\n                case \"DISLOCATED\":\n                case 76:\n                  message.label = 76;\n                  break;\n\n                case \"ASP\":\n                case 77:\n                  message.label = 77;\n                  break;\n\n                case \"GMOD\":\n                case 78:\n                  message.label = 78;\n                  break;\n\n                case \"GOBJ\":\n                case 79:\n                  message.label = 79;\n                  break;\n\n                case \"INFMOD\":\n                case 80:\n                  message.label = 80;\n                  break;\n\n                case \"MES\":\n                case 81:\n                  message.label = 81;\n                  break;\n\n                case \"NCOMP\":\n                case 82:\n                  message.label = 82;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a DependencyEdge message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @static\n             * @param {google.cloud.language.v1.DependencyEdge} message DependencyEdge\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            DependencyEdge.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.headTokenIndex = 0;\n                object.label = options.enums === String ? \"UNKNOWN\" : 0;\n              }\n\n              if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\")) object.headTokenIndex = message.headTokenIndex;\n              if (message.label != null && message.hasOwnProperty(\"label\")) object.label = options.enums === String ? $root.google.cloud.language.v1.DependencyEdge.Label[message.label] : message.label;\n              return object;\n            };\n            /**\n             * Converts this DependencyEdge to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.DependencyEdge\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            DependencyEdge.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Label enum.\n             * @name google.cloud.language.v1.DependencyEdge.Label\n             * @enum {string}\n             * @property {number} UNKNOWN=0 UNKNOWN value\n             * @property {number} ABBREV=1 ABBREV value\n             * @property {number} ACOMP=2 ACOMP value\n             * @property {number} ADVCL=3 ADVCL value\n             * @property {number} ADVMOD=4 ADVMOD value\n             * @property {number} AMOD=5 AMOD value\n             * @property {number} APPOS=6 APPOS value\n             * @property {number} ATTR=7 ATTR value\n             * @property {number} AUX=8 AUX value\n             * @property {number} AUXPASS=9 AUXPASS value\n             * @property {number} CC=10 CC value\n             * @property {number} CCOMP=11 CCOMP value\n             * @property {number} CONJ=12 CONJ value\n             * @property {number} CSUBJ=13 CSUBJ value\n             * @property {number} CSUBJPASS=14 CSUBJPASS value\n             * @property {number} DEP=15 DEP value\n             * @property {number} DET=16 DET value\n             * @property {number} DISCOURSE=17 DISCOURSE value\n             * @property {number} DOBJ=18 DOBJ value\n             * @property {number} EXPL=19 EXPL value\n             * @property {number} GOESWITH=20 GOESWITH value\n             * @property {number} IOBJ=21 IOBJ value\n             * @property {number} MARK=22 MARK value\n             * @property {number} MWE=23 MWE value\n             * @property {number} MWV=24 MWV value\n             * @property {number} NEG=25 NEG value\n             * @property {number} NN=26 NN value\n             * @property {number} NPADVMOD=27 NPADVMOD value\n             * @property {number} NSUBJ=28 NSUBJ value\n             * @property {number} NSUBJPASS=29 NSUBJPASS value\n             * @property {number} NUM=30 NUM value\n             * @property {number} NUMBER=31 NUMBER value\n             * @property {number} P=32 P value\n             * @property {number} PARATAXIS=33 PARATAXIS value\n             * @property {number} PARTMOD=34 PARTMOD value\n             * @property {number} PCOMP=35 PCOMP value\n             * @property {number} POBJ=36 POBJ value\n             * @property {number} POSS=37 POSS value\n             * @property {number} POSTNEG=38 POSTNEG value\n             * @property {number} PRECOMP=39 PRECOMP value\n             * @property {number} PRECONJ=40 PRECONJ value\n             * @property {number} PREDET=41 PREDET value\n             * @property {number} PREF=42 PREF value\n             * @property {number} PREP=43 PREP value\n             * @property {number} PRONL=44 PRONL value\n             * @property {number} PRT=45 PRT value\n             * @property {number} PS=46 PS value\n             * @property {number} QUANTMOD=47 QUANTMOD value\n             * @property {number} RCMOD=48 RCMOD value\n             * @property {number} RCMODREL=49 RCMODREL value\n             * @property {number} RDROP=50 RDROP value\n             * @property {number} REF=51 REF value\n             * @property {number} REMNANT=52 REMNANT value\n             * @property {number} REPARANDUM=53 REPARANDUM value\n             * @property {number} ROOT=54 ROOT value\n             * @property {number} SNUM=55 SNUM value\n             * @property {number} SUFF=56 SUFF value\n             * @property {number} TMOD=57 TMOD value\n             * @property {number} TOPIC=58 TOPIC value\n             * @property {number} VMOD=59 VMOD value\n             * @property {number} VOCATIVE=60 VOCATIVE value\n             * @property {number} XCOMP=61 XCOMP value\n             * @property {number} SUFFIX=62 SUFFIX value\n             * @property {number} TITLE=63 TITLE value\n             * @property {number} ADVPHMOD=64 ADVPHMOD value\n             * @property {number} AUXCAUS=65 AUXCAUS value\n             * @property {number} AUXVV=66 AUXVV value\n             * @property {number} DTMOD=67 DTMOD value\n             * @property {number} FOREIGN=68 FOREIGN value\n             * @property {number} KW=69 KW value\n             * @property {number} LIST=70 LIST value\n             * @property {number} NOMC=71 NOMC value\n             * @property {number} NOMCSUBJ=72 NOMCSUBJ value\n             * @property {number} NOMCSUBJPASS=73 NOMCSUBJPASS value\n             * @property {number} NUMC=74 NUMC value\n             * @property {number} COP=75 COP value\n             * @property {number} DISLOCATED=76 DISLOCATED value\n             * @property {number} ASP=77 ASP value\n             * @property {number} GMOD=78 GMOD value\n             * @property {number} GOBJ=79 GOBJ value\n             * @property {number} INFMOD=80 INFMOD value\n             * @property {number} MES=81 MES value\n             * @property {number} NCOMP=82 NCOMP value\n             */\n\n\n            DependencyEdge.Label = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ABBREV\"] = 1;\n              values[valuesById[2] = \"ACOMP\"] = 2;\n              values[valuesById[3] = \"ADVCL\"] = 3;\n              values[valuesById[4] = \"ADVMOD\"] = 4;\n              values[valuesById[5] = \"AMOD\"] = 5;\n              values[valuesById[6] = \"APPOS\"] = 6;\n              values[valuesById[7] = \"ATTR\"] = 7;\n              values[valuesById[8] = \"AUX\"] = 8;\n              values[valuesById[9] = \"AUXPASS\"] = 9;\n              values[valuesById[10] = \"CC\"] = 10;\n              values[valuesById[11] = \"CCOMP\"] = 11;\n              values[valuesById[12] = \"CONJ\"] = 12;\n              values[valuesById[13] = \"CSUBJ\"] = 13;\n              values[valuesById[14] = \"CSUBJPASS\"] = 14;\n              values[valuesById[15] = \"DEP\"] = 15;\n              values[valuesById[16] = \"DET\"] = 16;\n              values[valuesById[17] = \"DISCOURSE\"] = 17;\n              values[valuesById[18] = \"DOBJ\"] = 18;\n              values[valuesById[19] = \"EXPL\"] = 19;\n              values[valuesById[20] = \"GOESWITH\"] = 20;\n              values[valuesById[21] = \"IOBJ\"] = 21;\n              values[valuesById[22] = \"MARK\"] = 22;\n              values[valuesById[23] = \"MWE\"] = 23;\n              values[valuesById[24] = \"MWV\"] = 24;\n              values[valuesById[25] = \"NEG\"] = 25;\n              values[valuesById[26] = \"NN\"] = 26;\n              values[valuesById[27] = \"NPADVMOD\"] = 27;\n              values[valuesById[28] = \"NSUBJ\"] = 28;\n              values[valuesById[29] = \"NSUBJPASS\"] = 29;\n              values[valuesById[30] = \"NUM\"] = 30;\n              values[valuesById[31] = \"NUMBER\"] = 31;\n              values[valuesById[32] = \"P\"] = 32;\n              values[valuesById[33] = \"PARATAXIS\"] = 33;\n              values[valuesById[34] = \"PARTMOD\"] = 34;\n              values[valuesById[35] = \"PCOMP\"] = 35;\n              values[valuesById[36] = \"POBJ\"] = 36;\n              values[valuesById[37] = \"POSS\"] = 37;\n              values[valuesById[38] = \"POSTNEG\"] = 38;\n              values[valuesById[39] = \"PRECOMP\"] = 39;\n              values[valuesById[40] = \"PRECONJ\"] = 40;\n              values[valuesById[41] = \"PREDET\"] = 41;\n              values[valuesById[42] = \"PREF\"] = 42;\n              values[valuesById[43] = \"PREP\"] = 43;\n              values[valuesById[44] = \"PRONL\"] = 44;\n              values[valuesById[45] = \"PRT\"] = 45;\n              values[valuesById[46] = \"PS\"] = 46;\n              values[valuesById[47] = \"QUANTMOD\"] = 47;\n              values[valuesById[48] = \"RCMOD\"] = 48;\n              values[valuesById[49] = \"RCMODREL\"] = 49;\n              values[valuesById[50] = \"RDROP\"] = 50;\n              values[valuesById[51] = \"REF\"] = 51;\n              values[valuesById[52] = \"REMNANT\"] = 52;\n              values[valuesById[53] = \"REPARANDUM\"] = 53;\n              values[valuesById[54] = \"ROOT\"] = 54;\n              values[valuesById[55] = \"SNUM\"] = 55;\n              values[valuesById[56] = \"SUFF\"] = 56;\n              values[valuesById[57] = \"TMOD\"] = 57;\n              values[valuesById[58] = \"TOPIC\"] = 58;\n              values[valuesById[59] = \"VMOD\"] = 59;\n              values[valuesById[60] = \"VOCATIVE\"] = 60;\n              values[valuesById[61] = \"XCOMP\"] = 61;\n              values[valuesById[62] = \"SUFFIX\"] = 62;\n              values[valuesById[63] = \"TITLE\"] = 63;\n              values[valuesById[64] = \"ADVPHMOD\"] = 64;\n              values[valuesById[65] = \"AUXCAUS\"] = 65;\n              values[valuesById[66] = \"AUXVV\"] = 66;\n              values[valuesById[67] = \"DTMOD\"] = 67;\n              values[valuesById[68] = \"FOREIGN\"] = 68;\n              values[valuesById[69] = \"KW\"] = 69;\n              values[valuesById[70] = \"LIST\"] = 70;\n              values[valuesById[71] = \"NOMC\"] = 71;\n              values[valuesById[72] = \"NOMCSUBJ\"] = 72;\n              values[valuesById[73] = \"NOMCSUBJPASS\"] = 73;\n              values[valuesById[74] = \"NUMC\"] = 74;\n              values[valuesById[75] = \"COP\"] = 75;\n              values[valuesById[76] = \"DISLOCATED\"] = 76;\n              values[valuesById[77] = \"ASP\"] = 77;\n              values[valuesById[78] = \"GMOD\"] = 78;\n              values[valuesById[79] = \"GOBJ\"] = 79;\n              values[valuesById[80] = \"INFMOD\"] = 80;\n              values[valuesById[81] = \"MES\"] = 81;\n              values[valuesById[82] = \"NCOMP\"] = 82;\n              return values;\n            }();\n\n            return DependencyEdge;\n          }();\n\n          v1.EntityMention = function () {\n            /**\n             * Properties of an EntityMention.\n             * @memberof google.cloud.language.v1\n             * @interface IEntityMention\n             * @property {google.cloud.language.v1.ITextSpan|null} [text] EntityMention text\n             * @property {google.cloud.language.v1.EntityMention.Type|null} [type] EntityMention type\n             * @property {google.cloud.language.v1.ISentiment|null} [sentiment] EntityMention sentiment\n             */\n\n            /**\n             * Constructs a new EntityMention.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an EntityMention.\n             * @implements IEntityMention\n             * @constructor\n             * @param {google.cloud.language.v1.IEntityMention=} [properties] Properties to set\n             */\n            function EntityMention(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * EntityMention text.\n             * @member {google.cloud.language.v1.ITextSpan|null|undefined} text\n             * @memberof google.cloud.language.v1.EntityMention\n             * @instance\n             */\n\n\n            EntityMention.prototype.text = null;\n            /**\n             * EntityMention type.\n             * @member {google.cloud.language.v1.EntityMention.Type} type\n             * @memberof google.cloud.language.v1.EntityMention\n             * @instance\n             */\n\n            EntityMention.prototype.type = 0;\n            /**\n             * EntityMention sentiment.\n             * @member {google.cloud.language.v1.ISentiment|null|undefined} sentiment\n             * @memberof google.cloud.language.v1.EntityMention\n             * @instance\n             */\n\n            EntityMention.prototype.sentiment = null;\n            /**\n             * Creates a new EntityMention instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.EntityMention\n             * @static\n             * @param {google.cloud.language.v1.IEntityMention=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.EntityMention} EntityMention instance\n             */\n\n            EntityMention.create = function create(properties) {\n              return new EntityMention(properties);\n            };\n            /**\n             * Encodes the specified EntityMention message. Does not implicitly {@link google.cloud.language.v1.EntityMention.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.EntityMention\n             * @static\n             * @param {google.cloud.language.v1.IEntityMention} message EntityMention message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            EntityMention.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.text != null && message.hasOwnProperty(\"text\")) $root.google.cloud.language.v1.TextSpan.encode(message.text, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.type);\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) $root.google.cloud.language.v1.Sentiment.encode(message.sentiment, writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified EntityMention message, length delimited. Does not implicitly {@link google.cloud.language.v1.EntityMention.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.EntityMention\n             * @static\n             * @param {google.cloud.language.v1.IEntityMention} message EntityMention message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            EntityMention.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an EntityMention message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.EntityMention\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.EntityMention} EntityMention\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            EntityMention.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.EntityMention();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.text = $root.google.cloud.language.v1.TextSpan.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.type = reader.int32();\n                    break;\n\n                  case 3:\n                    message.sentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an EntityMention message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.EntityMention\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.EntityMention} EntityMention\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            EntityMention.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an EntityMention message.\n             * @function verify\n             * @memberof google.cloud.language.v1.EntityMention\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            EntityMention.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) {\n                var error = $root.google.cloud.language.v1.TextSpan.verify(message.text);\n                if (error) return \"text.\" + error;\n              }\n\n              if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n                default:\n                  return \"type: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                  break;\n              }\n\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                var error = $root.google.cloud.language.v1.Sentiment.verify(message.sentiment);\n                if (error) return \"sentiment.\" + error;\n              }\n\n              return null;\n            };\n            /**\n             * Creates an EntityMention message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.EntityMention\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.EntityMention} EntityMention\n             */\n\n\n            EntityMention.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.EntityMention) return object;\n              var message = new $root.google.cloud.language.v1.EntityMention();\n\n              if (object.text != null) {\n                if (typeof object.text !== \"object\") throw TypeError(\".google.cloud.language.v1.EntityMention.text: object expected\");\n                message.text = $root.google.cloud.language.v1.TextSpan.fromObject(object.text);\n              }\n\n              switch (object.type) {\n                case \"TYPE_UNKNOWN\":\n                case 0:\n                  message.type = 0;\n                  break;\n\n                case \"PROPER\":\n                case 1:\n                  message.type = 1;\n                  break;\n\n                case \"COMMON\":\n                case 2:\n                  message.type = 2;\n                  break;\n              }\n\n              if (object.sentiment != null) {\n                if (typeof object.sentiment !== \"object\") throw TypeError(\".google.cloud.language.v1.EntityMention.sentiment: object expected\");\n                message.sentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.sentiment);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an EntityMention message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.EntityMention\n             * @static\n             * @param {google.cloud.language.v1.EntityMention} message EntityMention\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            EntityMention.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.text = null;\n                object.type = options.enums === String ? \"TYPE_UNKNOWN\" : 0;\n                object.sentiment = null;\n              }\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) object.text = $root.google.cloud.language.v1.TextSpan.toObject(message.text, options);\n              if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.google.cloud.language.v1.EntityMention.Type[message.type] : message.type;\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) object.sentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.sentiment, options);\n              return object;\n            };\n            /**\n             * Converts this EntityMention to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.EntityMention\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            EntityMention.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Type enum.\n             * @name google.cloud.language.v1.EntityMention.Type\n             * @enum {string}\n             * @property {number} TYPE_UNKNOWN=0 TYPE_UNKNOWN value\n             * @property {number} PROPER=1 PROPER value\n             * @property {number} COMMON=2 COMMON value\n             */\n\n\n            EntityMention.Type = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"TYPE_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"PROPER\"] = 1;\n              values[valuesById[2] = \"COMMON\"] = 2;\n              return values;\n            }();\n\n            return EntityMention;\n          }();\n\n          v1.TextSpan = function () {\n            /**\n             * Properties of a TextSpan.\n             * @memberof google.cloud.language.v1\n             * @interface ITextSpan\n             * @property {string|null} [content] TextSpan content\n             * @property {number|null} [beginOffset] TextSpan beginOffset\n             */\n\n            /**\n             * Constructs a new TextSpan.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a TextSpan.\n             * @implements ITextSpan\n             * @constructor\n             * @param {google.cloud.language.v1.ITextSpan=} [properties] Properties to set\n             */\n            function TextSpan(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * TextSpan content.\n             * @member {string} content\n             * @memberof google.cloud.language.v1.TextSpan\n             * @instance\n             */\n\n\n            TextSpan.prototype.content = \"\";\n            /**\n             * TextSpan beginOffset.\n             * @member {number} beginOffset\n             * @memberof google.cloud.language.v1.TextSpan\n             * @instance\n             */\n\n            TextSpan.prototype.beginOffset = 0;\n            /**\n             * Creates a new TextSpan instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.TextSpan\n             * @static\n             * @param {google.cloud.language.v1.ITextSpan=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.TextSpan} TextSpan instance\n             */\n\n            TextSpan.create = function create(properties) {\n              return new TextSpan(properties);\n            };\n            /**\n             * Encodes the specified TextSpan message. Does not implicitly {@link google.cloud.language.v1.TextSpan.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.TextSpan\n             * @static\n             * @param {google.cloud.language.v1.ITextSpan} message TextSpan message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            TextSpan.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).string(message.content);\n              if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.beginOffset);\n              return writer;\n            };\n            /**\n             * Encodes the specified TextSpan message, length delimited. Does not implicitly {@link google.cloud.language.v1.TextSpan.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.TextSpan\n             * @static\n             * @param {google.cloud.language.v1.ITextSpan} message TextSpan message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            TextSpan.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a TextSpan message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.TextSpan\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.TextSpan} TextSpan\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            TextSpan.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.TextSpan();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.content = reader.string();\n                    break;\n\n                  case 2:\n                    message.beginOffset = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a TextSpan message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.TextSpan\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.TextSpan} TextSpan\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            TextSpan.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a TextSpan message.\n             * @function verify\n             * @memberof google.cloud.language.v1.TextSpan\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            TextSpan.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.content != null && message.hasOwnProperty(\"content\")) if (!$util.isString(message.content)) return \"content: string expected\";\n              if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\")) if (!$util.isInteger(message.beginOffset)) return \"beginOffset: integer expected\";\n              return null;\n            };\n            /**\n             * Creates a TextSpan message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.TextSpan\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.TextSpan} TextSpan\n             */\n\n\n            TextSpan.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.TextSpan) return object;\n              var message = new $root.google.cloud.language.v1.TextSpan();\n              if (object.content != null) message.content = String(object.content);\n              if (object.beginOffset != null) message.beginOffset = object.beginOffset | 0;\n              return message;\n            };\n            /**\n             * Creates a plain object from a TextSpan message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.TextSpan\n             * @static\n             * @param {google.cloud.language.v1.TextSpan} message TextSpan\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            TextSpan.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.content = \"\";\n                object.beginOffset = 0;\n              }\n\n              if (message.content != null && message.hasOwnProperty(\"content\")) object.content = message.content;\n              if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\")) object.beginOffset = message.beginOffset;\n              return object;\n            };\n            /**\n             * Converts this TextSpan to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.TextSpan\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            TextSpan.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return TextSpan;\n          }();\n\n          v1.ClassificationCategory = function () {\n            /**\n             * Properties of a ClassificationCategory.\n             * @memberof google.cloud.language.v1\n             * @interface IClassificationCategory\n             * @property {string|null} [name] ClassificationCategory name\n             * @property {number|null} [confidence] ClassificationCategory confidence\n             */\n\n            /**\n             * Constructs a new ClassificationCategory.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a ClassificationCategory.\n             * @implements IClassificationCategory\n             * @constructor\n             * @param {google.cloud.language.v1.IClassificationCategory=} [properties] Properties to set\n             */\n            function ClassificationCategory(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * ClassificationCategory name.\n             * @member {string} name\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @instance\n             */\n\n\n            ClassificationCategory.prototype.name = \"\";\n            /**\n             * ClassificationCategory confidence.\n             * @member {number} confidence\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @instance\n             */\n\n            ClassificationCategory.prototype.confidence = 0;\n            /**\n             * Creates a new ClassificationCategory instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @static\n             * @param {google.cloud.language.v1.IClassificationCategory=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.ClassificationCategory} ClassificationCategory instance\n             */\n\n            ClassificationCategory.create = function create(properties) {\n              return new ClassificationCategory(properties);\n            };\n            /**\n             * Encodes the specified ClassificationCategory message. Does not implicitly {@link google.cloud.language.v1.ClassificationCategory.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @static\n             * @param {google.cloud.language.v1.IClassificationCategory} message ClassificationCategory message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassificationCategory.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).string(message.name);\n              if (message.confidence != null && message.hasOwnProperty(\"confidence\")) writer.uint32(\n              /* id 2, wireType 5 =*/\n              21).float(message.confidence);\n              return writer;\n            };\n            /**\n             * Encodes the specified ClassificationCategory message, length delimited. Does not implicitly {@link google.cloud.language.v1.ClassificationCategory.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @static\n             * @param {google.cloud.language.v1.IClassificationCategory} message ClassificationCategory message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassificationCategory.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a ClassificationCategory message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.ClassificationCategory} ClassificationCategory\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassificationCategory.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.ClassificationCategory();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.name = reader.string();\n                    break;\n\n                  case 2:\n                    message.confidence = reader.float();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a ClassificationCategory message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.ClassificationCategory} ClassificationCategory\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassificationCategory.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a ClassificationCategory message.\n             * @function verify\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            ClassificationCategory.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n              if (message.confidence != null && message.hasOwnProperty(\"confidence\")) if (typeof message.confidence !== \"number\") return \"confidence: number expected\";\n              return null;\n            };\n            /**\n             * Creates a ClassificationCategory message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.ClassificationCategory} ClassificationCategory\n             */\n\n\n            ClassificationCategory.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.ClassificationCategory) return object;\n              var message = new $root.google.cloud.language.v1.ClassificationCategory();\n              if (object.name != null) message.name = String(object.name);\n              if (object.confidence != null) message.confidence = Number(object.confidence);\n              return message;\n            };\n            /**\n             * Creates a plain object from a ClassificationCategory message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @static\n             * @param {google.cloud.language.v1.ClassificationCategory} message ClassificationCategory\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            ClassificationCategory.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.name = \"\";\n                object.confidence = 0;\n              }\n\n              if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n              if (message.confidence != null && message.hasOwnProperty(\"confidence\")) object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n              return object;\n            };\n            /**\n             * Converts this ClassificationCategory to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.ClassificationCategory\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            ClassificationCategory.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ClassificationCategory;\n          }();\n\n          v1.AnalyzeSentimentRequest = function () {\n            /**\n             * Properties of an AnalyzeSentimentRequest.\n             * @memberof google.cloud.language.v1\n             * @interface IAnalyzeSentimentRequest\n             * @property {google.cloud.language.v1.IDocument|null} [document] AnalyzeSentimentRequest document\n             * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnalyzeSentimentRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnalyzeSentimentRequest.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnalyzeSentimentRequest.\n             * @implements IAnalyzeSentimentRequest\n             * @constructor\n             * @param {google.cloud.language.v1.IAnalyzeSentimentRequest=} [properties] Properties to set\n             */\n            function AnalyzeSentimentRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeSentimentRequest document.\n             * @member {google.cloud.language.v1.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @instance\n             */\n\n\n            AnalyzeSentimentRequest.prototype.document = null;\n            /**\n             * AnalyzeSentimentRequest encodingType.\n             * @member {google.cloud.language.v1.EncodingType} encodingType\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @instance\n             */\n\n            AnalyzeSentimentRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnalyzeSentimentRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSentimentRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnalyzeSentimentRequest} AnalyzeSentimentRequest instance\n             */\n\n            AnalyzeSentimentRequest.create = function create(properties) {\n              return new AnalyzeSentimentRequest(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeSentimentRequest message. Does not implicitly {@link google.cloud.language.v1.AnalyzeSentimentRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSentimentRequest} message AnalyzeSentimentRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSentimentRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeSentimentRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeSentimentRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSentimentRequest} message AnalyzeSentimentRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSentimentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeSentimentRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSentimentRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnalyzeSentimentRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeSentimentRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSentimentRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeSentimentRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeSentimentRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnalyzeSentimentRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n             */\n\n\n            AnalyzeSentimentRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnalyzeSentimentRequest) return object;\n              var message = new $root.google.cloud.language.v1.AnalyzeSentimentRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeSentimentRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeSentimentRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @static\n             * @param {google.cloud.language.v1.AnalyzeSentimentRequest} message AnalyzeSentimentRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeSentimentRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeSentimentRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeSentimentRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeSentimentRequest;\n          }();\n\n          v1.AnalyzeSentimentResponse = function () {\n            /**\n             * Properties of an AnalyzeSentimentResponse.\n             * @memberof google.cloud.language.v1\n             * @interface IAnalyzeSentimentResponse\n             * @property {google.cloud.language.v1.ISentiment|null} [documentSentiment] AnalyzeSentimentResponse documentSentiment\n             * @property {string|null} [language] AnalyzeSentimentResponse language\n             * @property {Array.<google.cloud.language.v1.ISentence>|null} [sentences] AnalyzeSentimentResponse sentences\n             */\n\n            /**\n             * Constructs a new AnalyzeSentimentResponse.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnalyzeSentimentResponse.\n             * @implements IAnalyzeSentimentResponse\n             * @constructor\n             * @param {google.cloud.language.v1.IAnalyzeSentimentResponse=} [properties] Properties to set\n             */\n            function AnalyzeSentimentResponse(properties) {\n              this.sentences = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeSentimentResponse documentSentiment.\n             * @member {google.cloud.language.v1.ISentiment|null|undefined} documentSentiment\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @instance\n             */\n\n\n            AnalyzeSentimentResponse.prototype.documentSentiment = null;\n            /**\n             * AnalyzeSentimentResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @instance\n             */\n\n            AnalyzeSentimentResponse.prototype.language = \"\";\n            /**\n             * AnalyzeSentimentResponse sentences.\n             * @member {Array.<google.cloud.language.v1.ISentence>} sentences\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @instance\n             */\n\n            AnalyzeSentimentResponse.prototype.sentences = $util.emptyArray;\n            /**\n             * Creates a new AnalyzeSentimentResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSentimentResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnalyzeSentimentResponse} AnalyzeSentimentResponse instance\n             */\n\n            AnalyzeSentimentResponse.create = function create(properties) {\n              return new AnalyzeSentimentResponse(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeSentimentResponse message. Does not implicitly {@link google.cloud.language.v1.AnalyzeSentimentResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSentimentResponse} message AnalyzeSentimentResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSentimentResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) $root.google.cloud.language.v1.Sentiment.encode(message.documentSentiment, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.language);\n              if (message.sentences != null && message.sentences.length) for (var i = 0; i < message.sentences.length; ++i) $root.google.cloud.language.v1.Sentence.encode(message.sentences[i], writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeSentimentResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeSentimentResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSentimentResponse} message AnalyzeSentimentResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSentimentResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeSentimentResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSentimentResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnalyzeSentimentResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.documentSentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.language = reader.string();\n                    break;\n\n                  case 3:\n                    if (!(message.sentences && message.sentences.length)) message.sentences = [];\n                    message.sentences.push($root.google.cloud.language.v1.Sentence.decode(reader, reader.uint32()));\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeSentimentResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSentimentResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeSentimentResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeSentimentResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) {\n                var error = $root.google.cloud.language.v1.Sentiment.verify(message.documentSentiment);\n                if (error) return \"documentSentiment.\" + error;\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n\n              if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                if (!Array.isArray(message.sentences)) return \"sentences: array expected\";\n\n                for (var i = 0; i < message.sentences.length; ++i) {\n                  var error = $root.google.cloud.language.v1.Sentence.verify(message.sentences[i]);\n                  if (error) return \"sentences.\" + error;\n                }\n              }\n\n              return null;\n            };\n            /**\n             * Creates an AnalyzeSentimentResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n             */\n\n\n            AnalyzeSentimentResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnalyzeSentimentResponse) return object;\n              var message = new $root.google.cloud.language.v1.AnalyzeSentimentResponse();\n\n              if (object.documentSentiment != null) {\n                if (typeof object.documentSentiment !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeSentimentResponse.documentSentiment: object expected\");\n                message.documentSentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.documentSentiment);\n              }\n\n              if (object.language != null) message.language = String(object.language);\n\n              if (object.sentences) {\n                if (!Array.isArray(object.sentences)) throw TypeError(\".google.cloud.language.v1.AnalyzeSentimentResponse.sentences: array expected\");\n                message.sentences = [];\n\n                for (var i = 0; i < object.sentences.length; ++i) {\n                  if (typeof object.sentences[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeSentimentResponse.sentences: object expected\");\n                  message.sentences[i] = $root.google.cloud.language.v1.Sentence.fromObject(object.sentences[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeSentimentResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @static\n             * @param {google.cloud.language.v1.AnalyzeSentimentResponse} message AnalyzeSentimentResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeSentimentResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.sentences = [];\n\n              if (options.defaults) {\n                object.documentSentiment = null;\n                object.language = \"\";\n              }\n\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) object.documentSentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.documentSentiment, options);\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n\n              if (message.sentences && message.sentences.length) {\n                object.sentences = [];\n\n                for (var j = 0; j < message.sentences.length; ++j) object.sentences[j] = $root.google.cloud.language.v1.Sentence.toObject(message.sentences[j], options);\n              }\n\n              return object;\n            };\n            /**\n             * Converts this AnalyzeSentimentResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeSentimentResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeSentimentResponse;\n          }();\n\n          v1.AnalyzeEntitySentimentRequest = function () {\n            /**\n             * Properties of an AnalyzeEntitySentimentRequest.\n             * @memberof google.cloud.language.v1\n             * @interface IAnalyzeEntitySentimentRequest\n             * @property {google.cloud.language.v1.IDocument|null} [document] AnalyzeEntitySentimentRequest document\n             * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnalyzeEntitySentimentRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnalyzeEntitySentimentRequest.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnalyzeEntitySentimentRequest.\n             * @implements IAnalyzeEntitySentimentRequest\n             * @constructor\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest=} [properties] Properties to set\n             */\n            function AnalyzeEntitySentimentRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeEntitySentimentRequest document.\n             * @member {google.cloud.language.v1.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @instance\n             */\n\n\n            AnalyzeEntitySentimentRequest.prototype.document = null;\n            /**\n             * AnalyzeEntitySentimentRequest encodingType.\n             * @member {google.cloud.language.v1.EncodingType} encodingType\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @instance\n             */\n\n            AnalyzeEntitySentimentRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnalyzeEntitySentimentRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest instance\n             */\n\n            AnalyzeEntitySentimentRequest.create = function create(properties) {\n              return new AnalyzeEntitySentimentRequest(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeEntitySentimentRequest message. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitySentimentRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitySentimentRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeEntitySentimentRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitySentimentRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitySentimentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeEntitySentimentRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitySentimentRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnalyzeEntitySentimentRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeEntitySentimentRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitySentimentRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeEntitySentimentRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeEntitySentimentRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnalyzeEntitySentimentRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n             */\n\n\n            AnalyzeEntitySentimentRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnalyzeEntitySentimentRequest) return object;\n              var message = new $root.google.cloud.language.v1.AnalyzeEntitySentimentRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeEntitySentimentRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeEntitySentimentRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {google.cloud.language.v1.AnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeEntitySentimentRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeEntitySentimentRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeEntitySentimentRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeEntitySentimentRequest;\n          }();\n\n          v1.AnalyzeEntitySentimentResponse = function () {\n            /**\n             * Properties of an AnalyzeEntitySentimentResponse.\n             * @memberof google.cloud.language.v1\n             * @interface IAnalyzeEntitySentimentResponse\n             * @property {Array.<google.cloud.language.v1.IEntity>|null} [entities] AnalyzeEntitySentimentResponse entities\n             * @property {string|null} [language] AnalyzeEntitySentimentResponse language\n             */\n\n            /**\n             * Constructs a new AnalyzeEntitySentimentResponse.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnalyzeEntitySentimentResponse.\n             * @implements IAnalyzeEntitySentimentResponse\n             * @constructor\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentResponse=} [properties] Properties to set\n             */\n            function AnalyzeEntitySentimentResponse(properties) {\n              this.entities = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeEntitySentimentResponse entities.\n             * @member {Array.<google.cloud.language.v1.IEntity>} entities\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @instance\n             */\n\n\n            AnalyzeEntitySentimentResponse.prototype.entities = $util.emptyArray;\n            /**\n             * AnalyzeEntitySentimentResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @instance\n             */\n\n            AnalyzeEntitySentimentResponse.prototype.language = \"\";\n            /**\n             * Creates a new AnalyzeEntitySentimentResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse instance\n             */\n\n            AnalyzeEntitySentimentResponse.create = function create(properties) {\n              return new AnalyzeEntitySentimentResponse(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeEntitySentimentResponse message. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitySentimentResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitySentimentResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.entities != null && message.entities.length) for (var i = 0; i < message.entities.length; ++i) $root.google.cloud.language.v1.Entity.encode(message.entities[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.language);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeEntitySentimentResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitySentimentResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitySentimentResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeEntitySentimentResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitySentimentResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnalyzeEntitySentimentResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.entities && message.entities.length)) message.entities = [];\n                    message.entities.push($root.google.cloud.language.v1.Entity.decode(reader, reader.uint32()));\n                    break;\n\n                  case 2:\n                    message.language = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeEntitySentimentResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitySentimentResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeEntitySentimentResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeEntitySentimentResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                if (!Array.isArray(message.entities)) return \"entities: array expected\";\n\n                for (var i = 0; i < message.entities.length; ++i) {\n                  var error = $root.google.cloud.language.v1.Entity.verify(message.entities[i]);\n                  if (error) return \"entities.\" + error;\n                }\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n              return null;\n            };\n            /**\n             * Creates an AnalyzeEntitySentimentResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n             */\n\n\n            AnalyzeEntitySentimentResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnalyzeEntitySentimentResponse) return object;\n              var message = new $root.google.cloud.language.v1.AnalyzeEntitySentimentResponse();\n\n              if (object.entities) {\n                if (!Array.isArray(object.entities)) throw TypeError(\".google.cloud.language.v1.AnalyzeEntitySentimentResponse.entities: array expected\");\n                message.entities = [];\n\n                for (var i = 0; i < object.entities.length; ++i) {\n                  if (typeof object.entities[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeEntitySentimentResponse.entities: object expected\");\n                  message.entities[i] = $root.google.cloud.language.v1.Entity.fromObject(object.entities[i]);\n                }\n              }\n\n              if (object.language != null) message.language = String(object.language);\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeEntitySentimentResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {google.cloud.language.v1.AnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeEntitySentimentResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.entities = [];\n              if (options.defaults) object.language = \"\";\n\n              if (message.entities && message.entities.length) {\n                object.entities = [];\n\n                for (var j = 0; j < message.entities.length; ++j) object.entities[j] = $root.google.cloud.language.v1.Entity.toObject(message.entities[j], options);\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeEntitySentimentResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeEntitySentimentResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeEntitySentimentResponse;\n          }();\n\n          v1.AnalyzeEntitiesRequest = function () {\n            /**\n             * Properties of an AnalyzeEntitiesRequest.\n             * @memberof google.cloud.language.v1\n             * @interface IAnalyzeEntitiesRequest\n             * @property {google.cloud.language.v1.IDocument|null} [document] AnalyzeEntitiesRequest document\n             * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnalyzeEntitiesRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnalyzeEntitiesRequest.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnalyzeEntitiesRequest.\n             * @implements IAnalyzeEntitiesRequest\n             * @constructor\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest=} [properties] Properties to set\n             */\n            function AnalyzeEntitiesRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeEntitiesRequest document.\n             * @member {google.cloud.language.v1.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @instance\n             */\n\n\n            AnalyzeEntitiesRequest.prototype.document = null;\n            /**\n             * AnalyzeEntitiesRequest encodingType.\n             * @member {google.cloud.language.v1.EncodingType} encodingType\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @instance\n             */\n\n            AnalyzeEntitiesRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnalyzeEntitiesRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest instance\n             */\n\n            AnalyzeEntitiesRequest.create = function create(properties) {\n              return new AnalyzeEntitiesRequest(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeEntitiesRequest message. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitiesRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest} message AnalyzeEntitiesRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitiesRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeEntitiesRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitiesRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest} message AnalyzeEntitiesRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitiesRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeEntitiesRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitiesRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnalyzeEntitiesRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeEntitiesRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitiesRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeEntitiesRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeEntitiesRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnalyzeEntitiesRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n             */\n\n\n            AnalyzeEntitiesRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnalyzeEntitiesRequest) return object;\n              var message = new $root.google.cloud.language.v1.AnalyzeEntitiesRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeEntitiesRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeEntitiesRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @static\n             * @param {google.cloud.language.v1.AnalyzeEntitiesRequest} message AnalyzeEntitiesRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeEntitiesRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeEntitiesRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeEntitiesRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeEntitiesRequest;\n          }();\n\n          v1.AnalyzeEntitiesResponse = function () {\n            /**\n             * Properties of an AnalyzeEntitiesResponse.\n             * @memberof google.cloud.language.v1\n             * @interface IAnalyzeEntitiesResponse\n             * @property {Array.<google.cloud.language.v1.IEntity>|null} [entities] AnalyzeEntitiesResponse entities\n             * @property {string|null} [language] AnalyzeEntitiesResponse language\n             */\n\n            /**\n             * Constructs a new AnalyzeEntitiesResponse.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnalyzeEntitiesResponse.\n             * @implements IAnalyzeEntitiesResponse\n             * @constructor\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesResponse=} [properties] Properties to set\n             */\n            function AnalyzeEntitiesResponse(properties) {\n              this.entities = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeEntitiesResponse entities.\n             * @member {Array.<google.cloud.language.v1.IEntity>} entities\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @instance\n             */\n\n\n            AnalyzeEntitiesResponse.prototype.entities = $util.emptyArray;\n            /**\n             * AnalyzeEntitiesResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @instance\n             */\n\n            AnalyzeEntitiesResponse.prototype.language = \"\";\n            /**\n             * Creates a new AnalyzeEntitiesResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse instance\n             */\n\n            AnalyzeEntitiesResponse.create = function create(properties) {\n              return new AnalyzeEntitiesResponse(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeEntitiesResponse message. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitiesResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesResponse} message AnalyzeEntitiesResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitiesResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.entities != null && message.entities.length) for (var i = 0; i < message.entities.length; ++i) $root.google.cloud.language.v1.Entity.encode(message.entities[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.language);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeEntitiesResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitiesResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeEntitiesResponse} message AnalyzeEntitiesResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitiesResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeEntitiesResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitiesResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnalyzeEntitiesResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.entities && message.entities.length)) message.entities = [];\n                    message.entities.push($root.google.cloud.language.v1.Entity.decode(reader, reader.uint32()));\n                    break;\n\n                  case 2:\n                    message.language = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeEntitiesResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitiesResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeEntitiesResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeEntitiesResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                if (!Array.isArray(message.entities)) return \"entities: array expected\";\n\n                for (var i = 0; i < message.entities.length; ++i) {\n                  var error = $root.google.cloud.language.v1.Entity.verify(message.entities[i]);\n                  if (error) return \"entities.\" + error;\n                }\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n              return null;\n            };\n            /**\n             * Creates an AnalyzeEntitiesResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n             */\n\n\n            AnalyzeEntitiesResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnalyzeEntitiesResponse) return object;\n              var message = new $root.google.cloud.language.v1.AnalyzeEntitiesResponse();\n\n              if (object.entities) {\n                if (!Array.isArray(object.entities)) throw TypeError(\".google.cloud.language.v1.AnalyzeEntitiesResponse.entities: array expected\");\n                message.entities = [];\n\n                for (var i = 0; i < object.entities.length; ++i) {\n                  if (typeof object.entities[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeEntitiesResponse.entities: object expected\");\n                  message.entities[i] = $root.google.cloud.language.v1.Entity.fromObject(object.entities[i]);\n                }\n              }\n\n              if (object.language != null) message.language = String(object.language);\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeEntitiesResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @static\n             * @param {google.cloud.language.v1.AnalyzeEntitiesResponse} message AnalyzeEntitiesResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeEntitiesResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.entities = [];\n              if (options.defaults) object.language = \"\";\n\n              if (message.entities && message.entities.length) {\n                object.entities = [];\n\n                for (var j = 0; j < message.entities.length; ++j) object.entities[j] = $root.google.cloud.language.v1.Entity.toObject(message.entities[j], options);\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeEntitiesResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeEntitiesResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeEntitiesResponse;\n          }();\n\n          v1.AnalyzeSyntaxRequest = function () {\n            /**\n             * Properties of an AnalyzeSyntaxRequest.\n             * @memberof google.cloud.language.v1\n             * @interface IAnalyzeSyntaxRequest\n             * @property {google.cloud.language.v1.IDocument|null} [document] AnalyzeSyntaxRequest document\n             * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnalyzeSyntaxRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnalyzeSyntaxRequest.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnalyzeSyntaxRequest.\n             * @implements IAnalyzeSyntaxRequest\n             * @constructor\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest=} [properties] Properties to set\n             */\n            function AnalyzeSyntaxRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeSyntaxRequest document.\n             * @member {google.cloud.language.v1.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @instance\n             */\n\n\n            AnalyzeSyntaxRequest.prototype.document = null;\n            /**\n             * AnalyzeSyntaxRequest encodingType.\n             * @member {google.cloud.language.v1.EncodingType} encodingType\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @instance\n             */\n\n            AnalyzeSyntaxRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnalyzeSyntaxRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest instance\n             */\n\n            AnalyzeSyntaxRequest.create = function create(properties) {\n              return new AnalyzeSyntaxRequest(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeSyntaxRequest message. Does not implicitly {@link google.cloud.language.v1.AnalyzeSyntaxRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest} message AnalyzeSyntaxRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSyntaxRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeSyntaxRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeSyntaxRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest} message AnalyzeSyntaxRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSyntaxRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeSyntaxRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSyntaxRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnalyzeSyntaxRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeSyntaxRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSyntaxRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeSyntaxRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeSyntaxRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnalyzeSyntaxRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n             */\n\n\n            AnalyzeSyntaxRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnalyzeSyntaxRequest) return object;\n              var message = new $root.google.cloud.language.v1.AnalyzeSyntaxRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeSyntaxRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @static\n             * @param {google.cloud.language.v1.AnalyzeSyntaxRequest} message AnalyzeSyntaxRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeSyntaxRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeSyntaxRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeSyntaxRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeSyntaxRequest;\n          }();\n\n          v1.AnalyzeSyntaxResponse = function () {\n            /**\n             * Properties of an AnalyzeSyntaxResponse.\n             * @memberof google.cloud.language.v1\n             * @interface IAnalyzeSyntaxResponse\n             * @property {Array.<google.cloud.language.v1.ISentence>|null} [sentences] AnalyzeSyntaxResponse sentences\n             * @property {Array.<google.cloud.language.v1.IToken>|null} [tokens] AnalyzeSyntaxResponse tokens\n             * @property {string|null} [language] AnalyzeSyntaxResponse language\n             */\n\n            /**\n             * Constructs a new AnalyzeSyntaxResponse.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnalyzeSyntaxResponse.\n             * @implements IAnalyzeSyntaxResponse\n             * @constructor\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxResponse=} [properties] Properties to set\n             */\n            function AnalyzeSyntaxResponse(properties) {\n              this.sentences = [];\n              this.tokens = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeSyntaxResponse sentences.\n             * @member {Array.<google.cloud.language.v1.ISentence>} sentences\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @instance\n             */\n\n\n            AnalyzeSyntaxResponse.prototype.sentences = $util.emptyArray;\n            /**\n             * AnalyzeSyntaxResponse tokens.\n             * @member {Array.<google.cloud.language.v1.IToken>} tokens\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @instance\n             */\n\n            AnalyzeSyntaxResponse.prototype.tokens = $util.emptyArray;\n            /**\n             * AnalyzeSyntaxResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @instance\n             */\n\n            AnalyzeSyntaxResponse.prototype.language = \"\";\n            /**\n             * Creates a new AnalyzeSyntaxResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse instance\n             */\n\n            AnalyzeSyntaxResponse.create = function create(properties) {\n              return new AnalyzeSyntaxResponse(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeSyntaxResponse message. Does not implicitly {@link google.cloud.language.v1.AnalyzeSyntaxResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxResponse} message AnalyzeSyntaxResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSyntaxResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.sentences != null && message.sentences.length) for (var i = 0; i < message.sentences.length; ++i) $root.google.cloud.language.v1.Sentence.encode(message.sentences[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.tokens != null && message.tokens.length) for (var i = 0; i < message.tokens.length; ++i) $root.google.cloud.language.v1.Token.encode(message.tokens[i], writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).string(message.language);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeSyntaxResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeSyntaxResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnalyzeSyntaxResponse} message AnalyzeSyntaxResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSyntaxResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeSyntaxResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSyntaxResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnalyzeSyntaxResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.sentences && message.sentences.length)) message.sentences = [];\n                    message.sentences.push($root.google.cloud.language.v1.Sentence.decode(reader, reader.uint32()));\n                    break;\n\n                  case 2:\n                    if (!(message.tokens && message.tokens.length)) message.tokens = [];\n                    message.tokens.push($root.google.cloud.language.v1.Token.decode(reader, reader.uint32()));\n                    break;\n\n                  case 3:\n                    message.language = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeSyntaxResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSyntaxResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeSyntaxResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeSyntaxResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                if (!Array.isArray(message.sentences)) return \"sentences: array expected\";\n\n                for (var i = 0; i < message.sentences.length; ++i) {\n                  var error = $root.google.cloud.language.v1.Sentence.verify(message.sentences[i]);\n                  if (error) return \"sentences.\" + error;\n                }\n              }\n\n              if (message.tokens != null && message.hasOwnProperty(\"tokens\")) {\n                if (!Array.isArray(message.tokens)) return \"tokens: array expected\";\n\n                for (var i = 0; i < message.tokens.length; ++i) {\n                  var error = $root.google.cloud.language.v1.Token.verify(message.tokens[i]);\n                  if (error) return \"tokens.\" + error;\n                }\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n              return null;\n            };\n            /**\n             * Creates an AnalyzeSyntaxResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n             */\n\n\n            AnalyzeSyntaxResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnalyzeSyntaxResponse) return object;\n              var message = new $root.google.cloud.language.v1.AnalyzeSyntaxResponse();\n\n              if (object.sentences) {\n                if (!Array.isArray(object.sentences)) throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxResponse.sentences: array expected\");\n                message.sentences = [];\n\n                for (var i = 0; i < object.sentences.length; ++i) {\n                  if (typeof object.sentences[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxResponse.sentences: object expected\");\n                  message.sentences[i] = $root.google.cloud.language.v1.Sentence.fromObject(object.sentences[i]);\n                }\n              }\n\n              if (object.tokens) {\n                if (!Array.isArray(object.tokens)) throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxResponse.tokens: array expected\");\n                message.tokens = [];\n\n                for (var i = 0; i < object.tokens.length; ++i) {\n                  if (typeof object.tokens[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxResponse.tokens: object expected\");\n                  message.tokens[i] = $root.google.cloud.language.v1.Token.fromObject(object.tokens[i]);\n                }\n              }\n\n              if (object.language != null) message.language = String(object.language);\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeSyntaxResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @static\n             * @param {google.cloud.language.v1.AnalyzeSyntaxResponse} message AnalyzeSyntaxResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeSyntaxResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.arrays || options.defaults) {\n                object.sentences = [];\n                object.tokens = [];\n              }\n\n              if (options.defaults) object.language = \"\";\n\n              if (message.sentences && message.sentences.length) {\n                object.sentences = [];\n\n                for (var j = 0; j < message.sentences.length; ++j) object.sentences[j] = $root.google.cloud.language.v1.Sentence.toObject(message.sentences[j], options);\n              }\n\n              if (message.tokens && message.tokens.length) {\n                object.tokens = [];\n\n                for (var j = 0; j < message.tokens.length; ++j) object.tokens[j] = $root.google.cloud.language.v1.Token.toObject(message.tokens[j], options);\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeSyntaxResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeSyntaxResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeSyntaxResponse;\n          }();\n\n          v1.ClassifyTextRequest = function () {\n            /**\n             * Properties of a ClassifyTextRequest.\n             * @memberof google.cloud.language.v1\n             * @interface IClassifyTextRequest\n             * @property {google.cloud.language.v1.IDocument|null} [document] ClassifyTextRequest document\n             */\n\n            /**\n             * Constructs a new ClassifyTextRequest.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a ClassifyTextRequest.\n             * @implements IClassifyTextRequest\n             * @constructor\n             * @param {google.cloud.language.v1.IClassifyTextRequest=} [properties] Properties to set\n             */\n            function ClassifyTextRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * ClassifyTextRequest document.\n             * @member {google.cloud.language.v1.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @instance\n             */\n\n\n            ClassifyTextRequest.prototype.document = null;\n            /**\n             * Creates a new ClassifyTextRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @static\n             * @param {google.cloud.language.v1.IClassifyTextRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.ClassifyTextRequest} ClassifyTextRequest instance\n             */\n\n            ClassifyTextRequest.create = function create(properties) {\n              return new ClassifyTextRequest(properties);\n            };\n            /**\n             * Encodes the specified ClassifyTextRequest message. Does not implicitly {@link google.cloud.language.v1.ClassifyTextRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @static\n             * @param {google.cloud.language.v1.IClassifyTextRequest} message ClassifyTextRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassifyTextRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified ClassifyTextRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.ClassifyTextRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @static\n             * @param {google.cloud.language.v1.IClassifyTextRequest} message ClassifyTextRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassifyTextRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a ClassifyTextRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.ClassifyTextRequest} ClassifyTextRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassifyTextRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.ClassifyTextRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a ClassifyTextRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.ClassifyTextRequest} ClassifyTextRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassifyTextRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a ClassifyTextRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            ClassifyTextRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              return null;\n            };\n            /**\n             * Creates a ClassifyTextRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.ClassifyTextRequest} ClassifyTextRequest\n             */\n\n\n            ClassifyTextRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.ClassifyTextRequest) return object;\n              var message = new $root.google.cloud.language.v1.ClassifyTextRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1.ClassifyTextRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a ClassifyTextRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @static\n             * @param {google.cloud.language.v1.ClassifyTextRequest} message ClassifyTextRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            ClassifyTextRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.defaults) object.document = null;\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n              return object;\n            };\n            /**\n             * Converts this ClassifyTextRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.ClassifyTextRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            ClassifyTextRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ClassifyTextRequest;\n          }();\n\n          v1.ClassifyTextResponse = function () {\n            /**\n             * Properties of a ClassifyTextResponse.\n             * @memberof google.cloud.language.v1\n             * @interface IClassifyTextResponse\n             * @property {Array.<google.cloud.language.v1.IClassificationCategory>|null} [categories] ClassifyTextResponse categories\n             */\n\n            /**\n             * Constructs a new ClassifyTextResponse.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents a ClassifyTextResponse.\n             * @implements IClassifyTextResponse\n             * @constructor\n             * @param {google.cloud.language.v1.IClassifyTextResponse=} [properties] Properties to set\n             */\n            function ClassifyTextResponse(properties) {\n              this.categories = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * ClassifyTextResponse categories.\n             * @member {Array.<google.cloud.language.v1.IClassificationCategory>} categories\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @instance\n             */\n\n\n            ClassifyTextResponse.prototype.categories = $util.emptyArray;\n            /**\n             * Creates a new ClassifyTextResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @static\n             * @param {google.cloud.language.v1.IClassifyTextResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.ClassifyTextResponse} ClassifyTextResponse instance\n             */\n\n            ClassifyTextResponse.create = function create(properties) {\n              return new ClassifyTextResponse(properties);\n            };\n            /**\n             * Encodes the specified ClassifyTextResponse message. Does not implicitly {@link google.cloud.language.v1.ClassifyTextResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @static\n             * @param {google.cloud.language.v1.IClassifyTextResponse} message ClassifyTextResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassifyTextResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.categories != null && message.categories.length) for (var i = 0; i < message.categories.length; ++i) $root.google.cloud.language.v1.ClassificationCategory.encode(message.categories[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified ClassifyTextResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.ClassifyTextResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @static\n             * @param {google.cloud.language.v1.IClassifyTextResponse} message ClassifyTextResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassifyTextResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a ClassifyTextResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.ClassifyTextResponse} ClassifyTextResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassifyTextResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.ClassifyTextResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.categories && message.categories.length)) message.categories = [];\n                    message.categories.push($root.google.cloud.language.v1.ClassificationCategory.decode(reader, reader.uint32()));\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a ClassifyTextResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.ClassifyTextResponse} ClassifyTextResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassifyTextResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a ClassifyTextResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            ClassifyTextResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.categories != null && message.hasOwnProperty(\"categories\")) {\n                if (!Array.isArray(message.categories)) return \"categories: array expected\";\n\n                for (var i = 0; i < message.categories.length; ++i) {\n                  var error = $root.google.cloud.language.v1.ClassificationCategory.verify(message.categories[i]);\n                  if (error) return \"categories.\" + error;\n                }\n              }\n\n              return null;\n            };\n            /**\n             * Creates a ClassifyTextResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.ClassifyTextResponse} ClassifyTextResponse\n             */\n\n\n            ClassifyTextResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.ClassifyTextResponse) return object;\n              var message = new $root.google.cloud.language.v1.ClassifyTextResponse();\n\n              if (object.categories) {\n                if (!Array.isArray(object.categories)) throw TypeError(\".google.cloud.language.v1.ClassifyTextResponse.categories: array expected\");\n                message.categories = [];\n\n                for (var i = 0; i < object.categories.length; ++i) {\n                  if (typeof object.categories[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.ClassifyTextResponse.categories: object expected\");\n                  message.categories[i] = $root.google.cloud.language.v1.ClassificationCategory.fromObject(object.categories[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a ClassifyTextResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @static\n             * @param {google.cloud.language.v1.ClassifyTextResponse} message ClassifyTextResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            ClassifyTextResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.categories = [];\n\n              if (message.categories && message.categories.length) {\n                object.categories = [];\n\n                for (var j = 0; j < message.categories.length; ++j) object.categories[j] = $root.google.cloud.language.v1.ClassificationCategory.toObject(message.categories[j], options);\n              }\n\n              return object;\n            };\n            /**\n             * Converts this ClassifyTextResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.ClassifyTextResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            ClassifyTextResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ClassifyTextResponse;\n          }();\n\n          v1.AnnotateTextRequest = function () {\n            /**\n             * Properties of an AnnotateTextRequest.\n             * @memberof google.cloud.language.v1\n             * @interface IAnnotateTextRequest\n             * @property {google.cloud.language.v1.IDocument|null} [document] AnnotateTextRequest document\n             * @property {google.cloud.language.v1.AnnotateTextRequest.IFeatures|null} [features] AnnotateTextRequest features\n             * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnnotateTextRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnnotateTextRequest.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnnotateTextRequest.\n             * @implements IAnnotateTextRequest\n             * @constructor\n             * @param {google.cloud.language.v1.IAnnotateTextRequest=} [properties] Properties to set\n             */\n            function AnnotateTextRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnnotateTextRequest document.\n             * @member {google.cloud.language.v1.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @instance\n             */\n\n\n            AnnotateTextRequest.prototype.document = null;\n            /**\n             * AnnotateTextRequest features.\n             * @member {google.cloud.language.v1.AnnotateTextRequest.IFeatures|null|undefined} features\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @instance\n             */\n\n            AnnotateTextRequest.prototype.features = null;\n            /**\n             * AnnotateTextRequest encodingType.\n             * @member {google.cloud.language.v1.EncodingType} encodingType\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @instance\n             */\n\n            AnnotateTextRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnnotateTextRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnnotateTextRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnnotateTextRequest} AnnotateTextRequest instance\n             */\n\n            AnnotateTextRequest.create = function create(properties) {\n              return new AnnotateTextRequest(properties);\n            };\n            /**\n             * Encodes the specified AnnotateTextRequest message. Does not implicitly {@link google.cloud.language.v1.AnnotateTextRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnnotateTextRequest} message AnnotateTextRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnnotateTextRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.features != null && message.hasOwnProperty(\"features\")) $root.google.cloud.language.v1.AnnotateTextRequest.Features.encode(message.features, writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 3, wireType 0 =*/\n              24).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnnotateTextRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnnotateTextRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @static\n             * @param {google.cloud.language.v1.IAnnotateTextRequest} message AnnotateTextRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnnotateTextRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnnotateTextRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnnotateTextRequest} AnnotateTextRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnnotateTextRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnnotateTextRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.features = $root.google.cloud.language.v1.AnnotateTextRequest.Features.decode(reader, reader.uint32());\n                    break;\n\n                  case 3:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnnotateTextRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnnotateTextRequest} AnnotateTextRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnnotateTextRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnnotateTextRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnnotateTextRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.features != null && message.hasOwnProperty(\"features\")) {\n                var error = $root.google.cloud.language.v1.AnnotateTextRequest.Features.verify(message.features);\n                if (error) return \"features.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnnotateTextRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnnotateTextRequest} AnnotateTextRequest\n             */\n\n\n            AnnotateTextRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnnotateTextRequest) return object;\n              var message = new $root.google.cloud.language.v1.AnnotateTextRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1.AnnotateTextRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n              }\n\n              if (object.features != null) {\n                if (typeof object.features !== \"object\") throw TypeError(\".google.cloud.language.v1.AnnotateTextRequest.features: object expected\");\n                message.features = $root.google.cloud.language.v1.AnnotateTextRequest.Features.fromObject(object.features);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnnotateTextRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @static\n             * @param {google.cloud.language.v1.AnnotateTextRequest} message AnnotateTextRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnnotateTextRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.features = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n              if (message.features != null && message.hasOwnProperty(\"features\")) object.features = $root.google.cloud.language.v1.AnnotateTextRequest.Features.toObject(message.features, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnnotateTextRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnnotateTextRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnnotateTextRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            AnnotateTextRequest.Features = function () {\n              /**\n               * Properties of a Features.\n               * @memberof google.cloud.language.v1.AnnotateTextRequest\n               * @interface IFeatures\n               * @property {boolean|null} [extractSyntax] Features extractSyntax\n               * @property {boolean|null} [extractEntities] Features extractEntities\n               * @property {boolean|null} [extractDocumentSentiment] Features extractDocumentSentiment\n               * @property {boolean|null} [extractEntitySentiment] Features extractEntitySentiment\n               * @property {boolean|null} [classifyText] Features classifyText\n               */\n\n              /**\n               * Constructs a new Features.\n               * @memberof google.cloud.language.v1.AnnotateTextRequest\n               * @classdesc Represents a Features.\n               * @implements IFeatures\n               * @constructor\n               * @param {google.cloud.language.v1.AnnotateTextRequest.IFeatures=} [properties] Properties to set\n               */\n              function Features(properties) {\n                if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n              /**\n               * Features extractSyntax.\n               * @member {boolean} extractSyntax\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @instance\n               */\n\n\n              Features.prototype.extractSyntax = false;\n              /**\n               * Features extractEntities.\n               * @member {boolean} extractEntities\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @instance\n               */\n\n              Features.prototype.extractEntities = false;\n              /**\n               * Features extractDocumentSentiment.\n               * @member {boolean} extractDocumentSentiment\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @instance\n               */\n\n              Features.prototype.extractDocumentSentiment = false;\n              /**\n               * Features extractEntitySentiment.\n               * @member {boolean} extractEntitySentiment\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @instance\n               */\n\n              Features.prototype.extractEntitySentiment = false;\n              /**\n               * Features classifyText.\n               * @member {boolean} classifyText\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @instance\n               */\n\n              Features.prototype.classifyText = false;\n              /**\n               * Creates a new Features instance using the specified properties.\n               * @function create\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @static\n               * @param {google.cloud.language.v1.AnnotateTextRequest.IFeatures=} [properties] Properties to set\n               * @returns {google.cloud.language.v1.AnnotateTextRequest.Features} Features instance\n               */\n\n              Features.create = function create(properties) {\n                return new Features(properties);\n              };\n              /**\n               * Encodes the specified Features message. Does not implicitly {@link google.cloud.language.v1.AnnotateTextRequest.Features.verify|verify} messages.\n               * @function encode\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @static\n               * @param {google.cloud.language.v1.AnnotateTextRequest.IFeatures} message Features message or plain object to encode\n               * @param {$protobuf.Writer} [writer] Writer to encode to\n               * @returns {$protobuf.Writer} Writer\n               */\n\n\n              Features.encode = function encode(message, writer) {\n                if (!writer) writer = $Writer.create();\n                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\")) writer.uint32(\n                /* id 1, wireType 0 =*/\n                8).bool(message.extractSyntax);\n                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\")) writer.uint32(\n                /* id 2, wireType 0 =*/\n                16).bool(message.extractEntities);\n                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\")) writer.uint32(\n                /* id 3, wireType 0 =*/\n                24).bool(message.extractDocumentSentiment);\n                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\")) writer.uint32(\n                /* id 4, wireType 0 =*/\n                32).bool(message.extractEntitySentiment);\n                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\")) writer.uint32(\n                /* id 6, wireType 0 =*/\n                48).bool(message.classifyText);\n                return writer;\n              };\n              /**\n               * Encodes the specified Features message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnnotateTextRequest.Features.verify|verify} messages.\n               * @function encodeDelimited\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @static\n               * @param {google.cloud.language.v1.AnnotateTextRequest.IFeatures} message Features message or plain object to encode\n               * @param {$protobuf.Writer} [writer] Writer to encode to\n               * @returns {$protobuf.Writer} Writer\n               */\n\n\n              Features.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n              };\n              /**\n               * Decodes a Features message from the specified reader or buffer.\n               * @function decode\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @static\n               * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n               * @param {number} [length] Message length if known beforehand\n               * @returns {google.cloud.language.v1.AnnotateTextRequest.Features} Features\n               * @throws {Error} If the payload is not a reader or valid buffer\n               * @throws {$protobuf.util.ProtocolError} If required fields are missing\n               */\n\n\n              Features.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length,\n                    message = new $root.google.cloud.language.v1.AnnotateTextRequest.Features();\n\n                while (reader.pos < end) {\n                  var tag = reader.uint32();\n\n                  switch (tag >>> 3) {\n                    case 1:\n                      message.extractSyntax = reader.bool();\n                      break;\n\n                    case 2:\n                      message.extractEntities = reader.bool();\n                      break;\n\n                    case 3:\n                      message.extractDocumentSentiment = reader.bool();\n                      break;\n\n                    case 4:\n                      message.extractEntitySentiment = reader.bool();\n                      break;\n\n                    case 6:\n                      message.classifyText = reader.bool();\n                      break;\n\n                    default:\n                      reader.skipType(tag & 7);\n                      break;\n                  }\n                }\n\n                return message;\n              };\n              /**\n               * Decodes a Features message from the specified reader or buffer, length delimited.\n               * @function decodeDelimited\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @static\n               * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n               * @returns {google.cloud.language.v1.AnnotateTextRequest.Features} Features\n               * @throws {Error} If the payload is not a reader or valid buffer\n               * @throws {$protobuf.util.ProtocolError} If required fields are missing\n               */\n\n\n              Features.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n              };\n              /**\n               * Verifies a Features message.\n               * @function verify\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @static\n               * @param {Object.<string,*>} message Plain object to verify\n               * @returns {string|null} `null` if valid, otherwise the reason why it is not\n               */\n\n\n              Features.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null) return \"object expected\";\n                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\")) if (typeof message.extractSyntax !== \"boolean\") return \"extractSyntax: boolean expected\";\n                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\")) if (typeof message.extractEntities !== \"boolean\") return \"extractEntities: boolean expected\";\n                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\")) if (typeof message.extractDocumentSentiment !== \"boolean\") return \"extractDocumentSentiment: boolean expected\";\n                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\")) if (typeof message.extractEntitySentiment !== \"boolean\") return \"extractEntitySentiment: boolean expected\";\n                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\")) if (typeof message.classifyText !== \"boolean\") return \"classifyText: boolean expected\";\n                return null;\n              };\n              /**\n               * Creates a Features message from a plain object. Also converts values to their respective internal types.\n               * @function fromObject\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @static\n               * @param {Object.<string,*>} object Plain object\n               * @returns {google.cloud.language.v1.AnnotateTextRequest.Features} Features\n               */\n\n\n              Features.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.cloud.language.v1.AnnotateTextRequest.Features) return object;\n                var message = new $root.google.cloud.language.v1.AnnotateTextRequest.Features();\n                if (object.extractSyntax != null) message.extractSyntax = Boolean(object.extractSyntax);\n                if (object.extractEntities != null) message.extractEntities = Boolean(object.extractEntities);\n                if (object.extractDocumentSentiment != null) message.extractDocumentSentiment = Boolean(object.extractDocumentSentiment);\n                if (object.extractEntitySentiment != null) message.extractEntitySentiment = Boolean(object.extractEntitySentiment);\n                if (object.classifyText != null) message.classifyText = Boolean(object.classifyText);\n                return message;\n              };\n              /**\n               * Creates a plain object from a Features message. Also converts values to other types if specified.\n               * @function toObject\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @static\n               * @param {google.cloud.language.v1.AnnotateTextRequest.Features} message Features\n               * @param {$protobuf.IConversionOptions} [options] Conversion options\n               * @returns {Object.<string,*>} Plain object\n               */\n\n\n              Features.toObject = function toObject(message, options) {\n                if (!options) options = {};\n                var object = {};\n\n                if (options.defaults) {\n                  object.extractSyntax = false;\n                  object.extractEntities = false;\n                  object.extractDocumentSentiment = false;\n                  object.extractEntitySentiment = false;\n                  object.classifyText = false;\n                }\n\n                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\")) object.extractSyntax = message.extractSyntax;\n                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\")) object.extractEntities = message.extractEntities;\n                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\")) object.extractDocumentSentiment = message.extractDocumentSentiment;\n                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\")) object.extractEntitySentiment = message.extractEntitySentiment;\n                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\")) object.classifyText = message.classifyText;\n                return object;\n              };\n              /**\n               * Converts this Features to JSON.\n               * @function toJSON\n               * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n               * @instance\n               * @returns {Object.<string,*>} JSON object\n               */\n\n\n              Features.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n              };\n\n              return Features;\n            }();\n\n            return AnnotateTextRequest;\n          }();\n\n          v1.AnnotateTextResponse = function () {\n            /**\n             * Properties of an AnnotateTextResponse.\n             * @memberof google.cloud.language.v1\n             * @interface IAnnotateTextResponse\n             * @property {Array.<google.cloud.language.v1.ISentence>|null} [sentences] AnnotateTextResponse sentences\n             * @property {Array.<google.cloud.language.v1.IToken>|null} [tokens] AnnotateTextResponse tokens\n             * @property {Array.<google.cloud.language.v1.IEntity>|null} [entities] AnnotateTextResponse entities\n             * @property {google.cloud.language.v1.ISentiment|null} [documentSentiment] AnnotateTextResponse documentSentiment\n             * @property {string|null} [language] AnnotateTextResponse language\n             * @property {Array.<google.cloud.language.v1.IClassificationCategory>|null} [categories] AnnotateTextResponse categories\n             */\n\n            /**\n             * Constructs a new AnnotateTextResponse.\n             * @memberof google.cloud.language.v1\n             * @classdesc Represents an AnnotateTextResponse.\n             * @implements IAnnotateTextResponse\n             * @constructor\n             * @param {google.cloud.language.v1.IAnnotateTextResponse=} [properties] Properties to set\n             */\n            function AnnotateTextResponse(properties) {\n              this.sentences = [];\n              this.tokens = [];\n              this.entities = [];\n              this.categories = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnnotateTextResponse sentences.\n             * @member {Array.<google.cloud.language.v1.ISentence>} sentences\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @instance\n             */\n\n\n            AnnotateTextResponse.prototype.sentences = $util.emptyArray;\n            /**\n             * AnnotateTextResponse tokens.\n             * @member {Array.<google.cloud.language.v1.IToken>} tokens\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.tokens = $util.emptyArray;\n            /**\n             * AnnotateTextResponse entities.\n             * @member {Array.<google.cloud.language.v1.IEntity>} entities\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.entities = $util.emptyArray;\n            /**\n             * AnnotateTextResponse documentSentiment.\n             * @member {google.cloud.language.v1.ISentiment|null|undefined} documentSentiment\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.documentSentiment = null;\n            /**\n             * AnnotateTextResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.language = \"\";\n            /**\n             * AnnotateTextResponse categories.\n             * @member {Array.<google.cloud.language.v1.IClassificationCategory>} categories\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.categories = $util.emptyArray;\n            /**\n             * Creates a new AnnotateTextResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnnotateTextResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1.AnnotateTextResponse} AnnotateTextResponse instance\n             */\n\n            AnnotateTextResponse.create = function create(properties) {\n              return new AnnotateTextResponse(properties);\n            };\n            /**\n             * Encodes the specified AnnotateTextResponse message. Does not implicitly {@link google.cloud.language.v1.AnnotateTextResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnnotateTextResponse} message AnnotateTextResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnnotateTextResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.sentences != null && message.sentences.length) for (var i = 0; i < message.sentences.length; ++i) $root.google.cloud.language.v1.Sentence.encode(message.sentences[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.tokens != null && message.tokens.length) for (var i = 0; i < message.tokens.length; ++i) $root.google.cloud.language.v1.Token.encode(message.tokens[i], writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              if (message.entities != null && message.entities.length) for (var i = 0; i < message.entities.length; ++i) $root.google.cloud.language.v1.Entity.encode(message.entities[i], writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork()).ldelim();\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) $root.google.cloud.language.v1.Sentiment.encode(message.documentSentiment, writer.uint32(\n              /* id 4, wireType 2 =*/\n              34).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 5, wireType 2 =*/\n              42).string(message.language);\n              if (message.categories != null && message.categories.length) for (var i = 0; i < message.categories.length; ++i) $root.google.cloud.language.v1.ClassificationCategory.encode(message.categories[i], writer.uint32(\n              /* id 6, wireType 2 =*/\n              50).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified AnnotateTextResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnnotateTextResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @static\n             * @param {google.cloud.language.v1.IAnnotateTextResponse} message AnnotateTextResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnnotateTextResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnnotateTextResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1.AnnotateTextResponse} AnnotateTextResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnnotateTextResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1.AnnotateTextResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.sentences && message.sentences.length)) message.sentences = [];\n                    message.sentences.push($root.google.cloud.language.v1.Sentence.decode(reader, reader.uint32()));\n                    break;\n\n                  case 2:\n                    if (!(message.tokens && message.tokens.length)) message.tokens = [];\n                    message.tokens.push($root.google.cloud.language.v1.Token.decode(reader, reader.uint32()));\n                    break;\n\n                  case 3:\n                    if (!(message.entities && message.entities.length)) message.entities = [];\n                    message.entities.push($root.google.cloud.language.v1.Entity.decode(reader, reader.uint32()));\n                    break;\n\n                  case 4:\n                    message.documentSentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  case 5:\n                    message.language = reader.string();\n                    break;\n\n                  case 6:\n                    if (!(message.categories && message.categories.length)) message.categories = [];\n                    message.categories.push($root.google.cloud.language.v1.ClassificationCategory.decode(reader, reader.uint32()));\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnnotateTextResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1.AnnotateTextResponse} AnnotateTextResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnnotateTextResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnnotateTextResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnnotateTextResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                if (!Array.isArray(message.sentences)) return \"sentences: array expected\";\n\n                for (var i = 0; i < message.sentences.length; ++i) {\n                  var error = $root.google.cloud.language.v1.Sentence.verify(message.sentences[i]);\n                  if (error) return \"sentences.\" + error;\n                }\n              }\n\n              if (message.tokens != null && message.hasOwnProperty(\"tokens\")) {\n                if (!Array.isArray(message.tokens)) return \"tokens: array expected\";\n\n                for (var i = 0; i < message.tokens.length; ++i) {\n                  var error = $root.google.cloud.language.v1.Token.verify(message.tokens[i]);\n                  if (error) return \"tokens.\" + error;\n                }\n              }\n\n              if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                if (!Array.isArray(message.entities)) return \"entities: array expected\";\n\n                for (var i = 0; i < message.entities.length; ++i) {\n                  var error = $root.google.cloud.language.v1.Entity.verify(message.entities[i]);\n                  if (error) return \"entities.\" + error;\n                }\n              }\n\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) {\n                var error = $root.google.cloud.language.v1.Sentiment.verify(message.documentSentiment);\n                if (error) return \"documentSentiment.\" + error;\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n\n              if (message.categories != null && message.hasOwnProperty(\"categories\")) {\n                if (!Array.isArray(message.categories)) return \"categories: array expected\";\n\n                for (var i = 0; i < message.categories.length; ++i) {\n                  var error = $root.google.cloud.language.v1.ClassificationCategory.verify(message.categories[i]);\n                  if (error) return \"categories.\" + error;\n                }\n              }\n\n              return null;\n            };\n            /**\n             * Creates an AnnotateTextResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1.AnnotateTextResponse} AnnotateTextResponse\n             */\n\n\n            AnnotateTextResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1.AnnotateTextResponse) return object;\n              var message = new $root.google.cloud.language.v1.AnnotateTextResponse();\n\n              if (object.sentences) {\n                if (!Array.isArray(object.sentences)) throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.sentences: array expected\");\n                message.sentences = [];\n\n                for (var i = 0; i < object.sentences.length; ++i) {\n                  if (typeof object.sentences[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.sentences: object expected\");\n                  message.sentences[i] = $root.google.cloud.language.v1.Sentence.fromObject(object.sentences[i]);\n                }\n              }\n\n              if (object.tokens) {\n                if (!Array.isArray(object.tokens)) throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.tokens: array expected\");\n                message.tokens = [];\n\n                for (var i = 0; i < object.tokens.length; ++i) {\n                  if (typeof object.tokens[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.tokens: object expected\");\n                  message.tokens[i] = $root.google.cloud.language.v1.Token.fromObject(object.tokens[i]);\n                }\n              }\n\n              if (object.entities) {\n                if (!Array.isArray(object.entities)) throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.entities: array expected\");\n                message.entities = [];\n\n                for (var i = 0; i < object.entities.length; ++i) {\n                  if (typeof object.entities[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.entities: object expected\");\n                  message.entities[i] = $root.google.cloud.language.v1.Entity.fromObject(object.entities[i]);\n                }\n              }\n\n              if (object.documentSentiment != null) {\n                if (typeof object.documentSentiment !== \"object\") throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.documentSentiment: object expected\");\n                message.documentSentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.documentSentiment);\n              }\n\n              if (object.language != null) message.language = String(object.language);\n\n              if (object.categories) {\n                if (!Array.isArray(object.categories)) throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.categories: array expected\");\n                message.categories = [];\n\n                for (var i = 0; i < object.categories.length; ++i) {\n                  if (typeof object.categories[i] !== \"object\") throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.categories: object expected\");\n                  message.categories[i] = $root.google.cloud.language.v1.ClassificationCategory.fromObject(object.categories[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnnotateTextResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @static\n             * @param {google.cloud.language.v1.AnnotateTextResponse} message AnnotateTextResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnnotateTextResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.arrays || options.defaults) {\n                object.sentences = [];\n                object.tokens = [];\n                object.entities = [];\n                object.categories = [];\n              }\n\n              if (options.defaults) {\n                object.documentSentiment = null;\n                object.language = \"\";\n              }\n\n              if (message.sentences && message.sentences.length) {\n                object.sentences = [];\n\n                for (var j = 0; j < message.sentences.length; ++j) object.sentences[j] = $root.google.cloud.language.v1.Sentence.toObject(message.sentences[j], options);\n              }\n\n              if (message.tokens && message.tokens.length) {\n                object.tokens = [];\n\n                for (var j = 0; j < message.tokens.length; ++j) object.tokens[j] = $root.google.cloud.language.v1.Token.toObject(message.tokens[j], options);\n              }\n\n              if (message.entities && message.entities.length) {\n                object.entities = [];\n\n                for (var j = 0; j < message.entities.length; ++j) object.entities[j] = $root.google.cloud.language.v1.Entity.toObject(message.entities[j], options);\n              }\n\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) object.documentSentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.documentSentiment, options);\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n\n              if (message.categories && message.categories.length) {\n                object.categories = [];\n\n                for (var j = 0; j < message.categories.length; ++j) object.categories[j] = $root.google.cloud.language.v1.ClassificationCategory.toObject(message.categories[j], options);\n              }\n\n              return object;\n            };\n            /**\n             * Converts this AnnotateTextResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1.AnnotateTextResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnnotateTextResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnnotateTextResponse;\n          }();\n\n          return v1;\n        }();\n\n        language.v1beta2 = function () {\n          /**\n           * Namespace v1beta2.\n           * @memberof google.cloud.language\n           * @namespace\n           */\n          var v1beta2 = {};\n\n          v1beta2.LanguageService = function () {\n            /**\n             * Constructs a new LanguageService service.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a LanguageService\n             * @extends $protobuf.rpc.Service\n             * @constructor\n             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n             */\n            function LanguageService(rpcImpl, requestDelimited, responseDelimited) {\n              $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n            }\n\n            (LanguageService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = LanguageService;\n            /**\n             * Creates new LanguageService service using the specified rpc implementation.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @static\n             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n             * @returns {LanguageService} RPC service. Useful where requests and/or responses are streamed.\n             */\n\n            LanguageService.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n              return new this(rpcImpl, requestDelimited, responseDelimited);\n            };\n            /**\n             * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#analyzeSentiment}.\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @typedef AnalyzeSentimentCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1beta2.AnalyzeSentimentResponse} [response] AnalyzeSentimentResponse\n             */\n\n            /**\n             * Calls AnalyzeSentiment.\n             * @function analyzeSentiment\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest} request AnalyzeSentimentRequest message or plain object\n             * @param {google.cloud.language.v1beta2.LanguageService.AnalyzeSentimentCallback} callback Node-style callback called with the error, if any, and AnalyzeSentimentResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n\n            Object.defineProperty(LanguageService.prototype.analyzeSentiment = function analyzeSentiment(request, callback) {\n              return this.rpcCall(analyzeSentiment, $root.google.cloud.language.v1beta2.AnalyzeSentimentRequest, $root.google.cloud.language.v1beta2.AnalyzeSentimentResponse, request, callback);\n            }, \"name\", {\n              value: \"AnalyzeSentiment\"\n            });\n            /**\n             * Calls AnalyzeSentiment.\n             * @function analyzeSentiment\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest} request AnalyzeSentimentRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1beta2.AnalyzeSentimentResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#analyzeEntities}.\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @typedef AnalyzeEntitiesCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} [response] AnalyzeEntitiesResponse\n             */\n\n            /**\n             * Calls AnalyzeEntities.\n             * @function analyzeEntities\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest} request AnalyzeEntitiesRequest message or plain object\n             * @param {google.cloud.language.v1beta2.LanguageService.AnalyzeEntitiesCallback} callback Node-style callback called with the error, if any, and AnalyzeEntitiesResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.analyzeEntities = function analyzeEntities(request, callback) {\n              return this.rpcCall(analyzeEntities, $root.google.cloud.language.v1beta2.AnalyzeEntitiesRequest, $root.google.cloud.language.v1beta2.AnalyzeEntitiesResponse, request, callback);\n            }, \"name\", {\n              value: \"AnalyzeEntities\"\n            });\n            /**\n             * Calls AnalyzeEntities.\n             * @function analyzeEntities\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest} request AnalyzeEntitiesRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1beta2.AnalyzeEntitiesResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#analyzeEntitySentiment}.\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @typedef AnalyzeEntitySentimentCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} [response] AnalyzeEntitySentimentResponse\n             */\n\n            /**\n             * Calls AnalyzeEntitySentiment.\n             * @function analyzeEntitySentiment\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest} request AnalyzeEntitySentimentRequest message or plain object\n             * @param {google.cloud.language.v1beta2.LanguageService.AnalyzeEntitySentimentCallback} callback Node-style callback called with the error, if any, and AnalyzeEntitySentimentResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.analyzeEntitySentiment = function analyzeEntitySentiment(request, callback) {\n              return this.rpcCall(analyzeEntitySentiment, $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest, $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse, request, callback);\n            }, \"name\", {\n              value: \"AnalyzeEntitySentiment\"\n            });\n            /**\n             * Calls AnalyzeEntitySentiment.\n             * @function analyzeEntitySentiment\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest} request AnalyzeEntitySentimentRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#analyzeSyntax}.\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @typedef AnalyzeSyntaxCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} [response] AnalyzeSyntaxResponse\n             */\n\n            /**\n             * Calls AnalyzeSyntax.\n             * @function analyzeSyntax\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest} request AnalyzeSyntaxRequest message or plain object\n             * @param {google.cloud.language.v1beta2.LanguageService.AnalyzeSyntaxCallback} callback Node-style callback called with the error, if any, and AnalyzeSyntaxResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.analyzeSyntax = function analyzeSyntax(request, callback) {\n              return this.rpcCall(analyzeSyntax, $root.google.cloud.language.v1beta2.AnalyzeSyntaxRequest, $root.google.cloud.language.v1beta2.AnalyzeSyntaxResponse, request, callback);\n            }, \"name\", {\n              value: \"AnalyzeSyntax\"\n            });\n            /**\n             * Calls AnalyzeSyntax.\n             * @function analyzeSyntax\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest} request AnalyzeSyntaxRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1beta2.AnalyzeSyntaxResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#classifyText}.\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @typedef ClassifyTextCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1beta2.ClassifyTextResponse} [response] ClassifyTextResponse\n             */\n\n            /**\n             * Calls ClassifyText.\n             * @function classifyText\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IClassifyTextRequest} request ClassifyTextRequest message or plain object\n             * @param {google.cloud.language.v1beta2.LanguageService.ClassifyTextCallback} callback Node-style callback called with the error, if any, and ClassifyTextResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.classifyText = function classifyText(request, callback) {\n              return this.rpcCall(classifyText, $root.google.cloud.language.v1beta2.ClassifyTextRequest, $root.google.cloud.language.v1beta2.ClassifyTextResponse, request, callback);\n            }, \"name\", {\n              value: \"ClassifyText\"\n            });\n            /**\n             * Calls ClassifyText.\n             * @function classifyText\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IClassifyTextRequest} request ClassifyTextRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1beta2.ClassifyTextResponse>} Promise\n             * @variation 2\n             */\n\n            /**\n             * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#annotateText}.\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @typedef AnnotateTextCallback\n             * @type {function}\n             * @param {Error|null} error Error, if any\n             * @param {google.cloud.language.v1beta2.AnnotateTextResponse} [response] AnnotateTextResponse\n             */\n\n            /**\n             * Calls AnnotateText.\n             * @function annotateText\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnnotateTextRequest} request AnnotateTextRequest message or plain object\n             * @param {google.cloud.language.v1beta2.LanguageService.AnnotateTextCallback} callback Node-style callback called with the error, if any, and AnnotateTextResponse\n             * @returns {undefined}\n             * @variation 1\n             */\n\n            Object.defineProperty(LanguageService.prototype.annotateText = function annotateText(request, callback) {\n              return this.rpcCall(annotateText, $root.google.cloud.language.v1beta2.AnnotateTextRequest, $root.google.cloud.language.v1beta2.AnnotateTextResponse, request, callback);\n            }, \"name\", {\n              value: \"AnnotateText\"\n            });\n            /**\n             * Calls AnnotateText.\n             * @function annotateText\n             * @memberof google.cloud.language.v1beta2.LanguageService\n             * @instance\n             * @param {google.cloud.language.v1beta2.IAnnotateTextRequest} request AnnotateTextRequest message or plain object\n             * @returns {Promise<google.cloud.language.v1beta2.AnnotateTextResponse>} Promise\n             * @variation 2\n             */\n\n            return LanguageService;\n          }();\n\n          v1beta2.Document = function () {\n            /**\n             * Properties of a Document.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IDocument\n             * @property {google.cloud.language.v1beta2.Document.Type|null} [type] Document type\n             * @property {string|null} [content] Document content\n             * @property {string|null} [gcsContentUri] Document gcsContentUri\n             * @property {string|null} [language] Document language\n             */\n\n            /**\n             * Constructs a new Document.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a Document.\n             * @implements IDocument\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IDocument=} [properties] Properties to set\n             */\n            function Document(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Document type.\n             * @member {google.cloud.language.v1beta2.Document.Type} type\n             * @memberof google.cloud.language.v1beta2.Document\n             * @instance\n             */\n\n\n            Document.prototype.type = 0;\n            /**\n             * Document content.\n             * @member {string} content\n             * @memberof google.cloud.language.v1beta2.Document\n             * @instance\n             */\n\n            Document.prototype.content = \"\";\n            /**\n             * Document gcsContentUri.\n             * @member {string} gcsContentUri\n             * @memberof google.cloud.language.v1beta2.Document\n             * @instance\n             */\n\n            Document.prototype.gcsContentUri = \"\";\n            /**\n             * Document language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1beta2.Document\n             * @instance\n             */\n\n            Document.prototype.language = \"\"; // OneOf field names bound to virtual getters and setters\n\n            var $oneOfFields;\n            /**\n             * Document source.\n             * @member {\"content\"|\"gcsContentUri\"|undefined} source\n             * @memberof google.cloud.language.v1beta2.Document\n             * @instance\n             */\n\n            Object.defineProperty(Document.prototype, \"source\", {\n              get: $util.oneOfGetter($oneOfFields = [\"content\", \"gcsContentUri\"]),\n              set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Creates a new Document instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.Document\n             * @static\n             * @param {google.cloud.language.v1beta2.IDocument=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.Document} Document instance\n             */\n\n            Document.create = function create(properties) {\n              return new Document(properties);\n            };\n            /**\n             * Encodes the specified Document message. Does not implicitly {@link google.cloud.language.v1beta2.Document.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.Document\n             * @static\n             * @param {google.cloud.language.v1beta2.IDocument} message Document message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Document.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n              /* id 1, wireType 0 =*/\n              8).int32(message.type);\n              if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.content);\n              if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).string(message.gcsContentUri);\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 4, wireType 2 =*/\n              34).string(message.language);\n              return writer;\n            };\n            /**\n             * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Document.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.Document\n             * @static\n             * @param {google.cloud.language.v1beta2.IDocument} message Document message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Document.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a Document message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.Document\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.Document} Document\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Document.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.Document();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.type = reader.int32();\n                    break;\n\n                  case 2:\n                    message.content = reader.string();\n                    break;\n\n                  case 3:\n                    message.gcsContentUri = reader.string();\n                    break;\n\n                  case 4:\n                    message.language = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a Document message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.Document\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.Document} Document\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Document.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a Document message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.Document\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Document.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              var properties = {};\n              if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n                default:\n                  return \"type: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                  break;\n              }\n\n              if (message.content != null && message.hasOwnProperty(\"content\")) {\n                properties.source = 1;\n                if (!$util.isString(message.content)) return \"content: string expected\";\n              }\n\n              if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) {\n                if (properties.source === 1) return \"source: multiple values\";\n                properties.source = 1;\n                if (!$util.isString(message.gcsContentUri)) return \"gcsContentUri: string expected\";\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n              return null;\n            };\n            /**\n             * Creates a Document message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.Document\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.Document} Document\n             */\n\n\n            Document.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.Document) return object;\n              var message = new $root.google.cloud.language.v1beta2.Document();\n\n              switch (object.type) {\n                case \"TYPE_UNSPECIFIED\":\n                case 0:\n                  message.type = 0;\n                  break;\n\n                case \"PLAIN_TEXT\":\n                case 1:\n                  message.type = 1;\n                  break;\n\n                case \"HTML\":\n                case 2:\n                  message.type = 2;\n                  break;\n              }\n\n              if (object.content != null) message.content = String(object.content);\n              if (object.gcsContentUri != null) message.gcsContentUri = String(object.gcsContentUri);\n              if (object.language != null) message.language = String(object.language);\n              return message;\n            };\n            /**\n             * Creates a plain object from a Document message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.Document\n             * @static\n             * @param {google.cloud.language.v1beta2.Document} message Document\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Document.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.type = options.enums === String ? \"TYPE_UNSPECIFIED\" : 0;\n                object.language = \"\";\n              }\n\n              if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.google.cloud.language.v1beta2.Document.Type[message.type] : message.type;\n\n              if (message.content != null && message.hasOwnProperty(\"content\")) {\n                object.content = message.content;\n                if (options.oneofs) object.source = \"content\";\n              }\n\n              if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) {\n                object.gcsContentUri = message.gcsContentUri;\n                if (options.oneofs) object.source = \"gcsContentUri\";\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n              return object;\n            };\n            /**\n             * Converts this Document to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.Document\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Document.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Type enum.\n             * @name google.cloud.language.v1beta2.Document.Type\n             * @enum {string}\n             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value\n             * @property {number} PLAIN_TEXT=1 PLAIN_TEXT value\n             * @property {number} HTML=2 HTML value\n             */\n\n\n            Document.Type = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"TYPE_UNSPECIFIED\"] = 0;\n              values[valuesById[1] = \"PLAIN_TEXT\"] = 1;\n              values[valuesById[2] = \"HTML\"] = 2;\n              return values;\n            }();\n\n            return Document;\n          }();\n\n          v1beta2.Sentence = function () {\n            /**\n             * Properties of a Sentence.\n             * @memberof google.cloud.language.v1beta2\n             * @interface ISentence\n             * @property {google.cloud.language.v1beta2.ITextSpan|null} [text] Sentence text\n             * @property {google.cloud.language.v1beta2.ISentiment|null} [sentiment] Sentence sentiment\n             */\n\n            /**\n             * Constructs a new Sentence.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a Sentence.\n             * @implements ISentence\n             * @constructor\n             * @param {google.cloud.language.v1beta2.ISentence=} [properties] Properties to set\n             */\n            function Sentence(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Sentence text.\n             * @member {google.cloud.language.v1beta2.ITextSpan|null|undefined} text\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @instance\n             */\n\n\n            Sentence.prototype.text = null;\n            /**\n             * Sentence sentiment.\n             * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} sentiment\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @instance\n             */\n\n            Sentence.prototype.sentiment = null;\n            /**\n             * Creates a new Sentence instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @static\n             * @param {google.cloud.language.v1beta2.ISentence=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.Sentence} Sentence instance\n             */\n\n            Sentence.create = function create(properties) {\n              return new Sentence(properties);\n            };\n            /**\n             * Encodes the specified Sentence message. Does not implicitly {@link google.cloud.language.v1beta2.Sentence.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @static\n             * @param {google.cloud.language.v1beta2.ISentence} message Sentence message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Sentence.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.text != null && message.hasOwnProperty(\"text\")) $root.google.cloud.language.v1beta2.TextSpan.encode(message.text, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) $root.google.cloud.language.v1beta2.Sentiment.encode(message.sentiment, writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified Sentence message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Sentence.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @static\n             * @param {google.cloud.language.v1beta2.ISentence} message Sentence message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Sentence.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a Sentence message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.Sentence} Sentence\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Sentence.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.Sentence();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.text = $root.google.cloud.language.v1beta2.TextSpan.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a Sentence message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.Sentence} Sentence\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Sentence.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a Sentence message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Sentence.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) {\n                var error = $root.google.cloud.language.v1beta2.TextSpan.verify(message.text);\n                if (error) return \"text.\" + error;\n              }\n\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.sentiment);\n                if (error) return \"sentiment.\" + error;\n              }\n\n              return null;\n            };\n            /**\n             * Creates a Sentence message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.Sentence} Sentence\n             */\n\n\n            Sentence.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.Sentence) return object;\n              var message = new $root.google.cloud.language.v1beta2.Sentence();\n\n              if (object.text != null) {\n                if (typeof object.text !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.Sentence.text: object expected\");\n                message.text = $root.google.cloud.language.v1beta2.TextSpan.fromObject(object.text);\n              }\n\n              if (object.sentiment != null) {\n                if (typeof object.sentiment !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.Sentence.sentiment: object expected\");\n                message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.sentiment);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a Sentence message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @static\n             * @param {google.cloud.language.v1beta2.Sentence} message Sentence\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Sentence.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.text = null;\n                object.sentiment = null;\n              }\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) object.text = $root.google.cloud.language.v1beta2.TextSpan.toObject(message.text, options);\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) object.sentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.sentiment, options);\n              return object;\n            };\n            /**\n             * Converts this Sentence to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.Sentence\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Sentence.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Sentence;\n          }();\n\n          v1beta2.Entity = function () {\n            /**\n             * Properties of an Entity.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IEntity\n             * @property {string|null} [name] Entity name\n             * @property {google.cloud.language.v1beta2.Entity.Type|null} [type] Entity type\n             * @property {Object.<string,string>|null} [metadata] Entity metadata\n             * @property {number|null} [salience] Entity salience\n             * @property {Array.<google.cloud.language.v1beta2.IEntityMention>|null} [mentions] Entity mentions\n             * @property {google.cloud.language.v1beta2.ISentiment|null} [sentiment] Entity sentiment\n             */\n\n            /**\n             * Constructs a new Entity.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an Entity.\n             * @implements IEntity\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IEntity=} [properties] Properties to set\n             */\n            function Entity(properties) {\n              this.metadata = {};\n              this.mentions = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Entity name.\n             * @member {string} name\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @instance\n             */\n\n\n            Entity.prototype.name = \"\";\n            /**\n             * Entity type.\n             * @member {google.cloud.language.v1beta2.Entity.Type} type\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @instance\n             */\n\n            Entity.prototype.type = 0;\n            /**\n             * Entity metadata.\n             * @member {Object.<string,string>} metadata\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @instance\n             */\n\n            Entity.prototype.metadata = $util.emptyObject;\n            /**\n             * Entity salience.\n             * @member {number} salience\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @instance\n             */\n\n            Entity.prototype.salience = 0;\n            /**\n             * Entity mentions.\n             * @member {Array.<google.cloud.language.v1beta2.IEntityMention>} mentions\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @instance\n             */\n\n            Entity.prototype.mentions = $util.emptyArray;\n            /**\n             * Entity sentiment.\n             * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} sentiment\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @instance\n             */\n\n            Entity.prototype.sentiment = null;\n            /**\n             * Creates a new Entity instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @static\n             * @param {google.cloud.language.v1beta2.IEntity=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.Entity} Entity instance\n             */\n\n            Entity.create = function create(properties) {\n              return new Entity(properties);\n            };\n            /**\n             * Encodes the specified Entity message. Does not implicitly {@link google.cloud.language.v1beta2.Entity.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @static\n             * @param {google.cloud.language.v1beta2.IEntity} message Entity message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Entity.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).string(message.name);\n              if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.type);\n              if (message.metadata != null && message.hasOwnProperty(\"metadata\")) for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i) writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork().uint32(\n              /* id 1, wireType 2 =*/\n              10).string(keys[i]).uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.metadata[keys[i]]).ldelim();\n              if (message.salience != null && message.hasOwnProperty(\"salience\")) writer.uint32(\n              /* id 4, wireType 5 =*/\n              37).float(message.salience);\n              if (message.mentions != null && message.mentions.length) for (var i = 0; i < message.mentions.length; ++i) $root.google.cloud.language.v1beta2.EntityMention.encode(message.mentions[i], writer.uint32(\n              /* id 5, wireType 2 =*/\n              42).fork()).ldelim();\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) $root.google.cloud.language.v1beta2.Sentiment.encode(message.sentiment, writer.uint32(\n              /* id 6, wireType 2 =*/\n              50).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified Entity message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Entity.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @static\n             * @param {google.cloud.language.v1beta2.IEntity} message Entity message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Entity.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an Entity message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.Entity} Entity\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Entity.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.Entity(),\n                  key;\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.name = reader.string();\n                    break;\n\n                  case 2:\n                    message.type = reader.int32();\n                    break;\n\n                  case 3:\n                    reader.skip().pos++;\n                    if (message.metadata === $util.emptyObject) message.metadata = {};\n                    key = reader.string();\n                    reader.pos++;\n                    message.metadata[key] = reader.string();\n                    break;\n\n                  case 4:\n                    message.salience = reader.float();\n                    break;\n\n                  case 5:\n                    if (!(message.mentions && message.mentions.length)) message.mentions = [];\n                    message.mentions.push($root.google.cloud.language.v1beta2.EntityMention.decode(reader, reader.uint32()));\n                    break;\n\n                  case 6:\n                    message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an Entity message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.Entity} Entity\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Entity.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an Entity message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Entity.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n              if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n                default:\n                  return \"type: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                  break;\n              }\n\n              if (message.metadata != null && message.hasOwnProperty(\"metadata\")) {\n                if (!$util.isObject(message.metadata)) return \"metadata: object expected\";\n                var key = Object.keys(message.metadata);\n\n                for (var i = 0; i < key.length; ++i) if (!$util.isString(message.metadata[key[i]])) return \"metadata: string{k:string} expected\";\n              }\n\n              if (message.salience != null && message.hasOwnProperty(\"salience\")) if (typeof message.salience !== \"number\") return \"salience: number expected\";\n\n              if (message.mentions != null && message.hasOwnProperty(\"mentions\")) {\n                if (!Array.isArray(message.mentions)) return \"mentions: array expected\";\n\n                for (var i = 0; i < message.mentions.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.EntityMention.verify(message.mentions[i]);\n                  if (error) return \"mentions.\" + error;\n                }\n              }\n\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.sentiment);\n                if (error) return \"sentiment.\" + error;\n              }\n\n              return null;\n            };\n            /**\n             * Creates an Entity message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.Entity} Entity\n             */\n\n\n            Entity.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.Entity) return object;\n              var message = new $root.google.cloud.language.v1beta2.Entity();\n              if (object.name != null) message.name = String(object.name);\n\n              switch (object.type) {\n                case \"UNKNOWN\":\n                case 0:\n                  message.type = 0;\n                  break;\n\n                case \"PERSON\":\n                case 1:\n                  message.type = 1;\n                  break;\n\n                case \"LOCATION\":\n                case 2:\n                  message.type = 2;\n                  break;\n\n                case \"ORGANIZATION\":\n                case 3:\n                  message.type = 3;\n                  break;\n\n                case \"EVENT\":\n                case 4:\n                  message.type = 4;\n                  break;\n\n                case \"WORK_OF_ART\":\n                case 5:\n                  message.type = 5;\n                  break;\n\n                case \"CONSUMER_GOOD\":\n                case 6:\n                  message.type = 6;\n                  break;\n\n                case \"OTHER\":\n                case 7:\n                  message.type = 7;\n                  break;\n\n                case \"PHONE_NUMBER\":\n                case 9:\n                  message.type = 9;\n                  break;\n\n                case \"ADDRESS\":\n                case 10:\n                  message.type = 10;\n                  break;\n\n                case \"DATE\":\n                case 11:\n                  message.type = 11;\n                  break;\n\n                case \"NUMBER\":\n                case 12:\n                  message.type = 12;\n                  break;\n\n                case \"PRICE\":\n                case 13:\n                  message.type = 13;\n                  break;\n              }\n\n              if (object.metadata) {\n                if (typeof object.metadata !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.Entity.metadata: object expected\");\n                message.metadata = {};\n\n                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i) message.metadata[keys[i]] = String(object.metadata[keys[i]]);\n              }\n\n              if (object.salience != null) message.salience = Number(object.salience);\n\n              if (object.mentions) {\n                if (!Array.isArray(object.mentions)) throw TypeError(\".google.cloud.language.v1beta2.Entity.mentions: array expected\");\n                message.mentions = [];\n\n                for (var i = 0; i < object.mentions.length; ++i) {\n                  if (typeof object.mentions[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.Entity.mentions: object expected\");\n                  message.mentions[i] = $root.google.cloud.language.v1beta2.EntityMention.fromObject(object.mentions[i]);\n                }\n              }\n\n              if (object.sentiment != null) {\n                if (typeof object.sentiment !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.Entity.sentiment: object expected\");\n                message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.sentiment);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an Entity message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @static\n             * @param {google.cloud.language.v1beta2.Entity} message Entity\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Entity.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.mentions = [];\n              if (options.objects || options.defaults) object.metadata = {};\n\n              if (options.defaults) {\n                object.name = \"\";\n                object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                object.salience = 0;\n                object.sentiment = null;\n              }\n\n              if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n              if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.google.cloud.language.v1beta2.Entity.Type[message.type] : message.type;\n              var keys2;\n\n              if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {\n                object.metadata = {};\n\n                for (var j = 0; j < keys2.length; ++j) object.metadata[keys2[j]] = message.metadata[keys2[j]];\n              }\n\n              if (message.salience != null && message.hasOwnProperty(\"salience\")) object.salience = options.json && !isFinite(message.salience) ? String(message.salience) : message.salience;\n\n              if (message.mentions && message.mentions.length) {\n                object.mentions = [];\n\n                for (var j = 0; j < message.mentions.length; ++j) object.mentions[j] = $root.google.cloud.language.v1beta2.EntityMention.toObject(message.mentions[j], options);\n              }\n\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) object.sentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.sentiment, options);\n              return object;\n            };\n            /**\n             * Converts this Entity to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.Entity\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Entity.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Type enum.\n             * @name google.cloud.language.v1beta2.Entity.Type\n             * @enum {string}\n             * @property {number} UNKNOWN=0 UNKNOWN value\n             * @property {number} PERSON=1 PERSON value\n             * @property {number} LOCATION=2 LOCATION value\n             * @property {number} ORGANIZATION=3 ORGANIZATION value\n             * @property {number} EVENT=4 EVENT value\n             * @property {number} WORK_OF_ART=5 WORK_OF_ART value\n             * @property {number} CONSUMER_GOOD=6 CONSUMER_GOOD value\n             * @property {number} OTHER=7 OTHER value\n             * @property {number} PHONE_NUMBER=9 PHONE_NUMBER value\n             * @property {number} ADDRESS=10 ADDRESS value\n             * @property {number} DATE=11 DATE value\n             * @property {number} NUMBER=12 NUMBER value\n             * @property {number} PRICE=13 PRICE value\n             */\n\n\n            Entity.Type = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"UNKNOWN\"] = 0;\n              values[valuesById[1] = \"PERSON\"] = 1;\n              values[valuesById[2] = \"LOCATION\"] = 2;\n              values[valuesById[3] = \"ORGANIZATION\"] = 3;\n              values[valuesById[4] = \"EVENT\"] = 4;\n              values[valuesById[5] = \"WORK_OF_ART\"] = 5;\n              values[valuesById[6] = \"CONSUMER_GOOD\"] = 6;\n              values[valuesById[7] = \"OTHER\"] = 7;\n              values[valuesById[9] = \"PHONE_NUMBER\"] = 9;\n              values[valuesById[10] = \"ADDRESS\"] = 10;\n              values[valuesById[11] = \"DATE\"] = 11;\n              values[valuesById[12] = \"NUMBER\"] = 12;\n              values[valuesById[13] = \"PRICE\"] = 13;\n              return values;\n            }();\n\n            return Entity;\n          }();\n\n          v1beta2.Token = function () {\n            /**\n             * Properties of a Token.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IToken\n             * @property {google.cloud.language.v1beta2.ITextSpan|null} [text] Token text\n             * @property {google.cloud.language.v1beta2.IPartOfSpeech|null} [partOfSpeech] Token partOfSpeech\n             * @property {google.cloud.language.v1beta2.IDependencyEdge|null} [dependencyEdge] Token dependencyEdge\n             * @property {string|null} [lemma] Token lemma\n             */\n\n            /**\n             * Constructs a new Token.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a Token.\n             * @implements IToken\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IToken=} [properties] Properties to set\n             */\n            function Token(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Token text.\n             * @member {google.cloud.language.v1beta2.ITextSpan|null|undefined} text\n             * @memberof google.cloud.language.v1beta2.Token\n             * @instance\n             */\n\n\n            Token.prototype.text = null;\n            /**\n             * Token partOfSpeech.\n             * @member {google.cloud.language.v1beta2.IPartOfSpeech|null|undefined} partOfSpeech\n             * @memberof google.cloud.language.v1beta2.Token\n             * @instance\n             */\n\n            Token.prototype.partOfSpeech = null;\n            /**\n             * Token dependencyEdge.\n             * @member {google.cloud.language.v1beta2.IDependencyEdge|null|undefined} dependencyEdge\n             * @memberof google.cloud.language.v1beta2.Token\n             * @instance\n             */\n\n            Token.prototype.dependencyEdge = null;\n            /**\n             * Token lemma.\n             * @member {string} lemma\n             * @memberof google.cloud.language.v1beta2.Token\n             * @instance\n             */\n\n            Token.prototype.lemma = \"\";\n            /**\n             * Creates a new Token instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.Token\n             * @static\n             * @param {google.cloud.language.v1beta2.IToken=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.Token} Token instance\n             */\n\n            Token.create = function create(properties) {\n              return new Token(properties);\n            };\n            /**\n             * Encodes the specified Token message. Does not implicitly {@link google.cloud.language.v1beta2.Token.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.Token\n             * @static\n             * @param {google.cloud.language.v1beta2.IToken} message Token message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Token.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.text != null && message.hasOwnProperty(\"text\")) $root.google.cloud.language.v1beta2.TextSpan.encode(message.text, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\")) $root.google.cloud.language.v1beta2.PartOfSpeech.encode(message.partOfSpeech, writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\")) $root.google.cloud.language.v1beta2.DependencyEdge.encode(message.dependencyEdge, writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork()).ldelim();\n              if (message.lemma != null && message.hasOwnProperty(\"lemma\")) writer.uint32(\n              /* id 4, wireType 2 =*/\n              34).string(message.lemma);\n              return writer;\n            };\n            /**\n             * Encodes the specified Token message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Token.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.Token\n             * @static\n             * @param {google.cloud.language.v1beta2.IToken} message Token message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Token.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a Token message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.Token\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.Token} Token\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Token.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.Token();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.text = $root.google.cloud.language.v1beta2.TextSpan.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.partOfSpeech = $root.google.cloud.language.v1beta2.PartOfSpeech.decode(reader, reader.uint32());\n                    break;\n\n                  case 3:\n                    message.dependencyEdge = $root.google.cloud.language.v1beta2.DependencyEdge.decode(reader, reader.uint32());\n                    break;\n\n                  case 4:\n                    message.lemma = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a Token message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.Token\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.Token} Token\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Token.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a Token message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.Token\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Token.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) {\n                var error = $root.google.cloud.language.v1beta2.TextSpan.verify(message.text);\n                if (error) return \"text.\" + error;\n              }\n\n              if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\")) {\n                var error = $root.google.cloud.language.v1beta2.PartOfSpeech.verify(message.partOfSpeech);\n                if (error) return \"partOfSpeech.\" + error;\n              }\n\n              if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\")) {\n                var error = $root.google.cloud.language.v1beta2.DependencyEdge.verify(message.dependencyEdge);\n                if (error) return \"dependencyEdge.\" + error;\n              }\n\n              if (message.lemma != null && message.hasOwnProperty(\"lemma\")) if (!$util.isString(message.lemma)) return \"lemma: string expected\";\n              return null;\n            };\n            /**\n             * Creates a Token message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.Token\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.Token} Token\n             */\n\n\n            Token.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.Token) return object;\n              var message = new $root.google.cloud.language.v1beta2.Token();\n\n              if (object.text != null) {\n                if (typeof object.text !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.Token.text: object expected\");\n                message.text = $root.google.cloud.language.v1beta2.TextSpan.fromObject(object.text);\n              }\n\n              if (object.partOfSpeech != null) {\n                if (typeof object.partOfSpeech !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.Token.partOfSpeech: object expected\");\n                message.partOfSpeech = $root.google.cloud.language.v1beta2.PartOfSpeech.fromObject(object.partOfSpeech);\n              }\n\n              if (object.dependencyEdge != null) {\n                if (typeof object.dependencyEdge !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.Token.dependencyEdge: object expected\");\n                message.dependencyEdge = $root.google.cloud.language.v1beta2.DependencyEdge.fromObject(object.dependencyEdge);\n              }\n\n              if (object.lemma != null) message.lemma = String(object.lemma);\n              return message;\n            };\n            /**\n             * Creates a plain object from a Token message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.Token\n             * @static\n             * @param {google.cloud.language.v1beta2.Token} message Token\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Token.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.text = null;\n                object.partOfSpeech = null;\n                object.dependencyEdge = null;\n                object.lemma = \"\";\n              }\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) object.text = $root.google.cloud.language.v1beta2.TextSpan.toObject(message.text, options);\n              if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\")) object.partOfSpeech = $root.google.cloud.language.v1beta2.PartOfSpeech.toObject(message.partOfSpeech, options);\n              if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\")) object.dependencyEdge = $root.google.cloud.language.v1beta2.DependencyEdge.toObject(message.dependencyEdge, options);\n              if (message.lemma != null && message.hasOwnProperty(\"lemma\")) object.lemma = message.lemma;\n              return object;\n            };\n            /**\n             * Converts this Token to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.Token\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Token.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Token;\n          }();\n          /**\n           * EncodingType enum.\n           * @name google.cloud.language.v1beta2.EncodingType\n           * @enum {string}\n           * @property {number} NONE=0 NONE value\n           * @property {number} UTF8=1 UTF8 value\n           * @property {number} UTF16=2 UTF16 value\n           * @property {number} UTF32=3 UTF32 value\n           */\n\n\n          v1beta2.EncodingType = function () {\n            var valuesById = {},\n                values = Object.create(valuesById);\n            values[valuesById[0] = \"NONE\"] = 0;\n            values[valuesById[1] = \"UTF8\"] = 1;\n            values[valuesById[2] = \"UTF16\"] = 2;\n            values[valuesById[3] = \"UTF32\"] = 3;\n            return values;\n          }();\n\n          v1beta2.Sentiment = function () {\n            /**\n             * Properties of a Sentiment.\n             * @memberof google.cloud.language.v1beta2\n             * @interface ISentiment\n             * @property {number|null} [magnitude] Sentiment magnitude\n             * @property {number|null} [score] Sentiment score\n             */\n\n            /**\n             * Constructs a new Sentiment.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a Sentiment.\n             * @implements ISentiment\n             * @constructor\n             * @param {google.cloud.language.v1beta2.ISentiment=} [properties] Properties to set\n             */\n            function Sentiment(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * Sentiment magnitude.\n             * @member {number} magnitude\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @instance\n             */\n\n\n            Sentiment.prototype.magnitude = 0;\n            /**\n             * Sentiment score.\n             * @member {number} score\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @instance\n             */\n\n            Sentiment.prototype.score = 0;\n            /**\n             * Creates a new Sentiment instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @static\n             * @param {google.cloud.language.v1beta2.ISentiment=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.Sentiment} Sentiment instance\n             */\n\n            Sentiment.create = function create(properties) {\n              return new Sentiment(properties);\n            };\n            /**\n             * Encodes the specified Sentiment message. Does not implicitly {@link google.cloud.language.v1beta2.Sentiment.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @static\n             * @param {google.cloud.language.v1beta2.ISentiment} message Sentiment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Sentiment.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.magnitude != null && message.hasOwnProperty(\"magnitude\")) writer.uint32(\n              /* id 2, wireType 5 =*/\n              21).float(message.magnitude);\n              if (message.score != null && message.hasOwnProperty(\"score\")) writer.uint32(\n              /* id 3, wireType 5 =*/\n              29).float(message.score);\n              return writer;\n            };\n            /**\n             * Encodes the specified Sentiment message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Sentiment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @static\n             * @param {google.cloud.language.v1beta2.ISentiment} message Sentiment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            Sentiment.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a Sentiment message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.Sentiment} Sentiment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Sentiment.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.Sentiment();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 2:\n                    message.magnitude = reader.float();\n                    break;\n\n                  case 3:\n                    message.score = reader.float();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a Sentiment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.Sentiment} Sentiment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            Sentiment.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a Sentiment message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            Sentiment.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.magnitude != null && message.hasOwnProperty(\"magnitude\")) if (typeof message.magnitude !== \"number\") return \"magnitude: number expected\";\n              if (message.score != null && message.hasOwnProperty(\"score\")) if (typeof message.score !== \"number\") return \"score: number expected\";\n              return null;\n            };\n            /**\n             * Creates a Sentiment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.Sentiment} Sentiment\n             */\n\n\n            Sentiment.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.Sentiment) return object;\n              var message = new $root.google.cloud.language.v1beta2.Sentiment();\n              if (object.magnitude != null) message.magnitude = Number(object.magnitude);\n              if (object.score != null) message.score = Number(object.score);\n              return message;\n            };\n            /**\n             * Creates a plain object from a Sentiment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @static\n             * @param {google.cloud.language.v1beta2.Sentiment} message Sentiment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Sentiment.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.magnitude = 0;\n                object.score = 0;\n              }\n\n              if (message.magnitude != null && message.hasOwnProperty(\"magnitude\")) object.magnitude = options.json && !isFinite(message.magnitude) ? String(message.magnitude) : message.magnitude;\n              if (message.score != null && message.hasOwnProperty(\"score\")) object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;\n              return object;\n            };\n            /**\n             * Converts this Sentiment to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.Sentiment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Sentiment.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Sentiment;\n          }();\n\n          v1beta2.PartOfSpeech = function () {\n            /**\n             * Properties of a PartOfSpeech.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IPartOfSpeech\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Tag|null} [tag] PartOfSpeech tag\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Aspect|null} [aspect] PartOfSpeech aspect\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Case|null} [\"case\"] PartOfSpeech case\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Form|null} [form] PartOfSpeech form\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Gender|null} [gender] PartOfSpeech gender\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Mood|null} [mood] PartOfSpeech mood\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Number|null} [number] PartOfSpeech number\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Person|null} [person] PartOfSpeech person\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Proper|null} [proper] PartOfSpeech proper\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Reciprocity|null} [reciprocity] PartOfSpeech reciprocity\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Tense|null} [tense] PartOfSpeech tense\n             * @property {google.cloud.language.v1beta2.PartOfSpeech.Voice|null} [voice] PartOfSpeech voice\n             */\n\n            /**\n             * Constructs a new PartOfSpeech.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a PartOfSpeech.\n             * @implements IPartOfSpeech\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IPartOfSpeech=} [properties] Properties to set\n             */\n            function PartOfSpeech(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * PartOfSpeech tag.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Tag} tag\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n\n            PartOfSpeech.prototype.tag = 0;\n            /**\n             * PartOfSpeech aspect.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Aspect} aspect\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.aspect = 0;\n            /**\n             * PartOfSpeech case.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Case} case\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype[\"case\"] = 0;\n            /**\n             * PartOfSpeech form.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Form} form\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.form = 0;\n            /**\n             * PartOfSpeech gender.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Gender} gender\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.gender = 0;\n            /**\n             * PartOfSpeech mood.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Mood} mood\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.mood = 0;\n            /**\n             * PartOfSpeech number.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Number} number\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.number = 0;\n            /**\n             * PartOfSpeech person.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Person} person\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.person = 0;\n            /**\n             * PartOfSpeech proper.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Proper} proper\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.proper = 0;\n            /**\n             * PartOfSpeech reciprocity.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Reciprocity} reciprocity\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.reciprocity = 0;\n            /**\n             * PartOfSpeech tense.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Tense} tense\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.tense = 0;\n            /**\n             * PartOfSpeech voice.\n             * @member {google.cloud.language.v1beta2.PartOfSpeech.Voice} voice\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             */\n\n            PartOfSpeech.prototype.voice = 0;\n            /**\n             * Creates a new PartOfSpeech instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @static\n             * @param {google.cloud.language.v1beta2.IPartOfSpeech=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.PartOfSpeech} PartOfSpeech instance\n             */\n\n            PartOfSpeech.create = function create(properties) {\n              return new PartOfSpeech(properties);\n            };\n            /**\n             * Encodes the specified PartOfSpeech message. Does not implicitly {@link google.cloud.language.v1beta2.PartOfSpeech.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @static\n             * @param {google.cloud.language.v1beta2.IPartOfSpeech} message PartOfSpeech message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            PartOfSpeech.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.tag != null && message.hasOwnProperty(\"tag\")) writer.uint32(\n              /* id 1, wireType 0 =*/\n              8).int32(message.tag);\n              if (message.aspect != null && message.hasOwnProperty(\"aspect\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.aspect);\n              if (message[\"case\"] != null && message.hasOwnProperty(\"case\")) writer.uint32(\n              /* id 3, wireType 0 =*/\n              24).int32(message[\"case\"]);\n              if (message.form != null && message.hasOwnProperty(\"form\")) writer.uint32(\n              /* id 4, wireType 0 =*/\n              32).int32(message.form);\n              if (message.gender != null && message.hasOwnProperty(\"gender\")) writer.uint32(\n              /* id 5, wireType 0 =*/\n              40).int32(message.gender);\n              if (message.mood != null && message.hasOwnProperty(\"mood\")) writer.uint32(\n              /* id 6, wireType 0 =*/\n              48).int32(message.mood);\n              if (message.number != null && message.hasOwnProperty(\"number\")) writer.uint32(\n              /* id 7, wireType 0 =*/\n              56).int32(message.number);\n              if (message.person != null && message.hasOwnProperty(\"person\")) writer.uint32(\n              /* id 8, wireType 0 =*/\n              64).int32(message.person);\n              if (message.proper != null && message.hasOwnProperty(\"proper\")) writer.uint32(\n              /* id 9, wireType 0 =*/\n              72).int32(message.proper);\n              if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\")) writer.uint32(\n              /* id 10, wireType 0 =*/\n              80).int32(message.reciprocity);\n              if (message.tense != null && message.hasOwnProperty(\"tense\")) writer.uint32(\n              /* id 11, wireType 0 =*/\n              88).int32(message.tense);\n              if (message.voice != null && message.hasOwnProperty(\"voice\")) writer.uint32(\n              /* id 12, wireType 0 =*/\n              96).int32(message.voice);\n              return writer;\n            };\n            /**\n             * Encodes the specified PartOfSpeech message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.PartOfSpeech.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @static\n             * @param {google.cloud.language.v1beta2.IPartOfSpeech} message PartOfSpeech message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            PartOfSpeech.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a PartOfSpeech message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.PartOfSpeech} PartOfSpeech\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            PartOfSpeech.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.PartOfSpeech();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.tag = reader.int32();\n                    break;\n\n                  case 2:\n                    message.aspect = reader.int32();\n                    break;\n\n                  case 3:\n                    message[\"case\"] = reader.int32();\n                    break;\n\n                  case 4:\n                    message.form = reader.int32();\n                    break;\n\n                  case 5:\n                    message.gender = reader.int32();\n                    break;\n\n                  case 6:\n                    message.mood = reader.int32();\n                    break;\n\n                  case 7:\n                    message.number = reader.int32();\n                    break;\n\n                  case 8:\n                    message.person = reader.int32();\n                    break;\n\n                  case 9:\n                    message.proper = reader.int32();\n                    break;\n\n                  case 10:\n                    message.reciprocity = reader.int32();\n                    break;\n\n                  case 11:\n                    message.tense = reader.int32();\n                    break;\n\n                  case 12:\n                    message.voice = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a PartOfSpeech message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.PartOfSpeech} PartOfSpeech\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            PartOfSpeech.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a PartOfSpeech message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            PartOfSpeech.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.tag != null && message.hasOwnProperty(\"tag\")) switch (message.tag) {\n                default:\n                  return \"tag: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                  break;\n              }\n              if (message.aspect != null && message.hasOwnProperty(\"aspect\")) switch (message.aspect) {\n                default:\n                  return \"aspect: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              if (message[\"case\"] != null && message.hasOwnProperty(\"case\")) switch (message[\"case\"]) {\n                default:\n                  return \"case: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                  break;\n              }\n              if (message.form != null && message.hasOwnProperty(\"form\")) switch (message.form) {\n                default:\n                  return \"form: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                  break;\n              }\n              if (message.gender != null && message.hasOwnProperty(\"gender\")) switch (message.gender) {\n                default:\n                  return \"gender: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              if (message.mood != null && message.hasOwnProperty(\"mood\")) switch (message.mood) {\n                default:\n                  return \"mood: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                  break;\n              }\n              if (message.number != null && message.hasOwnProperty(\"number\")) switch (message.number) {\n                default:\n                  return \"number: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              if (message.person != null && message.hasOwnProperty(\"person\")) switch (message.person) {\n                default:\n                  return \"person: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                  break;\n              }\n              if (message.proper != null && message.hasOwnProperty(\"proper\")) switch (message.proper) {\n                default:\n                  return \"proper: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                  break;\n              }\n              if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\")) switch (message.reciprocity) {\n                default:\n                  return \"reciprocity: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                  break;\n              }\n              if (message.tense != null && message.hasOwnProperty(\"tense\")) switch (message.tense) {\n                default:\n                  return \"tense: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                  break;\n              }\n              if (message.voice != null && message.hasOwnProperty(\"voice\")) switch (message.voice) {\n                default:\n                  return \"voice: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates a PartOfSpeech message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.PartOfSpeech} PartOfSpeech\n             */\n\n\n            PartOfSpeech.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.PartOfSpeech) return object;\n              var message = new $root.google.cloud.language.v1beta2.PartOfSpeech();\n\n              switch (object.tag) {\n                case \"UNKNOWN\":\n                case 0:\n                  message.tag = 0;\n                  break;\n\n                case \"ADJ\":\n                case 1:\n                  message.tag = 1;\n                  break;\n\n                case \"ADP\":\n                case 2:\n                  message.tag = 2;\n                  break;\n\n                case \"ADV\":\n                case 3:\n                  message.tag = 3;\n                  break;\n\n                case \"CONJ\":\n                case 4:\n                  message.tag = 4;\n                  break;\n\n                case \"DET\":\n                case 5:\n                  message.tag = 5;\n                  break;\n\n                case \"NOUN\":\n                case 6:\n                  message.tag = 6;\n                  break;\n\n                case \"NUM\":\n                case 7:\n                  message.tag = 7;\n                  break;\n\n                case \"PRON\":\n                case 8:\n                  message.tag = 8;\n                  break;\n\n                case \"PRT\":\n                case 9:\n                  message.tag = 9;\n                  break;\n\n                case \"PUNCT\":\n                case 10:\n                  message.tag = 10;\n                  break;\n\n                case \"VERB\":\n                case 11:\n                  message.tag = 11;\n                  break;\n\n                case \"X\":\n                case 12:\n                  message.tag = 12;\n                  break;\n\n                case \"AFFIX\":\n                case 13:\n                  message.tag = 13;\n                  break;\n              }\n\n              switch (object.aspect) {\n                case \"ASPECT_UNKNOWN\":\n                case 0:\n                  message.aspect = 0;\n                  break;\n\n                case \"PERFECTIVE\":\n                case 1:\n                  message.aspect = 1;\n                  break;\n\n                case \"IMPERFECTIVE\":\n                case 2:\n                  message.aspect = 2;\n                  break;\n\n                case \"PROGRESSIVE\":\n                case 3:\n                  message.aspect = 3;\n                  break;\n              }\n\n              switch (object[\"case\"]) {\n                case \"CASE_UNKNOWN\":\n                case 0:\n                  message[\"case\"] = 0;\n                  break;\n\n                case \"ACCUSATIVE\":\n                case 1:\n                  message[\"case\"] = 1;\n                  break;\n\n                case \"ADVERBIAL\":\n                case 2:\n                  message[\"case\"] = 2;\n                  break;\n\n                case \"COMPLEMENTIVE\":\n                case 3:\n                  message[\"case\"] = 3;\n                  break;\n\n                case \"DATIVE\":\n                case 4:\n                  message[\"case\"] = 4;\n                  break;\n\n                case \"GENITIVE\":\n                case 5:\n                  message[\"case\"] = 5;\n                  break;\n\n                case \"INSTRUMENTAL\":\n                case 6:\n                  message[\"case\"] = 6;\n                  break;\n\n                case \"LOCATIVE\":\n                case 7:\n                  message[\"case\"] = 7;\n                  break;\n\n                case \"NOMINATIVE\":\n                case 8:\n                  message[\"case\"] = 8;\n                  break;\n\n                case \"OBLIQUE\":\n                case 9:\n                  message[\"case\"] = 9;\n                  break;\n\n                case \"PARTITIVE\":\n                case 10:\n                  message[\"case\"] = 10;\n                  break;\n\n                case \"PREPOSITIONAL\":\n                case 11:\n                  message[\"case\"] = 11;\n                  break;\n\n                case \"REFLEXIVE_CASE\":\n                case 12:\n                  message[\"case\"] = 12;\n                  break;\n\n                case \"RELATIVE_CASE\":\n                case 13:\n                  message[\"case\"] = 13;\n                  break;\n\n                case \"VOCATIVE\":\n                case 14:\n                  message[\"case\"] = 14;\n                  break;\n              }\n\n              switch (object.form) {\n                case \"FORM_UNKNOWN\":\n                case 0:\n                  message.form = 0;\n                  break;\n\n                case \"ADNOMIAL\":\n                case 1:\n                  message.form = 1;\n                  break;\n\n                case \"AUXILIARY\":\n                case 2:\n                  message.form = 2;\n                  break;\n\n                case \"COMPLEMENTIZER\":\n                case 3:\n                  message.form = 3;\n                  break;\n\n                case \"FINAL_ENDING\":\n                case 4:\n                  message.form = 4;\n                  break;\n\n                case \"GERUND\":\n                case 5:\n                  message.form = 5;\n                  break;\n\n                case \"REALIS\":\n                case 6:\n                  message.form = 6;\n                  break;\n\n                case \"IRREALIS\":\n                case 7:\n                  message.form = 7;\n                  break;\n\n                case \"SHORT\":\n                case 8:\n                  message.form = 8;\n                  break;\n\n                case \"LONG\":\n                case 9:\n                  message.form = 9;\n                  break;\n\n                case \"ORDER\":\n                case 10:\n                  message.form = 10;\n                  break;\n\n                case \"SPECIFIC\":\n                case 11:\n                  message.form = 11;\n                  break;\n              }\n\n              switch (object.gender) {\n                case \"GENDER_UNKNOWN\":\n                case 0:\n                  message.gender = 0;\n                  break;\n\n                case \"FEMININE\":\n                case 1:\n                  message.gender = 1;\n                  break;\n\n                case \"MASCULINE\":\n                case 2:\n                  message.gender = 2;\n                  break;\n\n                case \"NEUTER\":\n                case 3:\n                  message.gender = 3;\n                  break;\n              }\n\n              switch (object.mood) {\n                case \"MOOD_UNKNOWN\":\n                case 0:\n                  message.mood = 0;\n                  break;\n\n                case \"CONDITIONAL_MOOD\":\n                case 1:\n                  message.mood = 1;\n                  break;\n\n                case \"IMPERATIVE\":\n                case 2:\n                  message.mood = 2;\n                  break;\n\n                case \"INDICATIVE\":\n                case 3:\n                  message.mood = 3;\n                  break;\n\n                case \"INTERROGATIVE\":\n                case 4:\n                  message.mood = 4;\n                  break;\n\n                case \"JUSSIVE\":\n                case 5:\n                  message.mood = 5;\n                  break;\n\n                case \"SUBJUNCTIVE\":\n                case 6:\n                  message.mood = 6;\n                  break;\n              }\n\n              switch (object.number) {\n                case \"NUMBER_UNKNOWN\":\n                case 0:\n                  message.number = 0;\n                  break;\n\n                case \"SINGULAR\":\n                case 1:\n                  message.number = 1;\n                  break;\n\n                case \"PLURAL\":\n                case 2:\n                  message.number = 2;\n                  break;\n\n                case \"DUAL\":\n                case 3:\n                  message.number = 3;\n                  break;\n              }\n\n              switch (object.person) {\n                case \"PERSON_UNKNOWN\":\n                case 0:\n                  message.person = 0;\n                  break;\n\n                case \"FIRST\":\n                case 1:\n                  message.person = 1;\n                  break;\n\n                case \"SECOND\":\n                case 2:\n                  message.person = 2;\n                  break;\n\n                case \"THIRD\":\n                case 3:\n                  message.person = 3;\n                  break;\n\n                case \"REFLEXIVE_PERSON\":\n                case 4:\n                  message.person = 4;\n                  break;\n              }\n\n              switch (object.proper) {\n                case \"PROPER_UNKNOWN\":\n                case 0:\n                  message.proper = 0;\n                  break;\n\n                case \"PROPER\":\n                case 1:\n                  message.proper = 1;\n                  break;\n\n                case \"NOT_PROPER\":\n                case 2:\n                  message.proper = 2;\n                  break;\n              }\n\n              switch (object.reciprocity) {\n                case \"RECIPROCITY_UNKNOWN\":\n                case 0:\n                  message.reciprocity = 0;\n                  break;\n\n                case \"RECIPROCAL\":\n                case 1:\n                  message.reciprocity = 1;\n                  break;\n\n                case \"NON_RECIPROCAL\":\n                case 2:\n                  message.reciprocity = 2;\n                  break;\n              }\n\n              switch (object.tense) {\n                case \"TENSE_UNKNOWN\":\n                case 0:\n                  message.tense = 0;\n                  break;\n\n                case \"CONDITIONAL_TENSE\":\n                case 1:\n                  message.tense = 1;\n                  break;\n\n                case \"FUTURE\":\n                case 2:\n                  message.tense = 2;\n                  break;\n\n                case \"PAST\":\n                case 3:\n                  message.tense = 3;\n                  break;\n\n                case \"PRESENT\":\n                case 4:\n                  message.tense = 4;\n                  break;\n\n                case \"IMPERFECT\":\n                case 5:\n                  message.tense = 5;\n                  break;\n\n                case \"PLUPERFECT\":\n                case 6:\n                  message.tense = 6;\n                  break;\n              }\n\n              switch (object.voice) {\n                case \"VOICE_UNKNOWN\":\n                case 0:\n                  message.voice = 0;\n                  break;\n\n                case \"ACTIVE\":\n                case 1:\n                  message.voice = 1;\n                  break;\n\n                case \"CAUSATIVE\":\n                case 2:\n                  message.voice = 2;\n                  break;\n\n                case \"PASSIVE\":\n                case 3:\n                  message.voice = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a PartOfSpeech message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @static\n             * @param {google.cloud.language.v1beta2.PartOfSpeech} message PartOfSpeech\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            PartOfSpeech.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.tag = options.enums === String ? \"UNKNOWN\" : 0;\n                object.aspect = options.enums === String ? \"ASPECT_UNKNOWN\" : 0;\n                object[\"case\"] = options.enums === String ? \"CASE_UNKNOWN\" : 0;\n                object.form = options.enums === String ? \"FORM_UNKNOWN\" : 0;\n                object.gender = options.enums === String ? \"GENDER_UNKNOWN\" : 0;\n                object.mood = options.enums === String ? \"MOOD_UNKNOWN\" : 0;\n                object.number = options.enums === String ? \"NUMBER_UNKNOWN\" : 0;\n                object.person = options.enums === String ? \"PERSON_UNKNOWN\" : 0;\n                object.proper = options.enums === String ? \"PROPER_UNKNOWN\" : 0;\n                object.reciprocity = options.enums === String ? \"RECIPROCITY_UNKNOWN\" : 0;\n                object.tense = options.enums === String ? \"TENSE_UNKNOWN\" : 0;\n                object.voice = options.enums === String ? \"VOICE_UNKNOWN\" : 0;\n              }\n\n              if (message.tag != null && message.hasOwnProperty(\"tag\")) object.tag = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Tag[message.tag] : message.tag;\n              if (message.aspect != null && message.hasOwnProperty(\"aspect\")) object.aspect = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Aspect[message.aspect] : message.aspect;\n              if (message[\"case\"] != null && message.hasOwnProperty(\"case\")) object[\"case\"] = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Case[message[\"case\"]] : message[\"case\"];\n              if (message.form != null && message.hasOwnProperty(\"form\")) object.form = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Form[message.form] : message.form;\n              if (message.gender != null && message.hasOwnProperty(\"gender\")) object.gender = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Gender[message.gender] : message.gender;\n              if (message.mood != null && message.hasOwnProperty(\"mood\")) object.mood = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Mood[message.mood] : message.mood;\n              if (message.number != null && message.hasOwnProperty(\"number\")) object.number = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Number[message.number] : message.number;\n              if (message.person != null && message.hasOwnProperty(\"person\")) object.person = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Person[message.person] : message.person;\n              if (message.proper != null && message.hasOwnProperty(\"proper\")) object.proper = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Proper[message.proper] : message.proper;\n              if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\")) object.reciprocity = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Reciprocity[message.reciprocity] : message.reciprocity;\n              if (message.tense != null && message.hasOwnProperty(\"tense\")) object.tense = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Tense[message.tense] : message.tense;\n              if (message.voice != null && message.hasOwnProperty(\"voice\")) object.voice = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Voice[message.voice] : message.voice;\n              return object;\n            };\n            /**\n             * Converts this PartOfSpeech to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.PartOfSpeech\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            PartOfSpeech.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Tag enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Tag\n             * @enum {string}\n             * @property {number} UNKNOWN=0 UNKNOWN value\n             * @property {number} ADJ=1 ADJ value\n             * @property {number} ADP=2 ADP value\n             * @property {number} ADV=3 ADV value\n             * @property {number} CONJ=4 CONJ value\n             * @property {number} DET=5 DET value\n             * @property {number} NOUN=6 NOUN value\n             * @property {number} NUM=7 NUM value\n             * @property {number} PRON=8 PRON value\n             * @property {number} PRT=9 PRT value\n             * @property {number} PUNCT=10 PUNCT value\n             * @property {number} VERB=11 VERB value\n             * @property {number} X=12 X value\n             * @property {number} AFFIX=13 AFFIX value\n             */\n\n\n            PartOfSpeech.Tag = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ADJ\"] = 1;\n              values[valuesById[2] = \"ADP\"] = 2;\n              values[valuesById[3] = \"ADV\"] = 3;\n              values[valuesById[4] = \"CONJ\"] = 4;\n              values[valuesById[5] = \"DET\"] = 5;\n              values[valuesById[6] = \"NOUN\"] = 6;\n              values[valuesById[7] = \"NUM\"] = 7;\n              values[valuesById[8] = \"PRON\"] = 8;\n              values[valuesById[9] = \"PRT\"] = 9;\n              values[valuesById[10] = \"PUNCT\"] = 10;\n              values[valuesById[11] = \"VERB\"] = 11;\n              values[valuesById[12] = \"X\"] = 12;\n              values[valuesById[13] = \"AFFIX\"] = 13;\n              return values;\n            }();\n            /**\n             * Aspect enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Aspect\n             * @enum {string}\n             * @property {number} ASPECT_UNKNOWN=0 ASPECT_UNKNOWN value\n             * @property {number} PERFECTIVE=1 PERFECTIVE value\n             * @property {number} IMPERFECTIVE=2 IMPERFECTIVE value\n             * @property {number} PROGRESSIVE=3 PROGRESSIVE value\n             */\n\n\n            PartOfSpeech.Aspect = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"ASPECT_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"PERFECTIVE\"] = 1;\n              values[valuesById[2] = \"IMPERFECTIVE\"] = 2;\n              values[valuesById[3] = \"PROGRESSIVE\"] = 3;\n              return values;\n            }();\n            /**\n             * Case enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Case\n             * @enum {string}\n             * @property {number} CASE_UNKNOWN=0 CASE_UNKNOWN value\n             * @property {number} ACCUSATIVE=1 ACCUSATIVE value\n             * @property {number} ADVERBIAL=2 ADVERBIAL value\n             * @property {number} COMPLEMENTIVE=3 COMPLEMENTIVE value\n             * @property {number} DATIVE=4 DATIVE value\n             * @property {number} GENITIVE=5 GENITIVE value\n             * @property {number} INSTRUMENTAL=6 INSTRUMENTAL value\n             * @property {number} LOCATIVE=7 LOCATIVE value\n             * @property {number} NOMINATIVE=8 NOMINATIVE value\n             * @property {number} OBLIQUE=9 OBLIQUE value\n             * @property {number} PARTITIVE=10 PARTITIVE value\n             * @property {number} PREPOSITIONAL=11 PREPOSITIONAL value\n             * @property {number} REFLEXIVE_CASE=12 REFLEXIVE_CASE value\n             * @property {number} RELATIVE_CASE=13 RELATIVE_CASE value\n             * @property {number} VOCATIVE=14 VOCATIVE value\n             */\n\n\n            PartOfSpeech.Case = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"CASE_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ACCUSATIVE\"] = 1;\n              values[valuesById[2] = \"ADVERBIAL\"] = 2;\n              values[valuesById[3] = \"COMPLEMENTIVE\"] = 3;\n              values[valuesById[4] = \"DATIVE\"] = 4;\n              values[valuesById[5] = \"GENITIVE\"] = 5;\n              values[valuesById[6] = \"INSTRUMENTAL\"] = 6;\n              values[valuesById[7] = \"LOCATIVE\"] = 7;\n              values[valuesById[8] = \"NOMINATIVE\"] = 8;\n              values[valuesById[9] = \"OBLIQUE\"] = 9;\n              values[valuesById[10] = \"PARTITIVE\"] = 10;\n              values[valuesById[11] = \"PREPOSITIONAL\"] = 11;\n              values[valuesById[12] = \"REFLEXIVE_CASE\"] = 12;\n              values[valuesById[13] = \"RELATIVE_CASE\"] = 13;\n              values[valuesById[14] = \"VOCATIVE\"] = 14;\n              return values;\n            }();\n            /**\n             * Form enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Form\n             * @enum {string}\n             * @property {number} FORM_UNKNOWN=0 FORM_UNKNOWN value\n             * @property {number} ADNOMIAL=1 ADNOMIAL value\n             * @property {number} AUXILIARY=2 AUXILIARY value\n             * @property {number} COMPLEMENTIZER=3 COMPLEMENTIZER value\n             * @property {number} FINAL_ENDING=4 FINAL_ENDING value\n             * @property {number} GERUND=5 GERUND value\n             * @property {number} REALIS=6 REALIS value\n             * @property {number} IRREALIS=7 IRREALIS value\n             * @property {number} SHORT=8 SHORT value\n             * @property {number} LONG=9 LONG value\n             * @property {number} ORDER=10 ORDER value\n             * @property {number} SPECIFIC=11 SPECIFIC value\n             */\n\n\n            PartOfSpeech.Form = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"FORM_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ADNOMIAL\"] = 1;\n              values[valuesById[2] = \"AUXILIARY\"] = 2;\n              values[valuesById[3] = \"COMPLEMENTIZER\"] = 3;\n              values[valuesById[4] = \"FINAL_ENDING\"] = 4;\n              values[valuesById[5] = \"GERUND\"] = 5;\n              values[valuesById[6] = \"REALIS\"] = 6;\n              values[valuesById[7] = \"IRREALIS\"] = 7;\n              values[valuesById[8] = \"SHORT\"] = 8;\n              values[valuesById[9] = \"LONG\"] = 9;\n              values[valuesById[10] = \"ORDER\"] = 10;\n              values[valuesById[11] = \"SPECIFIC\"] = 11;\n              return values;\n            }();\n            /**\n             * Gender enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Gender\n             * @enum {string}\n             * @property {number} GENDER_UNKNOWN=0 GENDER_UNKNOWN value\n             * @property {number} FEMININE=1 FEMININE value\n             * @property {number} MASCULINE=2 MASCULINE value\n             * @property {number} NEUTER=3 NEUTER value\n             */\n\n\n            PartOfSpeech.Gender = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"GENDER_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"FEMININE\"] = 1;\n              values[valuesById[2] = \"MASCULINE\"] = 2;\n              values[valuesById[3] = \"NEUTER\"] = 3;\n              return values;\n            }();\n            /**\n             * Mood enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Mood\n             * @enum {string}\n             * @property {number} MOOD_UNKNOWN=0 MOOD_UNKNOWN value\n             * @property {number} CONDITIONAL_MOOD=1 CONDITIONAL_MOOD value\n             * @property {number} IMPERATIVE=2 IMPERATIVE value\n             * @property {number} INDICATIVE=3 INDICATIVE value\n             * @property {number} INTERROGATIVE=4 INTERROGATIVE value\n             * @property {number} JUSSIVE=5 JUSSIVE value\n             * @property {number} SUBJUNCTIVE=6 SUBJUNCTIVE value\n             */\n\n\n            PartOfSpeech.Mood = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"MOOD_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"CONDITIONAL_MOOD\"] = 1;\n              values[valuesById[2] = \"IMPERATIVE\"] = 2;\n              values[valuesById[3] = \"INDICATIVE\"] = 3;\n              values[valuesById[4] = \"INTERROGATIVE\"] = 4;\n              values[valuesById[5] = \"JUSSIVE\"] = 5;\n              values[valuesById[6] = \"SUBJUNCTIVE\"] = 6;\n              return values;\n            }();\n            /**\n             * Number enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Number\n             * @enum {string}\n             * @property {number} NUMBER_UNKNOWN=0 NUMBER_UNKNOWN value\n             * @property {number} SINGULAR=1 SINGULAR value\n             * @property {number} PLURAL=2 PLURAL value\n             * @property {number} DUAL=3 DUAL value\n             */\n\n\n            PartOfSpeech.Number = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"NUMBER_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"SINGULAR\"] = 1;\n              values[valuesById[2] = \"PLURAL\"] = 2;\n              values[valuesById[3] = \"DUAL\"] = 3;\n              return values;\n            }();\n            /**\n             * Person enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Person\n             * @enum {string}\n             * @property {number} PERSON_UNKNOWN=0 PERSON_UNKNOWN value\n             * @property {number} FIRST=1 FIRST value\n             * @property {number} SECOND=2 SECOND value\n             * @property {number} THIRD=3 THIRD value\n             * @property {number} REFLEXIVE_PERSON=4 REFLEXIVE_PERSON value\n             */\n\n\n            PartOfSpeech.Person = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"PERSON_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"FIRST\"] = 1;\n              values[valuesById[2] = \"SECOND\"] = 2;\n              values[valuesById[3] = \"THIRD\"] = 3;\n              values[valuesById[4] = \"REFLEXIVE_PERSON\"] = 4;\n              return values;\n            }();\n            /**\n             * Proper enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Proper\n             * @enum {string}\n             * @property {number} PROPER_UNKNOWN=0 PROPER_UNKNOWN value\n             * @property {number} PROPER=1 PROPER value\n             * @property {number} NOT_PROPER=2 NOT_PROPER value\n             */\n\n\n            PartOfSpeech.Proper = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"PROPER_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"PROPER\"] = 1;\n              values[valuesById[2] = \"NOT_PROPER\"] = 2;\n              return values;\n            }();\n            /**\n             * Reciprocity enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Reciprocity\n             * @enum {string}\n             * @property {number} RECIPROCITY_UNKNOWN=0 RECIPROCITY_UNKNOWN value\n             * @property {number} RECIPROCAL=1 RECIPROCAL value\n             * @property {number} NON_RECIPROCAL=2 NON_RECIPROCAL value\n             */\n\n\n            PartOfSpeech.Reciprocity = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"RECIPROCITY_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"RECIPROCAL\"] = 1;\n              values[valuesById[2] = \"NON_RECIPROCAL\"] = 2;\n              return values;\n            }();\n            /**\n             * Tense enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Tense\n             * @enum {string}\n             * @property {number} TENSE_UNKNOWN=0 TENSE_UNKNOWN value\n             * @property {number} CONDITIONAL_TENSE=1 CONDITIONAL_TENSE value\n             * @property {number} FUTURE=2 FUTURE value\n             * @property {number} PAST=3 PAST value\n             * @property {number} PRESENT=4 PRESENT value\n             * @property {number} IMPERFECT=5 IMPERFECT value\n             * @property {number} PLUPERFECT=6 PLUPERFECT value\n             */\n\n\n            PartOfSpeech.Tense = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"TENSE_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"CONDITIONAL_TENSE\"] = 1;\n              values[valuesById[2] = \"FUTURE\"] = 2;\n              values[valuesById[3] = \"PAST\"] = 3;\n              values[valuesById[4] = \"PRESENT\"] = 4;\n              values[valuesById[5] = \"IMPERFECT\"] = 5;\n              values[valuesById[6] = \"PLUPERFECT\"] = 6;\n              return values;\n            }();\n            /**\n             * Voice enum.\n             * @name google.cloud.language.v1beta2.PartOfSpeech.Voice\n             * @enum {string}\n             * @property {number} VOICE_UNKNOWN=0 VOICE_UNKNOWN value\n             * @property {number} ACTIVE=1 ACTIVE value\n             * @property {number} CAUSATIVE=2 CAUSATIVE value\n             * @property {number} PASSIVE=3 PASSIVE value\n             */\n\n\n            PartOfSpeech.Voice = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"VOICE_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ACTIVE\"] = 1;\n              values[valuesById[2] = \"CAUSATIVE\"] = 2;\n              values[valuesById[3] = \"PASSIVE\"] = 3;\n              return values;\n            }();\n\n            return PartOfSpeech;\n          }();\n\n          v1beta2.DependencyEdge = function () {\n            /**\n             * Properties of a DependencyEdge.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IDependencyEdge\n             * @property {number|null} [headTokenIndex] DependencyEdge headTokenIndex\n             * @property {google.cloud.language.v1beta2.DependencyEdge.Label|null} [label] DependencyEdge label\n             */\n\n            /**\n             * Constructs a new DependencyEdge.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a DependencyEdge.\n             * @implements IDependencyEdge\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IDependencyEdge=} [properties] Properties to set\n             */\n            function DependencyEdge(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * DependencyEdge headTokenIndex.\n             * @member {number} headTokenIndex\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @instance\n             */\n\n\n            DependencyEdge.prototype.headTokenIndex = 0;\n            /**\n             * DependencyEdge label.\n             * @member {google.cloud.language.v1beta2.DependencyEdge.Label} label\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @instance\n             */\n\n            DependencyEdge.prototype.label = 0;\n            /**\n             * Creates a new DependencyEdge instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @static\n             * @param {google.cloud.language.v1beta2.IDependencyEdge=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.DependencyEdge} DependencyEdge instance\n             */\n\n            DependencyEdge.create = function create(properties) {\n              return new DependencyEdge(properties);\n            };\n            /**\n             * Encodes the specified DependencyEdge message. Does not implicitly {@link google.cloud.language.v1beta2.DependencyEdge.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @static\n             * @param {google.cloud.language.v1beta2.IDependencyEdge} message DependencyEdge message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            DependencyEdge.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\")) writer.uint32(\n              /* id 1, wireType 0 =*/\n              8).int32(message.headTokenIndex);\n              if (message.label != null && message.hasOwnProperty(\"label\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.label);\n              return writer;\n            };\n            /**\n             * Encodes the specified DependencyEdge message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.DependencyEdge.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @static\n             * @param {google.cloud.language.v1beta2.IDependencyEdge} message DependencyEdge message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            DependencyEdge.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a DependencyEdge message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.DependencyEdge} DependencyEdge\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            DependencyEdge.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.DependencyEdge();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.headTokenIndex = reader.int32();\n                    break;\n\n                  case 2:\n                    message.label = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a DependencyEdge message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.DependencyEdge} DependencyEdge\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            DependencyEdge.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a DependencyEdge message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            DependencyEdge.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\")) if (!$util.isInteger(message.headTokenIndex)) return \"headTokenIndex: integer expected\";\n              if (message.label != null && message.hasOwnProperty(\"label\")) switch (message.label) {\n                default:\n                  return \"label: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                case 15:\n                case 16:\n                case 17:\n                case 18:\n                case 19:\n                case 20:\n                case 21:\n                case 22:\n                case 23:\n                case 24:\n                case 25:\n                case 26:\n                case 27:\n                case 28:\n                case 29:\n                case 30:\n                case 31:\n                case 32:\n                case 33:\n                case 34:\n                case 35:\n                case 36:\n                case 37:\n                case 38:\n                case 39:\n                case 40:\n                case 41:\n                case 42:\n                case 43:\n                case 44:\n                case 45:\n                case 46:\n                case 47:\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                case 58:\n                case 59:\n                case 60:\n                case 61:\n                case 62:\n                case 63:\n                case 64:\n                case 65:\n                case 66:\n                case 67:\n                case 68:\n                case 69:\n                case 70:\n                case 71:\n                case 72:\n                case 73:\n                case 74:\n                case 75:\n                case 76:\n                case 77:\n                case 78:\n                case 79:\n                case 80:\n                case 81:\n                case 82:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates a DependencyEdge message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.DependencyEdge} DependencyEdge\n             */\n\n\n            DependencyEdge.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.DependencyEdge) return object;\n              var message = new $root.google.cloud.language.v1beta2.DependencyEdge();\n              if (object.headTokenIndex != null) message.headTokenIndex = object.headTokenIndex | 0;\n\n              switch (object.label) {\n                case \"UNKNOWN\":\n                case 0:\n                  message.label = 0;\n                  break;\n\n                case \"ABBREV\":\n                case 1:\n                  message.label = 1;\n                  break;\n\n                case \"ACOMP\":\n                case 2:\n                  message.label = 2;\n                  break;\n\n                case \"ADVCL\":\n                case 3:\n                  message.label = 3;\n                  break;\n\n                case \"ADVMOD\":\n                case 4:\n                  message.label = 4;\n                  break;\n\n                case \"AMOD\":\n                case 5:\n                  message.label = 5;\n                  break;\n\n                case \"APPOS\":\n                case 6:\n                  message.label = 6;\n                  break;\n\n                case \"ATTR\":\n                case 7:\n                  message.label = 7;\n                  break;\n\n                case \"AUX\":\n                case 8:\n                  message.label = 8;\n                  break;\n\n                case \"AUXPASS\":\n                case 9:\n                  message.label = 9;\n                  break;\n\n                case \"CC\":\n                case 10:\n                  message.label = 10;\n                  break;\n\n                case \"CCOMP\":\n                case 11:\n                  message.label = 11;\n                  break;\n\n                case \"CONJ\":\n                case 12:\n                  message.label = 12;\n                  break;\n\n                case \"CSUBJ\":\n                case 13:\n                  message.label = 13;\n                  break;\n\n                case \"CSUBJPASS\":\n                case 14:\n                  message.label = 14;\n                  break;\n\n                case \"DEP\":\n                case 15:\n                  message.label = 15;\n                  break;\n\n                case \"DET\":\n                case 16:\n                  message.label = 16;\n                  break;\n\n                case \"DISCOURSE\":\n                case 17:\n                  message.label = 17;\n                  break;\n\n                case \"DOBJ\":\n                case 18:\n                  message.label = 18;\n                  break;\n\n                case \"EXPL\":\n                case 19:\n                  message.label = 19;\n                  break;\n\n                case \"GOESWITH\":\n                case 20:\n                  message.label = 20;\n                  break;\n\n                case \"IOBJ\":\n                case 21:\n                  message.label = 21;\n                  break;\n\n                case \"MARK\":\n                case 22:\n                  message.label = 22;\n                  break;\n\n                case \"MWE\":\n                case 23:\n                  message.label = 23;\n                  break;\n\n                case \"MWV\":\n                case 24:\n                  message.label = 24;\n                  break;\n\n                case \"NEG\":\n                case 25:\n                  message.label = 25;\n                  break;\n\n                case \"NN\":\n                case 26:\n                  message.label = 26;\n                  break;\n\n                case \"NPADVMOD\":\n                case 27:\n                  message.label = 27;\n                  break;\n\n                case \"NSUBJ\":\n                case 28:\n                  message.label = 28;\n                  break;\n\n                case \"NSUBJPASS\":\n                case 29:\n                  message.label = 29;\n                  break;\n\n                case \"NUM\":\n                case 30:\n                  message.label = 30;\n                  break;\n\n                case \"NUMBER\":\n                case 31:\n                  message.label = 31;\n                  break;\n\n                case \"P\":\n                case 32:\n                  message.label = 32;\n                  break;\n\n                case \"PARATAXIS\":\n                case 33:\n                  message.label = 33;\n                  break;\n\n                case \"PARTMOD\":\n                case 34:\n                  message.label = 34;\n                  break;\n\n                case \"PCOMP\":\n                case 35:\n                  message.label = 35;\n                  break;\n\n                case \"POBJ\":\n                case 36:\n                  message.label = 36;\n                  break;\n\n                case \"POSS\":\n                case 37:\n                  message.label = 37;\n                  break;\n\n                case \"POSTNEG\":\n                case 38:\n                  message.label = 38;\n                  break;\n\n                case \"PRECOMP\":\n                case 39:\n                  message.label = 39;\n                  break;\n\n                case \"PRECONJ\":\n                case 40:\n                  message.label = 40;\n                  break;\n\n                case \"PREDET\":\n                case 41:\n                  message.label = 41;\n                  break;\n\n                case \"PREF\":\n                case 42:\n                  message.label = 42;\n                  break;\n\n                case \"PREP\":\n                case 43:\n                  message.label = 43;\n                  break;\n\n                case \"PRONL\":\n                case 44:\n                  message.label = 44;\n                  break;\n\n                case \"PRT\":\n                case 45:\n                  message.label = 45;\n                  break;\n\n                case \"PS\":\n                case 46:\n                  message.label = 46;\n                  break;\n\n                case \"QUANTMOD\":\n                case 47:\n                  message.label = 47;\n                  break;\n\n                case \"RCMOD\":\n                case 48:\n                  message.label = 48;\n                  break;\n\n                case \"RCMODREL\":\n                case 49:\n                  message.label = 49;\n                  break;\n\n                case \"RDROP\":\n                case 50:\n                  message.label = 50;\n                  break;\n\n                case \"REF\":\n                case 51:\n                  message.label = 51;\n                  break;\n\n                case \"REMNANT\":\n                case 52:\n                  message.label = 52;\n                  break;\n\n                case \"REPARANDUM\":\n                case 53:\n                  message.label = 53;\n                  break;\n\n                case \"ROOT\":\n                case 54:\n                  message.label = 54;\n                  break;\n\n                case \"SNUM\":\n                case 55:\n                  message.label = 55;\n                  break;\n\n                case \"SUFF\":\n                case 56:\n                  message.label = 56;\n                  break;\n\n                case \"TMOD\":\n                case 57:\n                  message.label = 57;\n                  break;\n\n                case \"TOPIC\":\n                case 58:\n                  message.label = 58;\n                  break;\n\n                case \"VMOD\":\n                case 59:\n                  message.label = 59;\n                  break;\n\n                case \"VOCATIVE\":\n                case 60:\n                  message.label = 60;\n                  break;\n\n                case \"XCOMP\":\n                case 61:\n                  message.label = 61;\n                  break;\n\n                case \"SUFFIX\":\n                case 62:\n                  message.label = 62;\n                  break;\n\n                case \"TITLE\":\n                case 63:\n                  message.label = 63;\n                  break;\n\n                case \"ADVPHMOD\":\n                case 64:\n                  message.label = 64;\n                  break;\n\n                case \"AUXCAUS\":\n                case 65:\n                  message.label = 65;\n                  break;\n\n                case \"AUXVV\":\n                case 66:\n                  message.label = 66;\n                  break;\n\n                case \"DTMOD\":\n                case 67:\n                  message.label = 67;\n                  break;\n\n                case \"FOREIGN\":\n                case 68:\n                  message.label = 68;\n                  break;\n\n                case \"KW\":\n                case 69:\n                  message.label = 69;\n                  break;\n\n                case \"LIST\":\n                case 70:\n                  message.label = 70;\n                  break;\n\n                case \"NOMC\":\n                case 71:\n                  message.label = 71;\n                  break;\n\n                case \"NOMCSUBJ\":\n                case 72:\n                  message.label = 72;\n                  break;\n\n                case \"NOMCSUBJPASS\":\n                case 73:\n                  message.label = 73;\n                  break;\n\n                case \"NUMC\":\n                case 74:\n                  message.label = 74;\n                  break;\n\n                case \"COP\":\n                case 75:\n                  message.label = 75;\n                  break;\n\n                case \"DISLOCATED\":\n                case 76:\n                  message.label = 76;\n                  break;\n\n                case \"ASP\":\n                case 77:\n                  message.label = 77;\n                  break;\n\n                case \"GMOD\":\n                case 78:\n                  message.label = 78;\n                  break;\n\n                case \"GOBJ\":\n                case 79:\n                  message.label = 79;\n                  break;\n\n                case \"INFMOD\":\n                case 80:\n                  message.label = 80;\n                  break;\n\n                case \"MES\":\n                case 81:\n                  message.label = 81;\n                  break;\n\n                case \"NCOMP\":\n                case 82:\n                  message.label = 82;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a DependencyEdge message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @static\n             * @param {google.cloud.language.v1beta2.DependencyEdge} message DependencyEdge\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            DependencyEdge.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.headTokenIndex = 0;\n                object.label = options.enums === String ? \"UNKNOWN\" : 0;\n              }\n\n              if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\")) object.headTokenIndex = message.headTokenIndex;\n              if (message.label != null && message.hasOwnProperty(\"label\")) object.label = options.enums === String ? $root.google.cloud.language.v1beta2.DependencyEdge.Label[message.label] : message.label;\n              return object;\n            };\n            /**\n             * Converts this DependencyEdge to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.DependencyEdge\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            DependencyEdge.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Label enum.\n             * @name google.cloud.language.v1beta2.DependencyEdge.Label\n             * @enum {string}\n             * @property {number} UNKNOWN=0 UNKNOWN value\n             * @property {number} ABBREV=1 ABBREV value\n             * @property {number} ACOMP=2 ACOMP value\n             * @property {number} ADVCL=3 ADVCL value\n             * @property {number} ADVMOD=4 ADVMOD value\n             * @property {number} AMOD=5 AMOD value\n             * @property {number} APPOS=6 APPOS value\n             * @property {number} ATTR=7 ATTR value\n             * @property {number} AUX=8 AUX value\n             * @property {number} AUXPASS=9 AUXPASS value\n             * @property {number} CC=10 CC value\n             * @property {number} CCOMP=11 CCOMP value\n             * @property {number} CONJ=12 CONJ value\n             * @property {number} CSUBJ=13 CSUBJ value\n             * @property {number} CSUBJPASS=14 CSUBJPASS value\n             * @property {number} DEP=15 DEP value\n             * @property {number} DET=16 DET value\n             * @property {number} DISCOURSE=17 DISCOURSE value\n             * @property {number} DOBJ=18 DOBJ value\n             * @property {number} EXPL=19 EXPL value\n             * @property {number} GOESWITH=20 GOESWITH value\n             * @property {number} IOBJ=21 IOBJ value\n             * @property {number} MARK=22 MARK value\n             * @property {number} MWE=23 MWE value\n             * @property {number} MWV=24 MWV value\n             * @property {number} NEG=25 NEG value\n             * @property {number} NN=26 NN value\n             * @property {number} NPADVMOD=27 NPADVMOD value\n             * @property {number} NSUBJ=28 NSUBJ value\n             * @property {number} NSUBJPASS=29 NSUBJPASS value\n             * @property {number} NUM=30 NUM value\n             * @property {number} NUMBER=31 NUMBER value\n             * @property {number} P=32 P value\n             * @property {number} PARATAXIS=33 PARATAXIS value\n             * @property {number} PARTMOD=34 PARTMOD value\n             * @property {number} PCOMP=35 PCOMP value\n             * @property {number} POBJ=36 POBJ value\n             * @property {number} POSS=37 POSS value\n             * @property {number} POSTNEG=38 POSTNEG value\n             * @property {number} PRECOMP=39 PRECOMP value\n             * @property {number} PRECONJ=40 PRECONJ value\n             * @property {number} PREDET=41 PREDET value\n             * @property {number} PREF=42 PREF value\n             * @property {number} PREP=43 PREP value\n             * @property {number} PRONL=44 PRONL value\n             * @property {number} PRT=45 PRT value\n             * @property {number} PS=46 PS value\n             * @property {number} QUANTMOD=47 QUANTMOD value\n             * @property {number} RCMOD=48 RCMOD value\n             * @property {number} RCMODREL=49 RCMODREL value\n             * @property {number} RDROP=50 RDROP value\n             * @property {number} REF=51 REF value\n             * @property {number} REMNANT=52 REMNANT value\n             * @property {number} REPARANDUM=53 REPARANDUM value\n             * @property {number} ROOT=54 ROOT value\n             * @property {number} SNUM=55 SNUM value\n             * @property {number} SUFF=56 SUFF value\n             * @property {number} TMOD=57 TMOD value\n             * @property {number} TOPIC=58 TOPIC value\n             * @property {number} VMOD=59 VMOD value\n             * @property {number} VOCATIVE=60 VOCATIVE value\n             * @property {number} XCOMP=61 XCOMP value\n             * @property {number} SUFFIX=62 SUFFIX value\n             * @property {number} TITLE=63 TITLE value\n             * @property {number} ADVPHMOD=64 ADVPHMOD value\n             * @property {number} AUXCAUS=65 AUXCAUS value\n             * @property {number} AUXVV=66 AUXVV value\n             * @property {number} DTMOD=67 DTMOD value\n             * @property {number} FOREIGN=68 FOREIGN value\n             * @property {number} KW=69 KW value\n             * @property {number} LIST=70 LIST value\n             * @property {number} NOMC=71 NOMC value\n             * @property {number} NOMCSUBJ=72 NOMCSUBJ value\n             * @property {number} NOMCSUBJPASS=73 NOMCSUBJPASS value\n             * @property {number} NUMC=74 NUMC value\n             * @property {number} COP=75 COP value\n             * @property {number} DISLOCATED=76 DISLOCATED value\n             * @property {number} ASP=77 ASP value\n             * @property {number} GMOD=78 GMOD value\n             * @property {number} GOBJ=79 GOBJ value\n             * @property {number} INFMOD=80 INFMOD value\n             * @property {number} MES=81 MES value\n             * @property {number} NCOMP=82 NCOMP value\n             */\n\n\n            DependencyEdge.Label = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"UNKNOWN\"] = 0;\n              values[valuesById[1] = \"ABBREV\"] = 1;\n              values[valuesById[2] = \"ACOMP\"] = 2;\n              values[valuesById[3] = \"ADVCL\"] = 3;\n              values[valuesById[4] = \"ADVMOD\"] = 4;\n              values[valuesById[5] = \"AMOD\"] = 5;\n              values[valuesById[6] = \"APPOS\"] = 6;\n              values[valuesById[7] = \"ATTR\"] = 7;\n              values[valuesById[8] = \"AUX\"] = 8;\n              values[valuesById[9] = \"AUXPASS\"] = 9;\n              values[valuesById[10] = \"CC\"] = 10;\n              values[valuesById[11] = \"CCOMP\"] = 11;\n              values[valuesById[12] = \"CONJ\"] = 12;\n              values[valuesById[13] = \"CSUBJ\"] = 13;\n              values[valuesById[14] = \"CSUBJPASS\"] = 14;\n              values[valuesById[15] = \"DEP\"] = 15;\n              values[valuesById[16] = \"DET\"] = 16;\n              values[valuesById[17] = \"DISCOURSE\"] = 17;\n              values[valuesById[18] = \"DOBJ\"] = 18;\n              values[valuesById[19] = \"EXPL\"] = 19;\n              values[valuesById[20] = \"GOESWITH\"] = 20;\n              values[valuesById[21] = \"IOBJ\"] = 21;\n              values[valuesById[22] = \"MARK\"] = 22;\n              values[valuesById[23] = \"MWE\"] = 23;\n              values[valuesById[24] = \"MWV\"] = 24;\n              values[valuesById[25] = \"NEG\"] = 25;\n              values[valuesById[26] = \"NN\"] = 26;\n              values[valuesById[27] = \"NPADVMOD\"] = 27;\n              values[valuesById[28] = \"NSUBJ\"] = 28;\n              values[valuesById[29] = \"NSUBJPASS\"] = 29;\n              values[valuesById[30] = \"NUM\"] = 30;\n              values[valuesById[31] = \"NUMBER\"] = 31;\n              values[valuesById[32] = \"P\"] = 32;\n              values[valuesById[33] = \"PARATAXIS\"] = 33;\n              values[valuesById[34] = \"PARTMOD\"] = 34;\n              values[valuesById[35] = \"PCOMP\"] = 35;\n              values[valuesById[36] = \"POBJ\"] = 36;\n              values[valuesById[37] = \"POSS\"] = 37;\n              values[valuesById[38] = \"POSTNEG\"] = 38;\n              values[valuesById[39] = \"PRECOMP\"] = 39;\n              values[valuesById[40] = \"PRECONJ\"] = 40;\n              values[valuesById[41] = \"PREDET\"] = 41;\n              values[valuesById[42] = \"PREF\"] = 42;\n              values[valuesById[43] = \"PREP\"] = 43;\n              values[valuesById[44] = \"PRONL\"] = 44;\n              values[valuesById[45] = \"PRT\"] = 45;\n              values[valuesById[46] = \"PS\"] = 46;\n              values[valuesById[47] = \"QUANTMOD\"] = 47;\n              values[valuesById[48] = \"RCMOD\"] = 48;\n              values[valuesById[49] = \"RCMODREL\"] = 49;\n              values[valuesById[50] = \"RDROP\"] = 50;\n              values[valuesById[51] = \"REF\"] = 51;\n              values[valuesById[52] = \"REMNANT\"] = 52;\n              values[valuesById[53] = \"REPARANDUM\"] = 53;\n              values[valuesById[54] = \"ROOT\"] = 54;\n              values[valuesById[55] = \"SNUM\"] = 55;\n              values[valuesById[56] = \"SUFF\"] = 56;\n              values[valuesById[57] = \"TMOD\"] = 57;\n              values[valuesById[58] = \"TOPIC\"] = 58;\n              values[valuesById[59] = \"VMOD\"] = 59;\n              values[valuesById[60] = \"VOCATIVE\"] = 60;\n              values[valuesById[61] = \"XCOMP\"] = 61;\n              values[valuesById[62] = \"SUFFIX\"] = 62;\n              values[valuesById[63] = \"TITLE\"] = 63;\n              values[valuesById[64] = \"ADVPHMOD\"] = 64;\n              values[valuesById[65] = \"AUXCAUS\"] = 65;\n              values[valuesById[66] = \"AUXVV\"] = 66;\n              values[valuesById[67] = \"DTMOD\"] = 67;\n              values[valuesById[68] = \"FOREIGN\"] = 68;\n              values[valuesById[69] = \"KW\"] = 69;\n              values[valuesById[70] = \"LIST\"] = 70;\n              values[valuesById[71] = \"NOMC\"] = 71;\n              values[valuesById[72] = \"NOMCSUBJ\"] = 72;\n              values[valuesById[73] = \"NOMCSUBJPASS\"] = 73;\n              values[valuesById[74] = \"NUMC\"] = 74;\n              values[valuesById[75] = \"COP\"] = 75;\n              values[valuesById[76] = \"DISLOCATED\"] = 76;\n              values[valuesById[77] = \"ASP\"] = 77;\n              values[valuesById[78] = \"GMOD\"] = 78;\n              values[valuesById[79] = \"GOBJ\"] = 79;\n              values[valuesById[80] = \"INFMOD\"] = 80;\n              values[valuesById[81] = \"MES\"] = 81;\n              values[valuesById[82] = \"NCOMP\"] = 82;\n              return values;\n            }();\n\n            return DependencyEdge;\n          }();\n\n          v1beta2.EntityMention = function () {\n            /**\n             * Properties of an EntityMention.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IEntityMention\n             * @property {google.cloud.language.v1beta2.ITextSpan|null} [text] EntityMention text\n             * @property {google.cloud.language.v1beta2.EntityMention.Type|null} [type] EntityMention type\n             * @property {google.cloud.language.v1beta2.ISentiment|null} [sentiment] EntityMention sentiment\n             */\n\n            /**\n             * Constructs a new EntityMention.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an EntityMention.\n             * @implements IEntityMention\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IEntityMention=} [properties] Properties to set\n             */\n            function EntityMention(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * EntityMention text.\n             * @member {google.cloud.language.v1beta2.ITextSpan|null|undefined} text\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @instance\n             */\n\n\n            EntityMention.prototype.text = null;\n            /**\n             * EntityMention type.\n             * @member {google.cloud.language.v1beta2.EntityMention.Type} type\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @instance\n             */\n\n            EntityMention.prototype.type = 0;\n            /**\n             * EntityMention sentiment.\n             * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} sentiment\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @instance\n             */\n\n            EntityMention.prototype.sentiment = null;\n            /**\n             * Creates a new EntityMention instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @static\n             * @param {google.cloud.language.v1beta2.IEntityMention=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.EntityMention} EntityMention instance\n             */\n\n            EntityMention.create = function create(properties) {\n              return new EntityMention(properties);\n            };\n            /**\n             * Encodes the specified EntityMention message. Does not implicitly {@link google.cloud.language.v1beta2.EntityMention.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @static\n             * @param {google.cloud.language.v1beta2.IEntityMention} message EntityMention message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            EntityMention.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.text != null && message.hasOwnProperty(\"text\")) $root.google.cloud.language.v1beta2.TextSpan.encode(message.text, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.type);\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) $root.google.cloud.language.v1beta2.Sentiment.encode(message.sentiment, writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified EntityMention message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.EntityMention.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @static\n             * @param {google.cloud.language.v1beta2.IEntityMention} message EntityMention message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            EntityMention.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an EntityMention message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.EntityMention} EntityMention\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            EntityMention.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.EntityMention();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.text = $root.google.cloud.language.v1beta2.TextSpan.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.type = reader.int32();\n                    break;\n\n                  case 3:\n                    message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an EntityMention message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.EntityMention} EntityMention\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            EntityMention.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an EntityMention message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            EntityMention.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) {\n                var error = $root.google.cloud.language.v1beta2.TextSpan.verify(message.text);\n                if (error) return \"text.\" + error;\n              }\n\n              if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n                default:\n                  return \"type: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                  break;\n              }\n\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.sentiment);\n                if (error) return \"sentiment.\" + error;\n              }\n\n              return null;\n            };\n            /**\n             * Creates an EntityMention message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.EntityMention} EntityMention\n             */\n\n\n            EntityMention.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.EntityMention) return object;\n              var message = new $root.google.cloud.language.v1beta2.EntityMention();\n\n              if (object.text != null) {\n                if (typeof object.text !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.EntityMention.text: object expected\");\n                message.text = $root.google.cloud.language.v1beta2.TextSpan.fromObject(object.text);\n              }\n\n              switch (object.type) {\n                case \"TYPE_UNKNOWN\":\n                case 0:\n                  message.type = 0;\n                  break;\n\n                case \"PROPER\":\n                case 1:\n                  message.type = 1;\n                  break;\n\n                case \"COMMON\":\n                case 2:\n                  message.type = 2;\n                  break;\n              }\n\n              if (object.sentiment != null) {\n                if (typeof object.sentiment !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.EntityMention.sentiment: object expected\");\n                message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.sentiment);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an EntityMention message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @static\n             * @param {google.cloud.language.v1beta2.EntityMention} message EntityMention\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            EntityMention.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.text = null;\n                object.type = options.enums === String ? \"TYPE_UNKNOWN\" : 0;\n                object.sentiment = null;\n              }\n\n              if (message.text != null && message.hasOwnProperty(\"text\")) object.text = $root.google.cloud.language.v1beta2.TextSpan.toObject(message.text, options);\n              if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.google.cloud.language.v1beta2.EntityMention.Type[message.type] : message.type;\n              if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) object.sentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.sentiment, options);\n              return object;\n            };\n            /**\n             * Converts this EntityMention to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.EntityMention\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            EntityMention.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Type enum.\n             * @name google.cloud.language.v1beta2.EntityMention.Type\n             * @enum {string}\n             * @property {number} TYPE_UNKNOWN=0 TYPE_UNKNOWN value\n             * @property {number} PROPER=1 PROPER value\n             * @property {number} COMMON=2 COMMON value\n             */\n\n\n            EntityMention.Type = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"TYPE_UNKNOWN\"] = 0;\n              values[valuesById[1] = \"PROPER\"] = 1;\n              values[valuesById[2] = \"COMMON\"] = 2;\n              return values;\n            }();\n\n            return EntityMention;\n          }();\n\n          v1beta2.TextSpan = function () {\n            /**\n             * Properties of a TextSpan.\n             * @memberof google.cloud.language.v1beta2\n             * @interface ITextSpan\n             * @property {string|null} [content] TextSpan content\n             * @property {number|null} [beginOffset] TextSpan beginOffset\n             */\n\n            /**\n             * Constructs a new TextSpan.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a TextSpan.\n             * @implements ITextSpan\n             * @constructor\n             * @param {google.cloud.language.v1beta2.ITextSpan=} [properties] Properties to set\n             */\n            function TextSpan(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * TextSpan content.\n             * @member {string} content\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @instance\n             */\n\n\n            TextSpan.prototype.content = \"\";\n            /**\n             * TextSpan beginOffset.\n             * @member {number} beginOffset\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @instance\n             */\n\n            TextSpan.prototype.beginOffset = 0;\n            /**\n             * Creates a new TextSpan instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @static\n             * @param {google.cloud.language.v1beta2.ITextSpan=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.TextSpan} TextSpan instance\n             */\n\n            TextSpan.create = function create(properties) {\n              return new TextSpan(properties);\n            };\n            /**\n             * Encodes the specified TextSpan message. Does not implicitly {@link google.cloud.language.v1beta2.TextSpan.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @static\n             * @param {google.cloud.language.v1beta2.ITextSpan} message TextSpan message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            TextSpan.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.content != null && message.hasOwnProperty(\"content\")) writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).string(message.content);\n              if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.beginOffset);\n              return writer;\n            };\n            /**\n             * Encodes the specified TextSpan message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.TextSpan.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @static\n             * @param {google.cloud.language.v1beta2.ITextSpan} message TextSpan message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            TextSpan.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a TextSpan message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.TextSpan} TextSpan\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            TextSpan.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.TextSpan();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.content = reader.string();\n                    break;\n\n                  case 2:\n                    message.beginOffset = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a TextSpan message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.TextSpan} TextSpan\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            TextSpan.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a TextSpan message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            TextSpan.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.content != null && message.hasOwnProperty(\"content\")) if (!$util.isString(message.content)) return \"content: string expected\";\n              if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\")) if (!$util.isInteger(message.beginOffset)) return \"beginOffset: integer expected\";\n              return null;\n            };\n            /**\n             * Creates a TextSpan message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.TextSpan} TextSpan\n             */\n\n\n            TextSpan.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.TextSpan) return object;\n              var message = new $root.google.cloud.language.v1beta2.TextSpan();\n              if (object.content != null) message.content = String(object.content);\n              if (object.beginOffset != null) message.beginOffset = object.beginOffset | 0;\n              return message;\n            };\n            /**\n             * Creates a plain object from a TextSpan message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @static\n             * @param {google.cloud.language.v1beta2.TextSpan} message TextSpan\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            TextSpan.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.content = \"\";\n                object.beginOffset = 0;\n              }\n\n              if (message.content != null && message.hasOwnProperty(\"content\")) object.content = message.content;\n              if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\")) object.beginOffset = message.beginOffset;\n              return object;\n            };\n            /**\n             * Converts this TextSpan to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.TextSpan\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            TextSpan.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return TextSpan;\n          }();\n\n          v1beta2.ClassificationCategory = function () {\n            /**\n             * Properties of a ClassificationCategory.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IClassificationCategory\n             * @property {string|null} [name] ClassificationCategory name\n             * @property {number|null} [confidence] ClassificationCategory confidence\n             */\n\n            /**\n             * Constructs a new ClassificationCategory.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a ClassificationCategory.\n             * @implements IClassificationCategory\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IClassificationCategory=} [properties] Properties to set\n             */\n            function ClassificationCategory(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * ClassificationCategory name.\n             * @member {string} name\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @instance\n             */\n\n\n            ClassificationCategory.prototype.name = \"\";\n            /**\n             * ClassificationCategory confidence.\n             * @member {number} confidence\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @instance\n             */\n\n            ClassificationCategory.prototype.confidence = 0;\n            /**\n             * Creates a new ClassificationCategory instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassificationCategory=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.ClassificationCategory} ClassificationCategory instance\n             */\n\n            ClassificationCategory.create = function create(properties) {\n              return new ClassificationCategory(properties);\n            };\n            /**\n             * Encodes the specified ClassificationCategory message. Does not implicitly {@link google.cloud.language.v1beta2.ClassificationCategory.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassificationCategory} message ClassificationCategory message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassificationCategory.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).string(message.name);\n              if (message.confidence != null && message.hasOwnProperty(\"confidence\")) writer.uint32(\n              /* id 2, wireType 5 =*/\n              21).float(message.confidence);\n              return writer;\n            };\n            /**\n             * Encodes the specified ClassificationCategory message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.ClassificationCategory.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassificationCategory} message ClassificationCategory message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassificationCategory.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a ClassificationCategory message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.ClassificationCategory} ClassificationCategory\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassificationCategory.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.ClassificationCategory();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.name = reader.string();\n                    break;\n\n                  case 2:\n                    message.confidence = reader.float();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a ClassificationCategory message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.ClassificationCategory} ClassificationCategory\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassificationCategory.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a ClassificationCategory message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            ClassificationCategory.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n              if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n              if (message.confidence != null && message.hasOwnProperty(\"confidence\")) if (typeof message.confidence !== \"number\") return \"confidence: number expected\";\n              return null;\n            };\n            /**\n             * Creates a ClassificationCategory message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.ClassificationCategory} ClassificationCategory\n             */\n\n\n            ClassificationCategory.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.ClassificationCategory) return object;\n              var message = new $root.google.cloud.language.v1beta2.ClassificationCategory();\n              if (object.name != null) message.name = String(object.name);\n              if (object.confidence != null) message.confidence = Number(object.confidence);\n              return message;\n            };\n            /**\n             * Creates a plain object from a ClassificationCategory message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @static\n             * @param {google.cloud.language.v1beta2.ClassificationCategory} message ClassificationCategory\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            ClassificationCategory.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.name = \"\";\n                object.confidence = 0;\n              }\n\n              if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n              if (message.confidence != null && message.hasOwnProperty(\"confidence\")) object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n              return object;\n            };\n            /**\n             * Converts this ClassificationCategory to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.ClassificationCategory\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            ClassificationCategory.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ClassificationCategory;\n          }();\n\n          v1beta2.AnalyzeSentimentRequest = function () {\n            /**\n             * Properties of an AnalyzeSentimentRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnalyzeSentimentRequest\n             * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnalyzeSentimentRequest document\n             * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnalyzeSentimentRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnalyzeSentimentRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnalyzeSentimentRequest.\n             * @implements IAnalyzeSentimentRequest\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest=} [properties] Properties to set\n             */\n            function AnalyzeSentimentRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeSentimentRequest document.\n             * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @instance\n             */\n\n\n            AnalyzeSentimentRequest.prototype.document = null;\n            /**\n             * AnalyzeSentimentRequest encodingType.\n             * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @instance\n             */\n\n            AnalyzeSentimentRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnalyzeSentimentRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnalyzeSentimentRequest} AnalyzeSentimentRequest instance\n             */\n\n            AnalyzeSentimentRequest.create = function create(properties) {\n              return new AnalyzeSentimentRequest(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeSentimentRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSentimentRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest} message AnalyzeSentimentRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSentimentRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeSentimentRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSentimentRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest} message AnalyzeSentimentRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSentimentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeSentimentRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSentimentRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnalyzeSentimentRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeSentimentRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSentimentRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeSentimentRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeSentimentRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnalyzeSentimentRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n             */\n\n\n            AnalyzeSentimentRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeSentimentRequest) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnalyzeSentimentRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSentimentRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeSentimentRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.AnalyzeSentimentRequest} message AnalyzeSentimentRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeSentimentRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeSentimentRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeSentimentRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeSentimentRequest;\n          }();\n\n          v1beta2.AnalyzeSentimentResponse = function () {\n            /**\n             * Properties of an AnalyzeSentimentResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnalyzeSentimentResponse\n             * @property {google.cloud.language.v1beta2.ISentiment|null} [documentSentiment] AnalyzeSentimentResponse documentSentiment\n             * @property {string|null} [language] AnalyzeSentimentResponse language\n             * @property {Array.<google.cloud.language.v1beta2.ISentence>|null} [sentences] AnalyzeSentimentResponse sentences\n             */\n\n            /**\n             * Constructs a new AnalyzeSentimentResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnalyzeSentimentResponse.\n             * @implements IAnalyzeSentimentResponse\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentResponse=} [properties] Properties to set\n             */\n            function AnalyzeSentimentResponse(properties) {\n              this.sentences = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeSentimentResponse documentSentiment.\n             * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} documentSentiment\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @instance\n             */\n\n\n            AnalyzeSentimentResponse.prototype.documentSentiment = null;\n            /**\n             * AnalyzeSentimentResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @instance\n             */\n\n            AnalyzeSentimentResponse.prototype.language = \"\";\n            /**\n             * AnalyzeSentimentResponse sentences.\n             * @member {Array.<google.cloud.language.v1beta2.ISentence>} sentences\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @instance\n             */\n\n            AnalyzeSentimentResponse.prototype.sentences = $util.emptyArray;\n            /**\n             * Creates a new AnalyzeSentimentResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnalyzeSentimentResponse} AnalyzeSentimentResponse instance\n             */\n\n            AnalyzeSentimentResponse.create = function create(properties) {\n              return new AnalyzeSentimentResponse(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeSentimentResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSentimentResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentResponse} message AnalyzeSentimentResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSentimentResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) $root.google.cloud.language.v1beta2.Sentiment.encode(message.documentSentiment, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.language);\n              if (message.sentences != null && message.sentences.length) for (var i = 0; i < message.sentences.length; ++i) $root.google.cloud.language.v1beta2.Sentence.encode(message.sentences[i], writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeSentimentResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSentimentResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSentimentResponse} message AnalyzeSentimentResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSentimentResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeSentimentResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSentimentResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnalyzeSentimentResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.language = reader.string();\n                    break;\n\n                  case 3:\n                    if (!(message.sentences && message.sentences.length)) message.sentences = [];\n                    message.sentences.push($root.google.cloud.language.v1beta2.Sentence.decode(reader, reader.uint32()));\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeSentimentResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSentimentResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeSentimentResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeSentimentResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) {\n                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.documentSentiment);\n                if (error) return \"documentSentiment.\" + error;\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n\n              if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                if (!Array.isArray(message.sentences)) return \"sentences: array expected\";\n\n                for (var i = 0; i < message.sentences.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.Sentence.verify(message.sentences[i]);\n                  if (error) return \"sentences.\" + error;\n                }\n              }\n\n              return null;\n            };\n            /**\n             * Creates an AnalyzeSentimentResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n             */\n\n\n            AnalyzeSentimentResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeSentimentResponse) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnalyzeSentimentResponse();\n\n              if (object.documentSentiment != null) {\n                if (typeof object.documentSentiment !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSentimentResponse.documentSentiment: object expected\");\n                message.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.documentSentiment);\n              }\n\n              if (object.language != null) message.language = String(object.language);\n\n              if (object.sentences) {\n                if (!Array.isArray(object.sentences)) throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSentimentResponse.sentences: array expected\");\n                message.sentences = [];\n\n                for (var i = 0; i < object.sentences.length; ++i) {\n                  if (typeof object.sentences[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSentimentResponse.sentences: object expected\");\n                  message.sentences[i] = $root.google.cloud.language.v1beta2.Sentence.fromObject(object.sentences[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeSentimentResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.AnalyzeSentimentResponse} message AnalyzeSentimentResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeSentimentResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.sentences = [];\n\n              if (options.defaults) {\n                object.documentSentiment = null;\n                object.language = \"\";\n              }\n\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) object.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.documentSentiment, options);\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n\n              if (message.sentences && message.sentences.length) {\n                object.sentences = [];\n\n                for (var j = 0; j < message.sentences.length; ++j) object.sentences[j] = $root.google.cloud.language.v1beta2.Sentence.toObject(message.sentences[j], options);\n              }\n\n              return object;\n            };\n            /**\n             * Converts this AnalyzeSentimentResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeSentimentResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeSentimentResponse;\n          }();\n\n          v1beta2.AnalyzeEntitySentimentRequest = function () {\n            /**\n             * Properties of an AnalyzeEntitySentimentRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnalyzeEntitySentimentRequest\n             * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnalyzeEntitySentimentRequest document\n             * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnalyzeEntitySentimentRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnalyzeEntitySentimentRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnalyzeEntitySentimentRequest.\n             * @implements IAnalyzeEntitySentimentRequest\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest=} [properties] Properties to set\n             */\n            function AnalyzeEntitySentimentRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeEntitySentimentRequest document.\n             * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @instance\n             */\n\n\n            AnalyzeEntitySentimentRequest.prototype.document = null;\n            /**\n             * AnalyzeEntitySentimentRequest encodingType.\n             * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @instance\n             */\n\n            AnalyzeEntitySentimentRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnalyzeEntitySentimentRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest instance\n             */\n\n            AnalyzeEntitySentimentRequest.create = function create(properties) {\n              return new AnalyzeEntitySentimentRequest(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeEntitySentimentRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitySentimentRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeEntitySentimentRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitySentimentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeEntitySentimentRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitySentimentRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeEntitySentimentRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitySentimentRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeEntitySentimentRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeEntitySentimentRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnalyzeEntitySentimentRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n             */\n\n\n            AnalyzeEntitySentimentRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeEntitySentimentRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeEntitySentimentRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeEntitySentimentRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeEntitySentimentRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeEntitySentimentRequest;\n          }();\n\n          v1beta2.AnalyzeEntitySentimentResponse = function () {\n            /**\n             * Properties of an AnalyzeEntitySentimentResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnalyzeEntitySentimentResponse\n             * @property {Array.<google.cloud.language.v1beta2.IEntity>|null} [entities] AnalyzeEntitySentimentResponse entities\n             * @property {string|null} [language] AnalyzeEntitySentimentResponse language\n             */\n\n            /**\n             * Constructs a new AnalyzeEntitySentimentResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnalyzeEntitySentimentResponse.\n             * @implements IAnalyzeEntitySentimentResponse\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentResponse=} [properties] Properties to set\n             */\n            function AnalyzeEntitySentimentResponse(properties) {\n              this.entities = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeEntitySentimentResponse entities.\n             * @member {Array.<google.cloud.language.v1beta2.IEntity>} entities\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @instance\n             */\n\n\n            AnalyzeEntitySentimentResponse.prototype.entities = $util.emptyArray;\n            /**\n             * AnalyzeEntitySentimentResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @instance\n             */\n\n            AnalyzeEntitySentimentResponse.prototype.language = \"\";\n            /**\n             * Creates a new AnalyzeEntitySentimentResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse instance\n             */\n\n            AnalyzeEntitySentimentResponse.create = function create(properties) {\n              return new AnalyzeEntitySentimentResponse(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeEntitySentimentResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitySentimentResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.entities != null && message.entities.length) for (var i = 0; i < message.entities.length; ++i) $root.google.cloud.language.v1beta2.Entity.encode(message.entities[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.language);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeEntitySentimentResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitySentimentResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeEntitySentimentResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitySentimentResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.entities && message.entities.length)) message.entities = [];\n                    message.entities.push($root.google.cloud.language.v1beta2.Entity.decode(reader, reader.uint32()));\n                    break;\n\n                  case 2:\n                    message.language = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeEntitySentimentResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitySentimentResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeEntitySentimentResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeEntitySentimentResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                if (!Array.isArray(message.entities)) return \"entities: array expected\";\n\n                for (var i = 0; i < message.entities.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.Entity.verify(message.entities[i]);\n                  if (error) return \"entities.\" + error;\n                }\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n              return null;\n            };\n            /**\n             * Creates an AnalyzeEntitySentimentResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n             */\n\n\n            AnalyzeEntitySentimentResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse();\n\n              if (object.entities) {\n                if (!Array.isArray(object.entities)) throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse.entities: array expected\");\n                message.entities = [];\n\n                for (var i = 0; i < object.entities.length; ++i) {\n                  if (typeof object.entities[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse.entities: object expected\");\n                  message.entities[i] = $root.google.cloud.language.v1beta2.Entity.fromObject(object.entities[i]);\n                }\n              }\n\n              if (object.language != null) message.language = String(object.language);\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeEntitySentimentResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeEntitySentimentResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.entities = [];\n              if (options.defaults) object.language = \"\";\n\n              if (message.entities && message.entities.length) {\n                object.entities = [];\n\n                for (var j = 0; j < message.entities.length; ++j) object.entities[j] = $root.google.cloud.language.v1beta2.Entity.toObject(message.entities[j], options);\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeEntitySentimentResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeEntitySentimentResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeEntitySentimentResponse;\n          }();\n\n          v1beta2.AnalyzeEntitiesRequest = function () {\n            /**\n             * Properties of an AnalyzeEntitiesRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnalyzeEntitiesRequest\n             * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnalyzeEntitiesRequest document\n             * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnalyzeEntitiesRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnalyzeEntitiesRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnalyzeEntitiesRequest.\n             * @implements IAnalyzeEntitiesRequest\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest=} [properties] Properties to set\n             */\n            function AnalyzeEntitiesRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeEntitiesRequest document.\n             * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @instance\n             */\n\n\n            AnalyzeEntitiesRequest.prototype.document = null;\n            /**\n             * AnalyzeEntitiesRequest encodingType.\n             * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @instance\n             */\n\n            AnalyzeEntitiesRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnalyzeEntitiesRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest instance\n             */\n\n            AnalyzeEntitiesRequest.create = function create(properties) {\n              return new AnalyzeEntitiesRequest(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeEntitiesRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitiesRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest} message AnalyzeEntitiesRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitiesRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeEntitiesRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitiesRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest} message AnalyzeEntitiesRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitiesRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeEntitiesRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitiesRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnalyzeEntitiesRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeEntitiesRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitiesRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeEntitiesRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeEntitiesRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnalyzeEntitiesRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n             */\n\n\n            AnalyzeEntitiesRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeEntitiesRequest) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnalyzeEntitiesRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitiesRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeEntitiesRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} message AnalyzeEntitiesRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeEntitiesRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeEntitiesRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeEntitiesRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeEntitiesRequest;\n          }();\n\n          v1beta2.AnalyzeEntitiesResponse = function () {\n            /**\n             * Properties of an AnalyzeEntitiesResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnalyzeEntitiesResponse\n             * @property {Array.<google.cloud.language.v1beta2.IEntity>|null} [entities] AnalyzeEntitiesResponse entities\n             * @property {string|null} [language] AnalyzeEntitiesResponse language\n             */\n\n            /**\n             * Constructs a new AnalyzeEntitiesResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnalyzeEntitiesResponse.\n             * @implements IAnalyzeEntitiesResponse\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesResponse=} [properties] Properties to set\n             */\n            function AnalyzeEntitiesResponse(properties) {\n              this.entities = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeEntitiesResponse entities.\n             * @member {Array.<google.cloud.language.v1beta2.IEntity>} entities\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @instance\n             */\n\n\n            AnalyzeEntitiesResponse.prototype.entities = $util.emptyArray;\n            /**\n             * AnalyzeEntitiesResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @instance\n             */\n\n            AnalyzeEntitiesResponse.prototype.language = \"\";\n            /**\n             * Creates a new AnalyzeEntitiesResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse instance\n             */\n\n            AnalyzeEntitiesResponse.create = function create(properties) {\n              return new AnalyzeEntitiesResponse(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeEntitiesResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitiesResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesResponse} message AnalyzeEntitiesResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitiesResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.entities != null && message.entities.length) for (var i = 0; i < message.entities.length; ++i) $root.google.cloud.language.v1beta2.Entity.encode(message.entities[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).string(message.language);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeEntitiesResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitiesResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesResponse} message AnalyzeEntitiesResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeEntitiesResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeEntitiesResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitiesResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnalyzeEntitiesResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.entities && message.entities.length)) message.entities = [];\n                    message.entities.push($root.google.cloud.language.v1beta2.Entity.decode(reader, reader.uint32()));\n                    break;\n\n                  case 2:\n                    message.language = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeEntitiesResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeEntitiesResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeEntitiesResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeEntitiesResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                if (!Array.isArray(message.entities)) return \"entities: array expected\";\n\n                for (var i = 0; i < message.entities.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.Entity.verify(message.entities[i]);\n                  if (error) return \"entities.\" + error;\n                }\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n              return null;\n            };\n            /**\n             * Creates an AnalyzeEntitiesResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n             */\n\n\n            AnalyzeEntitiesResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeEntitiesResponse) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnalyzeEntitiesResponse();\n\n              if (object.entities) {\n                if (!Array.isArray(object.entities)) throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitiesResponse.entities: array expected\");\n                message.entities = [];\n\n                for (var i = 0; i < object.entities.length; ++i) {\n                  if (typeof object.entities[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitiesResponse.entities: object expected\");\n                  message.entities[i] = $root.google.cloud.language.v1beta2.Entity.fromObject(object.entities[i]);\n                }\n              }\n\n              if (object.language != null) message.language = String(object.language);\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeEntitiesResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} message AnalyzeEntitiesResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeEntitiesResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.entities = [];\n              if (options.defaults) object.language = \"\";\n\n              if (message.entities && message.entities.length) {\n                object.entities = [];\n\n                for (var j = 0; j < message.entities.length; ++j) object.entities[j] = $root.google.cloud.language.v1beta2.Entity.toObject(message.entities[j], options);\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeEntitiesResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeEntitiesResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeEntitiesResponse;\n          }();\n\n          v1beta2.AnalyzeSyntaxRequest = function () {\n            /**\n             * Properties of an AnalyzeSyntaxRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnalyzeSyntaxRequest\n             * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnalyzeSyntaxRequest document\n             * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnalyzeSyntaxRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnalyzeSyntaxRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnalyzeSyntaxRequest.\n             * @implements IAnalyzeSyntaxRequest\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest=} [properties] Properties to set\n             */\n            function AnalyzeSyntaxRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeSyntaxRequest document.\n             * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @instance\n             */\n\n\n            AnalyzeSyntaxRequest.prototype.document = null;\n            /**\n             * AnalyzeSyntaxRequest encodingType.\n             * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @instance\n             */\n\n            AnalyzeSyntaxRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnalyzeSyntaxRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest instance\n             */\n\n            AnalyzeSyntaxRequest.create = function create(properties) {\n              return new AnalyzeSyntaxRequest(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeSyntaxRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSyntaxRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest} message AnalyzeSyntaxRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSyntaxRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 2, wireType 0 =*/\n              16).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeSyntaxRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSyntaxRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest} message AnalyzeSyntaxRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSyntaxRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeSyntaxRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSyntaxRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnalyzeSyntaxRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeSyntaxRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSyntaxRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeSyntaxRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeSyntaxRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnalyzeSyntaxRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n             */\n\n\n            AnalyzeSyntaxRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeSyntaxRequest) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnalyzeSyntaxRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeSyntaxRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} message AnalyzeSyntaxRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeSyntaxRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeSyntaxRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeSyntaxRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeSyntaxRequest;\n          }();\n\n          v1beta2.AnalyzeSyntaxResponse = function () {\n            /**\n             * Properties of an AnalyzeSyntaxResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnalyzeSyntaxResponse\n             * @property {Array.<google.cloud.language.v1beta2.ISentence>|null} [sentences] AnalyzeSyntaxResponse sentences\n             * @property {Array.<google.cloud.language.v1beta2.IToken>|null} [tokens] AnalyzeSyntaxResponse tokens\n             * @property {string|null} [language] AnalyzeSyntaxResponse language\n             */\n\n            /**\n             * Constructs a new AnalyzeSyntaxResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnalyzeSyntaxResponse.\n             * @implements IAnalyzeSyntaxResponse\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxResponse=} [properties] Properties to set\n             */\n            function AnalyzeSyntaxResponse(properties) {\n              this.sentences = [];\n              this.tokens = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnalyzeSyntaxResponse sentences.\n             * @member {Array.<google.cloud.language.v1beta2.ISentence>} sentences\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @instance\n             */\n\n\n            AnalyzeSyntaxResponse.prototype.sentences = $util.emptyArray;\n            /**\n             * AnalyzeSyntaxResponse tokens.\n             * @member {Array.<google.cloud.language.v1beta2.IToken>} tokens\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @instance\n             */\n\n            AnalyzeSyntaxResponse.prototype.tokens = $util.emptyArray;\n            /**\n             * AnalyzeSyntaxResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @instance\n             */\n\n            AnalyzeSyntaxResponse.prototype.language = \"\";\n            /**\n             * Creates a new AnalyzeSyntaxResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse instance\n             */\n\n            AnalyzeSyntaxResponse.create = function create(properties) {\n              return new AnalyzeSyntaxResponse(properties);\n            };\n            /**\n             * Encodes the specified AnalyzeSyntaxResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSyntaxResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxResponse} message AnalyzeSyntaxResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSyntaxResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.sentences != null && message.sentences.length) for (var i = 0; i < message.sentences.length; ++i) $root.google.cloud.language.v1beta2.Sentence.encode(message.sentences[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.tokens != null && message.tokens.length) for (var i = 0; i < message.tokens.length; ++i) $root.google.cloud.language.v1beta2.Token.encode(message.tokens[i], writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).string(message.language);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnalyzeSyntaxResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSyntaxResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxResponse} message AnalyzeSyntaxResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnalyzeSyntaxResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnalyzeSyntaxResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSyntaxResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnalyzeSyntaxResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.sentences && message.sentences.length)) message.sentences = [];\n                    message.sentences.push($root.google.cloud.language.v1beta2.Sentence.decode(reader, reader.uint32()));\n                    break;\n\n                  case 2:\n                    if (!(message.tokens && message.tokens.length)) message.tokens = [];\n                    message.tokens.push($root.google.cloud.language.v1beta2.Token.decode(reader, reader.uint32()));\n                    break;\n\n                  case 3:\n                    message.language = reader.string();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnalyzeSyntaxResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnalyzeSyntaxResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnalyzeSyntaxResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnalyzeSyntaxResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                if (!Array.isArray(message.sentences)) return \"sentences: array expected\";\n\n                for (var i = 0; i < message.sentences.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.Sentence.verify(message.sentences[i]);\n                  if (error) return \"sentences.\" + error;\n                }\n              }\n\n              if (message.tokens != null && message.hasOwnProperty(\"tokens\")) {\n                if (!Array.isArray(message.tokens)) return \"tokens: array expected\";\n\n                for (var i = 0; i < message.tokens.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.Token.verify(message.tokens[i]);\n                  if (error) return \"tokens.\" + error;\n                }\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n              return null;\n            };\n            /**\n             * Creates an AnalyzeSyntaxResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n             */\n\n\n            AnalyzeSyntaxResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeSyntaxResponse) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnalyzeSyntaxResponse();\n\n              if (object.sentences) {\n                if (!Array.isArray(object.sentences)) throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxResponse.sentences: array expected\");\n                message.sentences = [];\n\n                for (var i = 0; i < object.sentences.length; ++i) {\n                  if (typeof object.sentences[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxResponse.sentences: object expected\");\n                  message.sentences[i] = $root.google.cloud.language.v1beta2.Sentence.fromObject(object.sentences[i]);\n                }\n              }\n\n              if (object.tokens) {\n                if (!Array.isArray(object.tokens)) throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxResponse.tokens: array expected\");\n                message.tokens = [];\n\n                for (var i = 0; i < object.tokens.length; ++i) {\n                  if (typeof object.tokens[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxResponse.tokens: object expected\");\n                  message.tokens[i] = $root.google.cloud.language.v1beta2.Token.fromObject(object.tokens[i]);\n                }\n              }\n\n              if (object.language != null) message.language = String(object.language);\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnalyzeSyntaxResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} message AnalyzeSyntaxResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnalyzeSyntaxResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.arrays || options.defaults) {\n                object.sentences = [];\n                object.tokens = [];\n              }\n\n              if (options.defaults) object.language = \"\";\n\n              if (message.sentences && message.sentences.length) {\n                object.sentences = [];\n\n                for (var j = 0; j < message.sentences.length; ++j) object.sentences[j] = $root.google.cloud.language.v1beta2.Sentence.toObject(message.sentences[j], options);\n              }\n\n              if (message.tokens && message.tokens.length) {\n                object.tokens = [];\n\n                for (var j = 0; j < message.tokens.length; ++j) object.tokens[j] = $root.google.cloud.language.v1beta2.Token.toObject(message.tokens[j], options);\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n              return object;\n            };\n            /**\n             * Converts this AnalyzeSyntaxResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnalyzeSyntaxResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnalyzeSyntaxResponse;\n          }();\n\n          v1beta2.ClassifyTextRequest = function () {\n            /**\n             * Properties of a ClassifyTextRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IClassifyTextRequest\n             * @property {google.cloud.language.v1beta2.IDocument|null} [document] ClassifyTextRequest document\n             */\n\n            /**\n             * Constructs a new ClassifyTextRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a ClassifyTextRequest.\n             * @implements IClassifyTextRequest\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IClassifyTextRequest=} [properties] Properties to set\n             */\n            function ClassifyTextRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * ClassifyTextRequest document.\n             * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @instance\n             */\n\n\n            ClassifyTextRequest.prototype.document = null;\n            /**\n             * Creates a new ClassifyTextRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassifyTextRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.ClassifyTextRequest} ClassifyTextRequest instance\n             */\n\n            ClassifyTextRequest.create = function create(properties) {\n              return new ClassifyTextRequest(properties);\n            };\n            /**\n             * Encodes the specified ClassifyTextRequest message. Does not implicitly {@link google.cloud.language.v1beta2.ClassifyTextRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassifyTextRequest} message ClassifyTextRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassifyTextRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified ClassifyTextRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.ClassifyTextRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassifyTextRequest} message ClassifyTextRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassifyTextRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a ClassifyTextRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.ClassifyTextRequest} ClassifyTextRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassifyTextRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.ClassifyTextRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a ClassifyTextRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.ClassifyTextRequest} ClassifyTextRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassifyTextRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a ClassifyTextRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            ClassifyTextRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              return null;\n            };\n            /**\n             * Creates a ClassifyTextRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.ClassifyTextRequest} ClassifyTextRequest\n             */\n\n\n            ClassifyTextRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.ClassifyTextRequest) return object;\n              var message = new $root.google.cloud.language.v1beta2.ClassifyTextRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.ClassifyTextRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a ClassifyTextRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.ClassifyTextRequest} message ClassifyTextRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            ClassifyTextRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.defaults) object.document = null;\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n              return object;\n            };\n            /**\n             * Converts this ClassifyTextRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            ClassifyTextRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ClassifyTextRequest;\n          }();\n\n          v1beta2.ClassifyTextResponse = function () {\n            /**\n             * Properties of a ClassifyTextResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IClassifyTextResponse\n             * @property {Array.<google.cloud.language.v1beta2.IClassificationCategory>|null} [categories] ClassifyTextResponse categories\n             */\n\n            /**\n             * Constructs a new ClassifyTextResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents a ClassifyTextResponse.\n             * @implements IClassifyTextResponse\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IClassifyTextResponse=} [properties] Properties to set\n             */\n            function ClassifyTextResponse(properties) {\n              this.categories = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * ClassifyTextResponse categories.\n             * @member {Array.<google.cloud.language.v1beta2.IClassificationCategory>} categories\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @instance\n             */\n\n\n            ClassifyTextResponse.prototype.categories = $util.emptyArray;\n            /**\n             * Creates a new ClassifyTextResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassifyTextResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.ClassifyTextResponse} ClassifyTextResponse instance\n             */\n\n            ClassifyTextResponse.create = function create(properties) {\n              return new ClassifyTextResponse(properties);\n            };\n            /**\n             * Encodes the specified ClassifyTextResponse message. Does not implicitly {@link google.cloud.language.v1beta2.ClassifyTextResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassifyTextResponse} message ClassifyTextResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassifyTextResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.categories != null && message.categories.length) for (var i = 0; i < message.categories.length; ++i) $root.google.cloud.language.v1beta2.ClassificationCategory.encode(message.categories[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified ClassifyTextResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.ClassifyTextResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IClassifyTextResponse} message ClassifyTextResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            ClassifyTextResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes a ClassifyTextResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.ClassifyTextResponse} ClassifyTextResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassifyTextResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.ClassifyTextResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.categories && message.categories.length)) message.categories = [];\n                    message.categories.push($root.google.cloud.language.v1beta2.ClassificationCategory.decode(reader, reader.uint32()));\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes a ClassifyTextResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.ClassifyTextResponse} ClassifyTextResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            ClassifyTextResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies a ClassifyTextResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            ClassifyTextResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.categories != null && message.hasOwnProperty(\"categories\")) {\n                if (!Array.isArray(message.categories)) return \"categories: array expected\";\n\n                for (var i = 0; i < message.categories.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.ClassificationCategory.verify(message.categories[i]);\n                  if (error) return \"categories.\" + error;\n                }\n              }\n\n              return null;\n            };\n            /**\n             * Creates a ClassifyTextResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.ClassifyTextResponse} ClassifyTextResponse\n             */\n\n\n            ClassifyTextResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.ClassifyTextResponse) return object;\n              var message = new $root.google.cloud.language.v1beta2.ClassifyTextResponse();\n\n              if (object.categories) {\n                if (!Array.isArray(object.categories)) throw TypeError(\".google.cloud.language.v1beta2.ClassifyTextResponse.categories: array expected\");\n                message.categories = [];\n\n                for (var i = 0; i < object.categories.length; ++i) {\n                  if (typeof object.categories[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.ClassifyTextResponse.categories: object expected\");\n                  message.categories[i] = $root.google.cloud.language.v1beta2.ClassificationCategory.fromObject(object.categories[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a ClassifyTextResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.ClassifyTextResponse} message ClassifyTextResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            ClassifyTextResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.categories = [];\n\n              if (message.categories && message.categories.length) {\n                object.categories = [];\n\n                for (var j = 0; j < message.categories.length; ++j) object.categories[j] = $root.google.cloud.language.v1beta2.ClassificationCategory.toObject(message.categories[j], options);\n              }\n\n              return object;\n            };\n            /**\n             * Converts this ClassifyTextResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            ClassifyTextResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ClassifyTextResponse;\n          }();\n\n          v1beta2.AnnotateTextRequest = function () {\n            /**\n             * Properties of an AnnotateTextRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnnotateTextRequest\n             * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnnotateTextRequest document\n             * @property {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures|null} [features] AnnotateTextRequest features\n             * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnnotateTextRequest encodingType\n             */\n\n            /**\n             * Constructs a new AnnotateTextRequest.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnnotateTextRequest.\n             * @implements IAnnotateTextRequest\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnnotateTextRequest=} [properties] Properties to set\n             */\n            function AnnotateTextRequest(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnnotateTextRequest document.\n             * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @instance\n             */\n\n\n            AnnotateTextRequest.prototype.document = null;\n            /**\n             * AnnotateTextRequest features.\n             * @member {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures|null|undefined} features\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @instance\n             */\n\n            AnnotateTextRequest.prototype.features = null;\n            /**\n             * AnnotateTextRequest encodingType.\n             * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @instance\n             */\n\n            AnnotateTextRequest.prototype.encodingType = 0;\n            /**\n             * Creates a new AnnotateTextRequest instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnnotateTextRequest=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnnotateTextRequest} AnnotateTextRequest instance\n             */\n\n            AnnotateTextRequest.create = function create(properties) {\n              return new AnnotateTextRequest(properties);\n            };\n            /**\n             * Encodes the specified AnnotateTextRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextRequest.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnnotateTextRequest} message AnnotateTextRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnnotateTextRequest.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.document != null && message.hasOwnProperty(\"document\")) $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.features != null && message.hasOwnProperty(\"features\")) $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.encode(message.features, writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) writer.uint32(\n              /* id 3, wireType 0 =*/\n              24).int32(message.encodingType);\n              return writer;\n            };\n            /**\n             * Encodes the specified AnnotateTextRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextRequest.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnnotateTextRequest} message AnnotateTextRequest message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnnotateTextRequest.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnnotateTextRequest message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnnotateTextRequest} AnnotateTextRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnnotateTextRequest.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnnotateTextRequest();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                    break;\n\n                  case 2:\n                    message.features = $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.decode(reader, reader.uint32());\n                    break;\n\n                  case 3:\n                    message.encodingType = reader.int32();\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnnotateTextRequest message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnnotateTextRequest} AnnotateTextRequest\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnnotateTextRequest.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnnotateTextRequest message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnnotateTextRequest.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) {\n                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                if (error) return \"document.\" + error;\n              }\n\n              if (message.features != null && message.hasOwnProperty(\"features\")) {\n                var error = $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.verify(message.features);\n                if (error) return \"features.\" + error;\n              }\n\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) switch (message.encodingType) {\n                default:\n                  return \"encodingType: enum value expected\";\n\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                  break;\n              }\n              return null;\n            };\n            /**\n             * Creates an AnnotateTextRequest message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnnotateTextRequest} AnnotateTextRequest\n             */\n\n\n            AnnotateTextRequest.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnnotateTextRequest) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnnotateTextRequest();\n\n              if (object.document != null) {\n                if (typeof object.document !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextRequest.document: object expected\");\n                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n              }\n\n              if (object.features != null) {\n                if (typeof object.features !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextRequest.features: object expected\");\n                message.features = $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.fromObject(object.features);\n              }\n\n              switch (object.encodingType) {\n                case \"NONE\":\n                case 0:\n                  message.encodingType = 0;\n                  break;\n\n                case \"UTF8\":\n                case 1:\n                  message.encodingType = 1;\n                  break;\n\n                case \"UTF16\":\n                case 2:\n                  message.encodingType = 2;\n                  break;\n\n                case \"UTF32\":\n                case 3:\n                  message.encodingType = 3;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnnotateTextRequest message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @static\n             * @param {google.cloud.language.v1beta2.AnnotateTextRequest} message AnnotateTextRequest\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnnotateTextRequest.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.document = null;\n                object.features = null;\n                object.encodingType = options.enums === String ? \"NONE\" : 0;\n              }\n\n              if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n              if (message.features != null && message.hasOwnProperty(\"features\")) object.features = $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.toObject(message.features, options);\n              if (message.encodingType != null && message.hasOwnProperty(\"encodingType\")) object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n              return object;\n            };\n            /**\n             * Converts this AnnotateTextRequest to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnnotateTextRequest.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            AnnotateTextRequest.Features = function () {\n              /**\n               * Properties of a Features.\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n               * @interface IFeatures\n               * @property {boolean|null} [extractSyntax] Features extractSyntax\n               * @property {boolean|null} [extractEntities] Features extractEntities\n               * @property {boolean|null} [extractDocumentSentiment] Features extractDocumentSentiment\n               * @property {boolean|null} [extractEntitySentiment] Features extractEntitySentiment\n               * @property {boolean|null} [classifyText] Features classifyText\n               */\n\n              /**\n               * Constructs a new Features.\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n               * @classdesc Represents a Features.\n               * @implements IFeatures\n               * @constructor\n               * @param {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures=} [properties] Properties to set\n               */\n              function Features(properties) {\n                if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n              /**\n               * Features extractSyntax.\n               * @member {boolean} extractSyntax\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @instance\n               */\n\n\n              Features.prototype.extractSyntax = false;\n              /**\n               * Features extractEntities.\n               * @member {boolean} extractEntities\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @instance\n               */\n\n              Features.prototype.extractEntities = false;\n              /**\n               * Features extractDocumentSentiment.\n               * @member {boolean} extractDocumentSentiment\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @instance\n               */\n\n              Features.prototype.extractDocumentSentiment = false;\n              /**\n               * Features extractEntitySentiment.\n               * @member {boolean} extractEntitySentiment\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @instance\n               */\n\n              Features.prototype.extractEntitySentiment = false;\n              /**\n               * Features classifyText.\n               * @member {boolean} classifyText\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @instance\n               */\n\n              Features.prototype.classifyText = false;\n              /**\n               * Creates a new Features instance using the specified properties.\n               * @function create\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @static\n               * @param {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures=} [properties] Properties to set\n               * @returns {google.cloud.language.v1beta2.AnnotateTextRequest.Features} Features instance\n               */\n\n              Features.create = function create(properties) {\n                return new Features(properties);\n              };\n              /**\n               * Encodes the specified Features message. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextRequest.Features.verify|verify} messages.\n               * @function encode\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @static\n               * @param {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures} message Features message or plain object to encode\n               * @param {$protobuf.Writer} [writer] Writer to encode to\n               * @returns {$protobuf.Writer} Writer\n               */\n\n\n              Features.encode = function encode(message, writer) {\n                if (!writer) writer = $Writer.create();\n                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\")) writer.uint32(\n                /* id 1, wireType 0 =*/\n                8).bool(message.extractSyntax);\n                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\")) writer.uint32(\n                /* id 2, wireType 0 =*/\n                16).bool(message.extractEntities);\n                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\")) writer.uint32(\n                /* id 3, wireType 0 =*/\n                24).bool(message.extractDocumentSentiment);\n                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\")) writer.uint32(\n                /* id 4, wireType 0 =*/\n                32).bool(message.extractEntitySentiment);\n                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\")) writer.uint32(\n                /* id 6, wireType 0 =*/\n                48).bool(message.classifyText);\n                return writer;\n              };\n              /**\n               * Encodes the specified Features message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextRequest.Features.verify|verify} messages.\n               * @function encodeDelimited\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @static\n               * @param {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures} message Features message or plain object to encode\n               * @param {$protobuf.Writer} [writer] Writer to encode to\n               * @returns {$protobuf.Writer} Writer\n               */\n\n\n              Features.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n              };\n              /**\n               * Decodes a Features message from the specified reader or buffer.\n               * @function decode\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @static\n               * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n               * @param {number} [length] Message length if known beforehand\n               * @returns {google.cloud.language.v1beta2.AnnotateTextRequest.Features} Features\n               * @throws {Error} If the payload is not a reader or valid buffer\n               * @throws {$protobuf.util.ProtocolError} If required fields are missing\n               */\n\n\n              Features.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length,\n                    message = new $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features();\n\n                while (reader.pos < end) {\n                  var tag = reader.uint32();\n\n                  switch (tag >>> 3) {\n                    case 1:\n                      message.extractSyntax = reader.bool();\n                      break;\n\n                    case 2:\n                      message.extractEntities = reader.bool();\n                      break;\n\n                    case 3:\n                      message.extractDocumentSentiment = reader.bool();\n                      break;\n\n                    case 4:\n                      message.extractEntitySentiment = reader.bool();\n                      break;\n\n                    case 6:\n                      message.classifyText = reader.bool();\n                      break;\n\n                    default:\n                      reader.skipType(tag & 7);\n                      break;\n                  }\n                }\n\n                return message;\n              };\n              /**\n               * Decodes a Features message from the specified reader or buffer, length delimited.\n               * @function decodeDelimited\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @static\n               * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n               * @returns {google.cloud.language.v1beta2.AnnotateTextRequest.Features} Features\n               * @throws {Error} If the payload is not a reader or valid buffer\n               * @throws {$protobuf.util.ProtocolError} If required fields are missing\n               */\n\n\n              Features.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n              };\n              /**\n               * Verifies a Features message.\n               * @function verify\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @static\n               * @param {Object.<string,*>} message Plain object to verify\n               * @returns {string|null} `null` if valid, otherwise the reason why it is not\n               */\n\n\n              Features.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null) return \"object expected\";\n                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\")) if (typeof message.extractSyntax !== \"boolean\") return \"extractSyntax: boolean expected\";\n                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\")) if (typeof message.extractEntities !== \"boolean\") return \"extractEntities: boolean expected\";\n                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\")) if (typeof message.extractDocumentSentiment !== \"boolean\") return \"extractDocumentSentiment: boolean expected\";\n                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\")) if (typeof message.extractEntitySentiment !== \"boolean\") return \"extractEntitySentiment: boolean expected\";\n                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\")) if (typeof message.classifyText !== \"boolean\") return \"classifyText: boolean expected\";\n                return null;\n              };\n              /**\n               * Creates a Features message from a plain object. Also converts values to their respective internal types.\n               * @function fromObject\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @static\n               * @param {Object.<string,*>} object Plain object\n               * @returns {google.cloud.language.v1beta2.AnnotateTextRequest.Features} Features\n               */\n\n\n              Features.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features) return object;\n                var message = new $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features();\n                if (object.extractSyntax != null) message.extractSyntax = Boolean(object.extractSyntax);\n                if (object.extractEntities != null) message.extractEntities = Boolean(object.extractEntities);\n                if (object.extractDocumentSentiment != null) message.extractDocumentSentiment = Boolean(object.extractDocumentSentiment);\n                if (object.extractEntitySentiment != null) message.extractEntitySentiment = Boolean(object.extractEntitySentiment);\n                if (object.classifyText != null) message.classifyText = Boolean(object.classifyText);\n                return message;\n              };\n              /**\n               * Creates a plain object from a Features message. Also converts values to other types if specified.\n               * @function toObject\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @static\n               * @param {google.cloud.language.v1beta2.AnnotateTextRequest.Features} message Features\n               * @param {$protobuf.IConversionOptions} [options] Conversion options\n               * @returns {Object.<string,*>} Plain object\n               */\n\n\n              Features.toObject = function toObject(message, options) {\n                if (!options) options = {};\n                var object = {};\n\n                if (options.defaults) {\n                  object.extractSyntax = false;\n                  object.extractEntities = false;\n                  object.extractDocumentSentiment = false;\n                  object.extractEntitySentiment = false;\n                  object.classifyText = false;\n                }\n\n                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\")) object.extractSyntax = message.extractSyntax;\n                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\")) object.extractEntities = message.extractEntities;\n                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\")) object.extractDocumentSentiment = message.extractDocumentSentiment;\n                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\")) object.extractEntitySentiment = message.extractEntitySentiment;\n                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\")) object.classifyText = message.classifyText;\n                return object;\n              };\n              /**\n               * Converts this Features to JSON.\n               * @function toJSON\n               * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n               * @instance\n               * @returns {Object.<string,*>} JSON object\n               */\n\n\n              Features.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n              };\n\n              return Features;\n            }();\n\n            return AnnotateTextRequest;\n          }();\n\n          v1beta2.AnnotateTextResponse = function () {\n            /**\n             * Properties of an AnnotateTextResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @interface IAnnotateTextResponse\n             * @property {Array.<google.cloud.language.v1beta2.ISentence>|null} [sentences] AnnotateTextResponse sentences\n             * @property {Array.<google.cloud.language.v1beta2.IToken>|null} [tokens] AnnotateTextResponse tokens\n             * @property {Array.<google.cloud.language.v1beta2.IEntity>|null} [entities] AnnotateTextResponse entities\n             * @property {google.cloud.language.v1beta2.ISentiment|null} [documentSentiment] AnnotateTextResponse documentSentiment\n             * @property {string|null} [language] AnnotateTextResponse language\n             * @property {Array.<google.cloud.language.v1beta2.IClassificationCategory>|null} [categories] AnnotateTextResponse categories\n             */\n\n            /**\n             * Constructs a new AnnotateTextResponse.\n             * @memberof google.cloud.language.v1beta2\n             * @classdesc Represents an AnnotateTextResponse.\n             * @implements IAnnotateTextResponse\n             * @constructor\n             * @param {google.cloud.language.v1beta2.IAnnotateTextResponse=} [properties] Properties to set\n             */\n            function AnnotateTextResponse(properties) {\n              this.sentences = [];\n              this.tokens = [];\n              this.entities = [];\n              this.categories = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n            /**\n             * AnnotateTextResponse sentences.\n             * @member {Array.<google.cloud.language.v1beta2.ISentence>} sentences\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @instance\n             */\n\n\n            AnnotateTextResponse.prototype.sentences = $util.emptyArray;\n            /**\n             * AnnotateTextResponse tokens.\n             * @member {Array.<google.cloud.language.v1beta2.IToken>} tokens\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.tokens = $util.emptyArray;\n            /**\n             * AnnotateTextResponse entities.\n             * @member {Array.<google.cloud.language.v1beta2.IEntity>} entities\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.entities = $util.emptyArray;\n            /**\n             * AnnotateTextResponse documentSentiment.\n             * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} documentSentiment\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.documentSentiment = null;\n            /**\n             * AnnotateTextResponse language.\n             * @member {string} language\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.language = \"\";\n            /**\n             * AnnotateTextResponse categories.\n             * @member {Array.<google.cloud.language.v1beta2.IClassificationCategory>} categories\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @instance\n             */\n\n            AnnotateTextResponse.prototype.categories = $util.emptyArray;\n            /**\n             * Creates a new AnnotateTextResponse instance using the specified properties.\n             * @function create\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnnotateTextResponse=} [properties] Properties to set\n             * @returns {google.cloud.language.v1beta2.AnnotateTextResponse} AnnotateTextResponse instance\n             */\n\n            AnnotateTextResponse.create = function create(properties) {\n              return new AnnotateTextResponse(properties);\n            };\n            /**\n             * Encodes the specified AnnotateTextResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextResponse.verify|verify} messages.\n             * @function encode\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnnotateTextResponse} message AnnotateTextResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnnotateTextResponse.encode = function encode(message, writer) {\n              if (!writer) writer = $Writer.create();\n              if (message.sentences != null && message.sentences.length) for (var i = 0; i < message.sentences.length; ++i) $root.google.cloud.language.v1beta2.Sentence.encode(message.sentences[i], writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork()).ldelim();\n              if (message.tokens != null && message.tokens.length) for (var i = 0; i < message.tokens.length; ++i) $root.google.cloud.language.v1beta2.Token.encode(message.tokens[i], writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork()).ldelim();\n              if (message.entities != null && message.entities.length) for (var i = 0; i < message.entities.length; ++i) $root.google.cloud.language.v1beta2.Entity.encode(message.entities[i], writer.uint32(\n              /* id 3, wireType 2 =*/\n              26).fork()).ldelim();\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) $root.google.cloud.language.v1beta2.Sentiment.encode(message.documentSentiment, writer.uint32(\n              /* id 4, wireType 2 =*/\n              34).fork()).ldelim();\n              if (message.language != null && message.hasOwnProperty(\"language\")) writer.uint32(\n              /* id 5, wireType 2 =*/\n              42).string(message.language);\n              if (message.categories != null && message.categories.length) for (var i = 0; i < message.categories.length; ++i) $root.google.cloud.language.v1beta2.ClassificationCategory.encode(message.categories[i], writer.uint32(\n              /* id 6, wireType 2 =*/\n              50).fork()).ldelim();\n              return writer;\n            };\n            /**\n             * Encodes the specified AnnotateTextResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextResponse.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.IAnnotateTextResponse} message AnnotateTextResponse message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n\n\n            AnnotateTextResponse.encodeDelimited = function encodeDelimited(message, writer) {\n              return this.encode(message, writer).ldelim();\n            };\n            /**\n             * Decodes an AnnotateTextResponse message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.cloud.language.v1beta2.AnnotateTextResponse} AnnotateTextResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnnotateTextResponse.decode = function decode(reader, length) {\n              if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n              var end = length === undefined ? reader.len : reader.pos + length,\n                  message = new $root.google.cloud.language.v1beta2.AnnotateTextResponse();\n\n              while (reader.pos < end) {\n                var tag = reader.uint32();\n\n                switch (tag >>> 3) {\n                  case 1:\n                    if (!(message.sentences && message.sentences.length)) message.sentences = [];\n                    message.sentences.push($root.google.cloud.language.v1beta2.Sentence.decode(reader, reader.uint32()));\n                    break;\n\n                  case 2:\n                    if (!(message.tokens && message.tokens.length)) message.tokens = [];\n                    message.tokens.push($root.google.cloud.language.v1beta2.Token.decode(reader, reader.uint32()));\n                    break;\n\n                  case 3:\n                    if (!(message.entities && message.entities.length)) message.entities = [];\n                    message.entities.push($root.google.cloud.language.v1beta2.Entity.decode(reader, reader.uint32()));\n                    break;\n\n                  case 4:\n                    message.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                    break;\n\n                  case 5:\n                    message.language = reader.string();\n                    break;\n\n                  case 6:\n                    if (!(message.categories && message.categories.length)) message.categories = [];\n                    message.categories.push($root.google.cloud.language.v1beta2.ClassificationCategory.decode(reader, reader.uint32()));\n                    break;\n\n                  default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Decodes an AnnotateTextResponse message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.cloud.language.v1beta2.AnnotateTextResponse} AnnotateTextResponse\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n\n\n            AnnotateTextResponse.decodeDelimited = function decodeDelimited(reader) {\n              if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n              return this.decode(reader, reader.uint32());\n            };\n            /**\n             * Verifies an AnnotateTextResponse message.\n             * @function verify\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n\n\n            AnnotateTextResponse.verify = function verify(message) {\n              if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n              if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                if (!Array.isArray(message.sentences)) return \"sentences: array expected\";\n\n                for (var i = 0; i < message.sentences.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.Sentence.verify(message.sentences[i]);\n                  if (error) return \"sentences.\" + error;\n                }\n              }\n\n              if (message.tokens != null && message.hasOwnProperty(\"tokens\")) {\n                if (!Array.isArray(message.tokens)) return \"tokens: array expected\";\n\n                for (var i = 0; i < message.tokens.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.Token.verify(message.tokens[i]);\n                  if (error) return \"tokens.\" + error;\n                }\n              }\n\n              if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                if (!Array.isArray(message.entities)) return \"entities: array expected\";\n\n                for (var i = 0; i < message.entities.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.Entity.verify(message.entities[i]);\n                  if (error) return \"entities.\" + error;\n                }\n              }\n\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) {\n                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.documentSentiment);\n                if (error) return \"documentSentiment.\" + error;\n              }\n\n              if (message.language != null && message.hasOwnProperty(\"language\")) if (!$util.isString(message.language)) return \"language: string expected\";\n\n              if (message.categories != null && message.hasOwnProperty(\"categories\")) {\n                if (!Array.isArray(message.categories)) return \"categories: array expected\";\n\n                for (var i = 0; i < message.categories.length; ++i) {\n                  var error = $root.google.cloud.language.v1beta2.ClassificationCategory.verify(message.categories[i]);\n                  if (error) return \"categories.\" + error;\n                }\n              }\n\n              return null;\n            };\n            /**\n             * Creates an AnnotateTextResponse message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.cloud.language.v1beta2.AnnotateTextResponse} AnnotateTextResponse\n             */\n\n\n            AnnotateTextResponse.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.cloud.language.v1beta2.AnnotateTextResponse) return object;\n              var message = new $root.google.cloud.language.v1beta2.AnnotateTextResponse();\n\n              if (object.sentences) {\n                if (!Array.isArray(object.sentences)) throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.sentences: array expected\");\n                message.sentences = [];\n\n                for (var i = 0; i < object.sentences.length; ++i) {\n                  if (typeof object.sentences[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.sentences: object expected\");\n                  message.sentences[i] = $root.google.cloud.language.v1beta2.Sentence.fromObject(object.sentences[i]);\n                }\n              }\n\n              if (object.tokens) {\n                if (!Array.isArray(object.tokens)) throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.tokens: array expected\");\n                message.tokens = [];\n\n                for (var i = 0; i < object.tokens.length; ++i) {\n                  if (typeof object.tokens[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.tokens: object expected\");\n                  message.tokens[i] = $root.google.cloud.language.v1beta2.Token.fromObject(object.tokens[i]);\n                }\n              }\n\n              if (object.entities) {\n                if (!Array.isArray(object.entities)) throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.entities: array expected\");\n                message.entities = [];\n\n                for (var i = 0; i < object.entities.length; ++i) {\n                  if (typeof object.entities[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.entities: object expected\");\n                  message.entities[i] = $root.google.cloud.language.v1beta2.Entity.fromObject(object.entities[i]);\n                }\n              }\n\n              if (object.documentSentiment != null) {\n                if (typeof object.documentSentiment !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.documentSentiment: object expected\");\n                message.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.documentSentiment);\n              }\n\n              if (object.language != null) message.language = String(object.language);\n\n              if (object.categories) {\n                if (!Array.isArray(object.categories)) throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.categories: array expected\");\n                message.categories = [];\n\n                for (var i = 0; i < object.categories.length; ++i) {\n                  if (typeof object.categories[i] !== \"object\") throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.categories: object expected\");\n                  message.categories[i] = $root.google.cloud.language.v1beta2.ClassificationCategory.fromObject(object.categories[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an AnnotateTextResponse message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @static\n             * @param {google.cloud.language.v1beta2.AnnotateTextResponse} message AnnotateTextResponse\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            AnnotateTextResponse.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.arrays || options.defaults) {\n                object.sentences = [];\n                object.tokens = [];\n                object.entities = [];\n                object.categories = [];\n              }\n\n              if (options.defaults) {\n                object.documentSentiment = null;\n                object.language = \"\";\n              }\n\n              if (message.sentences && message.sentences.length) {\n                object.sentences = [];\n\n                for (var j = 0; j < message.sentences.length; ++j) object.sentences[j] = $root.google.cloud.language.v1beta2.Sentence.toObject(message.sentences[j], options);\n              }\n\n              if (message.tokens && message.tokens.length) {\n                object.tokens = [];\n\n                for (var j = 0; j < message.tokens.length; ++j) object.tokens[j] = $root.google.cloud.language.v1beta2.Token.toObject(message.tokens[j], options);\n              }\n\n              if (message.entities && message.entities.length) {\n                object.entities = [];\n\n                for (var j = 0; j < message.entities.length; ++j) object.entities[j] = $root.google.cloud.language.v1beta2.Entity.toObject(message.entities[j], options);\n              }\n\n              if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) object.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.documentSentiment, options);\n              if (message.language != null && message.hasOwnProperty(\"language\")) object.language = message.language;\n\n              if (message.categories && message.categories.length) {\n                object.categories = [];\n\n                for (var j = 0; j < message.categories.length; ++j) object.categories[j] = $root.google.cloud.language.v1beta2.ClassificationCategory.toObject(message.categories[j], options);\n              }\n\n              return object;\n            };\n            /**\n             * Converts this AnnotateTextResponse to JSON.\n             * @function toJSON\n             * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            AnnotateTextResponse.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return AnnotateTextResponse;\n          }();\n\n          return v1beta2;\n        }();\n\n        return language;\n      }();\n\n      return cloud;\n    }();\n\n    google.api = function () {\n      /**\n       * Namespace api.\n       * @memberof google\n       * @namespace\n       */\n      var api = {};\n\n      api.Http = function () {\n        /**\n         * Properties of a Http.\n         * @memberof google.api\n         * @interface IHttp\n         * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules\n         * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion\n         */\n\n        /**\n         * Constructs a new Http.\n         * @memberof google.api\n         * @classdesc Represents a Http.\n         * @implements IHttp\n         * @constructor\n         * @param {google.api.IHttp=} [properties] Properties to set\n         */\n        function Http(properties) {\n          this.rules = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * Http rules.\n         * @member {Array.<google.api.IHttpRule>} rules\n         * @memberof google.api.Http\n         * @instance\n         */\n\n\n        Http.prototype.rules = $util.emptyArray;\n        /**\n         * Http fullyDecodeReservedExpansion.\n         * @member {boolean} fullyDecodeReservedExpansion\n         * @memberof google.api.Http\n         * @instance\n         */\n\n        Http.prototype.fullyDecodeReservedExpansion = false;\n        /**\n         * Creates a new Http instance using the specified properties.\n         * @function create\n         * @memberof google.api.Http\n         * @static\n         * @param {google.api.IHttp=} [properties] Properties to set\n         * @returns {google.api.Http} Http instance\n         */\n\n        Http.create = function create(properties) {\n          return new Http(properties);\n        };\n        /**\n         * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.\n         * @function encode\n         * @memberof google.api.Http\n         * @static\n         * @param {google.api.IHttp} message Http message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        Http.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.rules != null && message.rules.length) for (var i = 0; i < message.rules.length; ++i) $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).fork()).ldelim();\n          if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty(\"fullyDecodeReservedExpansion\")) writer.uint32(\n          /* id 2, wireType 0 =*/\n          16).bool(message.fullyDecodeReservedExpansion);\n          return writer;\n        };\n        /**\n         * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.api.Http\n         * @static\n         * @param {google.api.IHttp} message Http message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        Http.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a Http message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.api.Http\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.api.Http} Http\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        Http.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.api.Http();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                if (!(message.rules && message.rules.length)) message.rules = [];\n                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));\n                break;\n\n              case 2:\n                message.fullyDecodeReservedExpansion = reader.bool();\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a Http message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.api.Http\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.api.Http} Http\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        Http.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a Http message.\n         * @function verify\n         * @memberof google.api.Http\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        Http.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n          if (message.rules != null && message.hasOwnProperty(\"rules\")) {\n            if (!Array.isArray(message.rules)) return \"rules: array expected\";\n\n            for (var i = 0; i < message.rules.length; ++i) {\n              var error = $root.google.api.HttpRule.verify(message.rules[i]);\n              if (error) return \"rules.\" + error;\n            }\n          }\n\n          if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty(\"fullyDecodeReservedExpansion\")) if (typeof message.fullyDecodeReservedExpansion !== \"boolean\") return \"fullyDecodeReservedExpansion: boolean expected\";\n          return null;\n        };\n        /**\n         * Creates a Http message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.api.Http\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.api.Http} Http\n         */\n\n\n        Http.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.api.Http) return object;\n          var message = new $root.google.api.Http();\n\n          if (object.rules) {\n            if (!Array.isArray(object.rules)) throw TypeError(\".google.api.Http.rules: array expected\");\n            message.rules = [];\n\n            for (var i = 0; i < object.rules.length; ++i) {\n              if (typeof object.rules[i] !== \"object\") throw TypeError(\".google.api.Http.rules: object expected\");\n              message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);\n            }\n          }\n\n          if (object.fullyDecodeReservedExpansion != null) message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);\n          return message;\n        };\n        /**\n         * Creates a plain object from a Http message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.api.Http\n         * @static\n         * @param {google.api.Http} message Http\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Http.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.rules = [];\n          if (options.defaults) object.fullyDecodeReservedExpansion = false;\n\n          if (message.rules && message.rules.length) {\n            object.rules = [];\n\n            for (var j = 0; j < message.rules.length; ++j) object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);\n          }\n\n          if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty(\"fullyDecodeReservedExpansion\")) object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;\n          return object;\n        };\n        /**\n         * Converts this Http to JSON.\n         * @function toJSON\n         * @memberof google.api.Http\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Http.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Http;\n      }();\n\n      api.HttpRule = function () {\n        /**\n         * Properties of a HttpRule.\n         * @memberof google.api\n         * @interface IHttpRule\n         * @property {string|null} [selector] HttpRule selector\n         * @property {string|null} [get] HttpRule get\n         * @property {string|null} [put] HttpRule put\n         * @property {string|null} [post] HttpRule post\n         * @property {string|null} [\"delete\"] HttpRule delete\n         * @property {string|null} [patch] HttpRule patch\n         * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom\n         * @property {string|null} [body] HttpRule body\n         * @property {string|null} [responseBody] HttpRule responseBody\n         * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings\n         */\n\n        /**\n         * Constructs a new HttpRule.\n         * @memberof google.api\n         * @classdesc Represents a HttpRule.\n         * @implements IHttpRule\n         * @constructor\n         * @param {google.api.IHttpRule=} [properties] Properties to set\n         */\n        function HttpRule(properties) {\n          this.additionalBindings = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * HttpRule selector.\n         * @member {string} selector\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n\n        HttpRule.prototype.selector = \"\";\n        /**\n         * HttpRule get.\n         * @member {string} get\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.get = \"\";\n        /**\n         * HttpRule put.\n         * @member {string} put\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.put = \"\";\n        /**\n         * HttpRule post.\n         * @member {string} post\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.post = \"\";\n        /**\n         * HttpRule delete.\n         * @member {string} delete\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype[\"delete\"] = \"\";\n        /**\n         * HttpRule patch.\n         * @member {string} patch\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.patch = \"\";\n        /**\n         * HttpRule custom.\n         * @member {google.api.ICustomHttpPattern|null|undefined} custom\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.custom = null;\n        /**\n         * HttpRule body.\n         * @member {string} body\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.body = \"\";\n        /**\n         * HttpRule responseBody.\n         * @member {string} responseBody\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.responseBody = \"\";\n        /**\n         * HttpRule additionalBindings.\n         * @member {Array.<google.api.IHttpRule>} additionalBindings\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.additionalBindings = $util.emptyArray; // OneOf field names bound to virtual getters and setters\n\n        var $oneOfFields;\n        /**\n         * HttpRule pattern.\n         * @member {\"get\"|\"put\"|\"post\"|\"delete\"|\"patch\"|\"custom\"|undefined} pattern\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        Object.defineProperty(HttpRule.prototype, \"pattern\", {\n          get: $util.oneOfGetter($oneOfFields = [\"get\", \"put\", \"post\", \"delete\", \"patch\", \"custom\"]),\n          set: $util.oneOfSetter($oneOfFields)\n        });\n        /**\n         * Creates a new HttpRule instance using the specified properties.\n         * @function create\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {google.api.IHttpRule=} [properties] Properties to set\n         * @returns {google.api.HttpRule} HttpRule instance\n         */\n\n        HttpRule.create = function create(properties) {\n          return new HttpRule(properties);\n        };\n        /**\n         * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.\n         * @function encode\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {google.api.IHttpRule} message HttpRule message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        HttpRule.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.selector != null && message.hasOwnProperty(\"selector\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.selector);\n          if (message.get != null && message.hasOwnProperty(\"get\")) writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).string(message.get);\n          if (message.put != null && message.hasOwnProperty(\"put\")) writer.uint32(\n          /* id 3, wireType 2 =*/\n          26).string(message.put);\n          if (message.post != null && message.hasOwnProperty(\"post\")) writer.uint32(\n          /* id 4, wireType 2 =*/\n          34).string(message.post);\n          if (message[\"delete\"] != null && message.hasOwnProperty(\"delete\")) writer.uint32(\n          /* id 5, wireType 2 =*/\n          42).string(message[\"delete\"]);\n          if (message.patch != null && message.hasOwnProperty(\"patch\")) writer.uint32(\n          /* id 6, wireType 2 =*/\n          50).string(message.patch);\n          if (message.body != null && message.hasOwnProperty(\"body\")) writer.uint32(\n          /* id 7, wireType 2 =*/\n          58).string(message.body);\n          if (message.custom != null && message.hasOwnProperty(\"custom\")) $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(\n          /* id 8, wireType 2 =*/\n          66).fork()).ldelim();\n          if (message.additionalBindings != null && message.additionalBindings.length) for (var i = 0; i < message.additionalBindings.length; ++i) $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(\n          /* id 11, wireType 2 =*/\n          90).fork()).ldelim();\n          if (message.responseBody != null && message.hasOwnProperty(\"responseBody\")) writer.uint32(\n          /* id 12, wireType 2 =*/\n          98).string(message.responseBody);\n          return writer;\n        };\n        /**\n         * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {google.api.IHttpRule} message HttpRule message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        HttpRule.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a HttpRule message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.api.HttpRule} HttpRule\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        HttpRule.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.api.HttpRule();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.selector = reader.string();\n                break;\n\n              case 2:\n                message.get = reader.string();\n                break;\n\n              case 3:\n                message.put = reader.string();\n                break;\n\n              case 4:\n                message.post = reader.string();\n                break;\n\n              case 5:\n                message[\"delete\"] = reader.string();\n                break;\n\n              case 6:\n                message.patch = reader.string();\n                break;\n\n              case 8:\n                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());\n                break;\n\n              case 7:\n                message.body = reader.string();\n                break;\n\n              case 12:\n                message.responseBody = reader.string();\n                break;\n\n              case 11:\n                if (!(message.additionalBindings && message.additionalBindings.length)) message.additionalBindings = [];\n                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a HttpRule message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.api.HttpRule} HttpRule\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        HttpRule.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a HttpRule message.\n         * @function verify\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        HttpRule.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          var properties = {};\n          if (message.selector != null && message.hasOwnProperty(\"selector\")) if (!$util.isString(message.selector)) return \"selector: string expected\";\n\n          if (message.get != null && message.hasOwnProperty(\"get\")) {\n            properties.pattern = 1;\n            if (!$util.isString(message.get)) return \"get: string expected\";\n          }\n\n          if (message.put != null && message.hasOwnProperty(\"put\")) {\n            if (properties.pattern === 1) return \"pattern: multiple values\";\n            properties.pattern = 1;\n            if (!$util.isString(message.put)) return \"put: string expected\";\n          }\n\n          if (message.post != null && message.hasOwnProperty(\"post\")) {\n            if (properties.pattern === 1) return \"pattern: multiple values\";\n            properties.pattern = 1;\n            if (!$util.isString(message.post)) return \"post: string expected\";\n          }\n\n          if (message[\"delete\"] != null && message.hasOwnProperty(\"delete\")) {\n            if (properties.pattern === 1) return \"pattern: multiple values\";\n            properties.pattern = 1;\n            if (!$util.isString(message[\"delete\"])) return \"delete: string expected\";\n          }\n\n          if (message.patch != null && message.hasOwnProperty(\"patch\")) {\n            if (properties.pattern === 1) return \"pattern: multiple values\";\n            properties.pattern = 1;\n            if (!$util.isString(message.patch)) return \"patch: string expected\";\n          }\n\n          if (message.custom != null && message.hasOwnProperty(\"custom\")) {\n            if (properties.pattern === 1) return \"pattern: multiple values\";\n            properties.pattern = 1;\n            {\n              var error = $root.google.api.CustomHttpPattern.verify(message.custom);\n              if (error) return \"custom.\" + error;\n            }\n          }\n\n          if (message.body != null && message.hasOwnProperty(\"body\")) if (!$util.isString(message.body)) return \"body: string expected\";\n          if (message.responseBody != null && message.hasOwnProperty(\"responseBody\")) if (!$util.isString(message.responseBody)) return \"responseBody: string expected\";\n\n          if (message.additionalBindings != null && message.hasOwnProperty(\"additionalBindings\")) {\n            if (!Array.isArray(message.additionalBindings)) return \"additionalBindings: array expected\";\n\n            for (var i = 0; i < message.additionalBindings.length; ++i) {\n              var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);\n              if (error) return \"additionalBindings.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.api.HttpRule} HttpRule\n         */\n\n\n        HttpRule.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.api.HttpRule) return object;\n          var message = new $root.google.api.HttpRule();\n          if (object.selector != null) message.selector = String(object.selector);\n          if (object.get != null) message.get = String(object.get);\n          if (object.put != null) message.put = String(object.put);\n          if (object.post != null) message.post = String(object.post);\n          if (object[\"delete\"] != null) message[\"delete\"] = String(object[\"delete\"]);\n          if (object.patch != null) message.patch = String(object.patch);\n\n          if (object.custom != null) {\n            if (typeof object.custom !== \"object\") throw TypeError(\".google.api.HttpRule.custom: object expected\");\n            message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);\n          }\n\n          if (object.body != null) message.body = String(object.body);\n          if (object.responseBody != null) message.responseBody = String(object.responseBody);\n\n          if (object.additionalBindings) {\n            if (!Array.isArray(object.additionalBindings)) throw TypeError(\".google.api.HttpRule.additionalBindings: array expected\");\n            message.additionalBindings = [];\n\n            for (var i = 0; i < object.additionalBindings.length; ++i) {\n              if (typeof object.additionalBindings[i] !== \"object\") throw TypeError(\".google.api.HttpRule.additionalBindings: object expected\");\n              message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a HttpRule message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {google.api.HttpRule} message HttpRule\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        HttpRule.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.additionalBindings = [];\n\n          if (options.defaults) {\n            object.selector = \"\";\n            object.body = \"\";\n            object.responseBody = \"\";\n          }\n\n          if (message.selector != null && message.hasOwnProperty(\"selector\")) object.selector = message.selector;\n\n          if (message.get != null && message.hasOwnProperty(\"get\")) {\n            object.get = message.get;\n            if (options.oneofs) object.pattern = \"get\";\n          }\n\n          if (message.put != null && message.hasOwnProperty(\"put\")) {\n            object.put = message.put;\n            if (options.oneofs) object.pattern = \"put\";\n          }\n\n          if (message.post != null && message.hasOwnProperty(\"post\")) {\n            object.post = message.post;\n            if (options.oneofs) object.pattern = \"post\";\n          }\n\n          if (message[\"delete\"] != null && message.hasOwnProperty(\"delete\")) {\n            object[\"delete\"] = message[\"delete\"];\n            if (options.oneofs) object.pattern = \"delete\";\n          }\n\n          if (message.patch != null && message.hasOwnProperty(\"patch\")) {\n            object.patch = message.patch;\n            if (options.oneofs) object.pattern = \"patch\";\n          }\n\n          if (message.body != null && message.hasOwnProperty(\"body\")) object.body = message.body;\n\n          if (message.custom != null && message.hasOwnProperty(\"custom\")) {\n            object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);\n            if (options.oneofs) object.pattern = \"custom\";\n          }\n\n          if (message.additionalBindings && message.additionalBindings.length) {\n            object.additionalBindings = [];\n\n            for (var j = 0; j < message.additionalBindings.length; ++j) object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);\n          }\n\n          if (message.responseBody != null && message.hasOwnProperty(\"responseBody\")) object.responseBody = message.responseBody;\n          return object;\n        };\n        /**\n         * Converts this HttpRule to JSON.\n         * @function toJSON\n         * @memberof google.api.HttpRule\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        HttpRule.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return HttpRule;\n      }();\n\n      api.CustomHttpPattern = function () {\n        /**\n         * Properties of a CustomHttpPattern.\n         * @memberof google.api\n         * @interface ICustomHttpPattern\n         * @property {string|null} [kind] CustomHttpPattern kind\n         * @property {string|null} [path] CustomHttpPattern path\n         */\n\n        /**\n         * Constructs a new CustomHttpPattern.\n         * @memberof google.api\n         * @classdesc Represents a CustomHttpPattern.\n         * @implements ICustomHttpPattern\n         * @constructor\n         * @param {google.api.ICustomHttpPattern=} [properties] Properties to set\n         */\n        function CustomHttpPattern(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * CustomHttpPattern kind.\n         * @member {string} kind\n         * @memberof google.api.CustomHttpPattern\n         * @instance\n         */\n\n\n        CustomHttpPattern.prototype.kind = \"\";\n        /**\n         * CustomHttpPattern path.\n         * @member {string} path\n         * @memberof google.api.CustomHttpPattern\n         * @instance\n         */\n\n        CustomHttpPattern.prototype.path = \"\";\n        /**\n         * Creates a new CustomHttpPattern instance using the specified properties.\n         * @function create\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {google.api.ICustomHttpPattern=} [properties] Properties to set\n         * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance\n         */\n\n        CustomHttpPattern.create = function create(properties) {\n          return new CustomHttpPattern(properties);\n        };\n        /**\n         * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.\n         * @function encode\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        CustomHttpPattern.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.kind != null && message.hasOwnProperty(\"kind\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.kind);\n          if (message.path != null && message.hasOwnProperty(\"path\")) writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).string(message.path);\n          return writer;\n        };\n        /**\n         * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a CustomHttpPattern message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        CustomHttpPattern.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.api.CustomHttpPattern();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.kind = reader.string();\n                break;\n\n              case 2:\n                message.path = reader.string();\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a CustomHttpPattern message.\n         * @function verify\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        CustomHttpPattern.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.kind != null && message.hasOwnProperty(\"kind\")) if (!$util.isString(message.kind)) return \"kind: string expected\";\n          if (message.path != null && message.hasOwnProperty(\"path\")) if (!$util.isString(message.path)) return \"path: string expected\";\n          return null;\n        };\n        /**\n         * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n         */\n\n\n        CustomHttpPattern.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.api.CustomHttpPattern) return object;\n          var message = new $root.google.api.CustomHttpPattern();\n          if (object.kind != null) message.kind = String(object.kind);\n          if (object.path != null) message.path = String(object.path);\n          return message;\n        };\n        /**\n         * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {google.api.CustomHttpPattern} message CustomHttpPattern\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        CustomHttpPattern.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.kind = \"\";\n            object.path = \"\";\n          }\n\n          if (message.kind != null && message.hasOwnProperty(\"kind\")) object.kind = message.kind;\n          if (message.path != null && message.hasOwnProperty(\"path\")) object.path = message.path;\n          return object;\n        };\n        /**\n         * Converts this CustomHttpPattern to JSON.\n         * @function toJSON\n         * @memberof google.api.CustomHttpPattern\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        CustomHttpPattern.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CustomHttpPattern;\n      }();\n      /**\n       * FieldBehavior enum.\n       * @name google.api.FieldBehavior\n       * @enum {string}\n       * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value\n       * @property {number} OPTIONAL=1 OPTIONAL value\n       * @property {number} REQUIRED=2 REQUIRED value\n       * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value\n       * @property {number} INPUT_ONLY=4 INPUT_ONLY value\n       * @property {number} IMMUTABLE=5 IMMUTABLE value\n       */\n\n\n      api.FieldBehavior = function () {\n        var valuesById = {},\n            values = Object.create(valuesById);\n        values[valuesById[0] = \"FIELD_BEHAVIOR_UNSPECIFIED\"] = 0;\n        values[valuesById[1] = \"OPTIONAL\"] = 1;\n        values[valuesById[2] = \"REQUIRED\"] = 2;\n        values[valuesById[3] = \"OUTPUT_ONLY\"] = 3;\n        values[valuesById[4] = \"INPUT_ONLY\"] = 4;\n        values[valuesById[5] = \"IMMUTABLE\"] = 5;\n        return values;\n      }();\n\n      return api;\n    }();\n\n    google.protobuf = function () {\n      /**\n       * Namespace protobuf.\n       * @memberof google\n       * @namespace\n       */\n      var protobuf = {};\n\n      protobuf.FileDescriptorSet = function () {\n        /**\n         * Properties of a FileDescriptorSet.\n         * @memberof google.protobuf\n         * @interface IFileDescriptorSet\n         * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file\n         */\n\n        /**\n         * Constructs a new FileDescriptorSet.\n         * @memberof google.protobuf\n         * @classdesc Represents a FileDescriptorSet.\n         * @implements IFileDescriptorSet\n         * @constructor\n         * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set\n         */\n        function FileDescriptorSet(properties) {\n          this.file = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * FileDescriptorSet file.\n         * @member {Array.<google.protobuf.IFileDescriptorProto>} file\n         * @memberof google.protobuf.FileDescriptorSet\n         * @instance\n         */\n\n\n        FileDescriptorSet.prototype.file = $util.emptyArray;\n        /**\n         * Creates a new FileDescriptorSet instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set\n         * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance\n         */\n\n        FileDescriptorSet.create = function create(properties) {\n          return new FileDescriptorSet(properties);\n        };\n        /**\n         * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FileDescriptorSet.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.file != null && message.file.length) for (var i = 0; i < message.file.length; ++i) $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a FileDescriptorSet message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FileDescriptorSet.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.FileDescriptorSet();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                if (!(message.file && message.file.length)) message.file = [];\n                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a FileDescriptorSet message.\n         * @function verify\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        FileDescriptorSet.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n          if (message.file != null && message.hasOwnProperty(\"file\")) {\n            if (!Array.isArray(message.file)) return \"file: array expected\";\n\n            for (var i = 0; i < message.file.length; ++i) {\n              var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);\n              if (error) return \"file.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n         */\n\n\n        FileDescriptorSet.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FileDescriptorSet) return object;\n          var message = new $root.google.protobuf.FileDescriptorSet();\n\n          if (object.file) {\n            if (!Array.isArray(object.file)) throw TypeError(\".google.protobuf.FileDescriptorSet.file: array expected\");\n            message.file = [];\n\n            for (var i = 0; i < object.file.length; ++i) {\n              if (typeof object.file[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorSet.file: object expected\");\n              message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FileDescriptorSet.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.file = [];\n\n          if (message.file && message.file.length) {\n            object.file = [];\n\n            for (var j = 0; j < message.file.length; ++j) object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this FileDescriptorSet to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FileDescriptorSet\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FileDescriptorSet.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return FileDescriptorSet;\n      }();\n\n      protobuf.FileDescriptorProto = function () {\n        /**\n         * Properties of a FileDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IFileDescriptorProto\n         * @property {string|null} [name] FileDescriptorProto name\n         * @property {string|null} [\"package\"] FileDescriptorProto package\n         * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency\n         * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency\n         * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency\n         * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType\n         * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType\n         * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service\n         * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension\n         * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options\n         * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo\n         * @property {string|null} [syntax] FileDescriptorProto syntax\n         */\n\n        /**\n         * Constructs a new FileDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a FileDescriptorProto.\n         * @implements IFileDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set\n         */\n        function FileDescriptorProto(properties) {\n          this.dependency = [];\n          this.publicDependency = [];\n          this.weakDependency = [];\n          this.messageType = [];\n          this.enumType = [];\n          this.service = [];\n          this.extension = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * FileDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n\n        FileDescriptorProto.prototype.name = \"\";\n        /**\n         * FileDescriptorProto package.\n         * @member {string} package\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype[\"package\"] = \"\";\n        /**\n         * FileDescriptorProto dependency.\n         * @member {Array.<string>} dependency\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.dependency = $util.emptyArray;\n        /**\n         * FileDescriptorProto publicDependency.\n         * @member {Array.<number>} publicDependency\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.publicDependency = $util.emptyArray;\n        /**\n         * FileDescriptorProto weakDependency.\n         * @member {Array.<number>} weakDependency\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.weakDependency = $util.emptyArray;\n        /**\n         * FileDescriptorProto messageType.\n         * @member {Array.<google.protobuf.IDescriptorProto>} messageType\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.messageType = $util.emptyArray;\n        /**\n         * FileDescriptorProto enumType.\n         * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.enumType = $util.emptyArray;\n        /**\n         * FileDescriptorProto service.\n         * @member {Array.<google.protobuf.IServiceDescriptorProto>} service\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.service = $util.emptyArray;\n        /**\n         * FileDescriptorProto extension.\n         * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.extension = $util.emptyArray;\n        /**\n         * FileDescriptorProto options.\n         * @member {google.protobuf.IFileOptions|null|undefined} options\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.options = null;\n        /**\n         * FileDescriptorProto sourceCodeInfo.\n         * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.sourceCodeInfo = null;\n        /**\n         * FileDescriptorProto syntax.\n         * @member {string} syntax\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.syntax = \"\";\n        /**\n         * Creates a new FileDescriptorProto instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set\n         * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance\n         */\n\n        FileDescriptorProto.create = function create(properties) {\n          return new FileDescriptorProto(properties);\n        };\n        /**\n         * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FileDescriptorProto.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.name);\n          if (message[\"package\"] != null && message.hasOwnProperty(\"package\")) writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).string(message[\"package\"]);\n          if (message.dependency != null && message.dependency.length) for (var i = 0; i < message.dependency.length; ++i) writer.uint32(\n          /* id 3, wireType 2 =*/\n          26).string(message.dependency[i]);\n          if (message.messageType != null && message.messageType.length) for (var i = 0; i < message.messageType.length; ++i) $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(\n          /* id 4, wireType 2 =*/\n          34).fork()).ldelim();\n          if (message.enumType != null && message.enumType.length) for (var i = 0; i < message.enumType.length; ++i) $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(\n          /* id 5, wireType 2 =*/\n          42).fork()).ldelim();\n          if (message.service != null && message.service.length) for (var i = 0; i < message.service.length; ++i) $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(\n          /* id 6, wireType 2 =*/\n          50).fork()).ldelim();\n          if (message.extension != null && message.extension.length) for (var i = 0; i < message.extension.length; ++i) $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(\n          /* id 7, wireType 2 =*/\n          58).fork()).ldelim();\n          if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(\n          /* id 8, wireType 2 =*/\n          66).fork()).ldelim();\n          if (message.sourceCodeInfo != null && message.hasOwnProperty(\"sourceCodeInfo\")) $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(\n          /* id 9, wireType 2 =*/\n          74).fork()).ldelim();\n          if (message.publicDependency != null && message.publicDependency.length) for (var i = 0; i < message.publicDependency.length; ++i) writer.uint32(\n          /* id 10, wireType 0 =*/\n          80).int32(message.publicDependency[i]);\n          if (message.weakDependency != null && message.weakDependency.length) for (var i = 0; i < message.weakDependency.length; ++i) writer.uint32(\n          /* id 11, wireType 0 =*/\n          88).int32(message.weakDependency[i]);\n          if (message.syntax != null && message.hasOwnProperty(\"syntax\")) writer.uint32(\n          /* id 12, wireType 2 =*/\n          98).string(message.syntax);\n          return writer;\n        };\n        /**\n         * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a FileDescriptorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FileDescriptorProto.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.FileDescriptorProto();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.name = reader.string();\n                break;\n\n              case 2:\n                message[\"package\"] = reader.string();\n                break;\n\n              case 3:\n                if (!(message.dependency && message.dependency.length)) message.dependency = [];\n                message.dependency.push(reader.string());\n                break;\n\n              case 10:\n                if (!(message.publicDependency && message.publicDependency.length)) message.publicDependency = [];\n\n                if ((tag & 7) === 2) {\n                  var end2 = reader.uint32() + reader.pos;\n\n                  while (reader.pos < end2) message.publicDependency.push(reader.int32());\n                } else message.publicDependency.push(reader.int32());\n\n                break;\n\n              case 11:\n                if (!(message.weakDependency && message.weakDependency.length)) message.weakDependency = [];\n\n                if ((tag & 7) === 2) {\n                  var end2 = reader.uint32() + reader.pos;\n\n                  while (reader.pos < end2) message.weakDependency.push(reader.int32());\n                } else message.weakDependency.push(reader.int32());\n\n                break;\n\n              case 4:\n                if (!(message.messageType && message.messageType.length)) message.messageType = [];\n                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 5:\n                if (!(message.enumType && message.enumType.length)) message.enumType = [];\n                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 6:\n                if (!(message.service && message.service.length)) message.service = [];\n                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 7:\n                if (!(message.extension && message.extension.length)) message.extension = [];\n                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 8:\n                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());\n                break;\n\n              case 9:\n                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());\n                break;\n\n              case 12:\n                message.syntax = reader.string();\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a FileDescriptorProto message.\n         * @function verify\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        FileDescriptorProto.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n          if (message[\"package\"] != null && message.hasOwnProperty(\"package\")) if (!$util.isString(message[\"package\"])) return \"package: string expected\";\n\n          if (message.dependency != null && message.hasOwnProperty(\"dependency\")) {\n            if (!Array.isArray(message.dependency)) return \"dependency: array expected\";\n\n            for (var i = 0; i < message.dependency.length; ++i) if (!$util.isString(message.dependency[i])) return \"dependency: string[] expected\";\n          }\n\n          if (message.publicDependency != null && message.hasOwnProperty(\"publicDependency\")) {\n            if (!Array.isArray(message.publicDependency)) return \"publicDependency: array expected\";\n\n            for (var i = 0; i < message.publicDependency.length; ++i) if (!$util.isInteger(message.publicDependency[i])) return \"publicDependency: integer[] expected\";\n          }\n\n          if (message.weakDependency != null && message.hasOwnProperty(\"weakDependency\")) {\n            if (!Array.isArray(message.weakDependency)) return \"weakDependency: array expected\";\n\n            for (var i = 0; i < message.weakDependency.length; ++i) if (!$util.isInteger(message.weakDependency[i])) return \"weakDependency: integer[] expected\";\n          }\n\n          if (message.messageType != null && message.hasOwnProperty(\"messageType\")) {\n            if (!Array.isArray(message.messageType)) return \"messageType: array expected\";\n\n            for (var i = 0; i < message.messageType.length; ++i) {\n              var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);\n              if (error) return \"messageType.\" + error;\n            }\n          }\n\n          if (message.enumType != null && message.hasOwnProperty(\"enumType\")) {\n            if (!Array.isArray(message.enumType)) return \"enumType: array expected\";\n\n            for (var i = 0; i < message.enumType.length; ++i) {\n              var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);\n              if (error) return \"enumType.\" + error;\n            }\n          }\n\n          if (message.service != null && message.hasOwnProperty(\"service\")) {\n            if (!Array.isArray(message.service)) return \"service: array expected\";\n\n            for (var i = 0; i < message.service.length; ++i) {\n              var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);\n              if (error) return \"service.\" + error;\n            }\n          }\n\n          if (message.extension != null && message.hasOwnProperty(\"extension\")) {\n            if (!Array.isArray(message.extension)) return \"extension: array expected\";\n\n            for (var i = 0; i < message.extension.length; ++i) {\n              var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);\n              if (error) return \"extension.\" + error;\n            }\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) {\n            var error = $root.google.protobuf.FileOptions.verify(message.options);\n            if (error) return \"options.\" + error;\n          }\n\n          if (message.sourceCodeInfo != null && message.hasOwnProperty(\"sourceCodeInfo\")) {\n            var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);\n            if (error) return \"sourceCodeInfo.\" + error;\n          }\n\n          if (message.syntax != null && message.hasOwnProperty(\"syntax\")) if (!$util.isString(message.syntax)) return \"syntax: string expected\";\n          return null;\n        };\n        /**\n         * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n         */\n\n\n        FileDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FileDescriptorProto) return object;\n          var message = new $root.google.protobuf.FileDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n          if (object[\"package\"] != null) message[\"package\"] = String(object[\"package\"]);\n\n          if (object.dependency) {\n            if (!Array.isArray(object.dependency)) throw TypeError(\".google.protobuf.FileDescriptorProto.dependency: array expected\");\n            message.dependency = [];\n\n            for (var i = 0; i < object.dependency.length; ++i) message.dependency[i] = String(object.dependency[i]);\n          }\n\n          if (object.publicDependency) {\n            if (!Array.isArray(object.publicDependency)) throw TypeError(\".google.protobuf.FileDescriptorProto.publicDependency: array expected\");\n            message.publicDependency = [];\n\n            for (var i = 0; i < object.publicDependency.length; ++i) message.publicDependency[i] = object.publicDependency[i] | 0;\n          }\n\n          if (object.weakDependency) {\n            if (!Array.isArray(object.weakDependency)) throw TypeError(\".google.protobuf.FileDescriptorProto.weakDependency: array expected\");\n            message.weakDependency = [];\n\n            for (var i = 0; i < object.weakDependency.length; ++i) message.weakDependency[i] = object.weakDependency[i] | 0;\n          }\n\n          if (object.messageType) {\n            if (!Array.isArray(object.messageType)) throw TypeError(\".google.protobuf.FileDescriptorProto.messageType: array expected\");\n            message.messageType = [];\n\n            for (var i = 0; i < object.messageType.length; ++i) {\n              if (typeof object.messageType[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.messageType: object expected\");\n              message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);\n            }\n          }\n\n          if (object.enumType) {\n            if (!Array.isArray(object.enumType)) throw TypeError(\".google.protobuf.FileDescriptorProto.enumType: array expected\");\n            message.enumType = [];\n\n            for (var i = 0; i < object.enumType.length; ++i) {\n              if (typeof object.enumType[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.enumType: object expected\");\n              message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);\n            }\n          }\n\n          if (object.service) {\n            if (!Array.isArray(object.service)) throw TypeError(\".google.protobuf.FileDescriptorProto.service: array expected\");\n            message.service = [];\n\n            for (var i = 0; i < object.service.length; ++i) {\n              if (typeof object.service[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.service: object expected\");\n              message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);\n            }\n          }\n\n          if (object.extension) {\n            if (!Array.isArray(object.extension)) throw TypeError(\".google.protobuf.FileDescriptorProto.extension: array expected\");\n            message.extension = [];\n\n            for (var i = 0; i < object.extension.length; ++i) {\n              if (typeof object.extension[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.extension: object expected\");\n              message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);\n            }\n          }\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.FileOptions.fromObject(object.options);\n          }\n\n          if (object.sourceCodeInfo != null) {\n            if (typeof object.sourceCodeInfo !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected\");\n            message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);\n          }\n\n          if (object.syntax != null) message.syntax = String(object.syntax);\n          return message;\n        };\n        /**\n         * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FileDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.dependency = [];\n            object.messageType = [];\n            object.enumType = [];\n            object.service = [];\n            object.extension = [];\n            object.publicDependency = [];\n            object.weakDependency = [];\n          }\n\n          if (options.defaults) {\n            object.name = \"\";\n            object[\"package\"] = \"\";\n            object.options = null;\n            object.sourceCodeInfo = null;\n            object.syntax = \"\";\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message[\"package\"] != null && message.hasOwnProperty(\"package\")) object[\"package\"] = message[\"package\"];\n\n          if (message.dependency && message.dependency.length) {\n            object.dependency = [];\n\n            for (var j = 0; j < message.dependency.length; ++j) object.dependency[j] = message.dependency[j];\n          }\n\n          if (message.messageType && message.messageType.length) {\n            object.messageType = [];\n\n            for (var j = 0; j < message.messageType.length; ++j) object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);\n          }\n\n          if (message.enumType && message.enumType.length) {\n            object.enumType = [];\n\n            for (var j = 0; j < message.enumType.length; ++j) object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);\n          }\n\n          if (message.service && message.service.length) {\n            object.service = [];\n\n            for (var j = 0; j < message.service.length; ++j) object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);\n          }\n\n          if (message.extension && message.extension.length) {\n            object.extension = [];\n\n            for (var j = 0; j < message.extension.length; ++j) object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);\n          if (message.sourceCodeInfo != null && message.hasOwnProperty(\"sourceCodeInfo\")) object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);\n\n          if (message.publicDependency && message.publicDependency.length) {\n            object.publicDependency = [];\n\n            for (var j = 0; j < message.publicDependency.length; ++j) object.publicDependency[j] = message.publicDependency[j];\n          }\n\n          if (message.weakDependency && message.weakDependency.length) {\n            object.weakDependency = [];\n\n            for (var j = 0; j < message.weakDependency.length; ++j) object.weakDependency[j] = message.weakDependency[j];\n          }\n\n          if (message.syntax != null && message.hasOwnProperty(\"syntax\")) object.syntax = message.syntax;\n          return object;\n        };\n        /**\n         * Converts this FileDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FileDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return FileDescriptorProto;\n      }();\n\n      protobuf.DescriptorProto = function () {\n        /**\n         * Properties of a DescriptorProto.\n         * @memberof google.protobuf\n         * @interface IDescriptorProto\n         * @property {string|null} [name] DescriptorProto name\n         * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field\n         * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension\n         * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType\n         * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType\n         * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange\n         * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl\n         * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options\n         * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange\n         * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName\n         */\n\n        /**\n         * Constructs a new DescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a DescriptorProto.\n         * @implements IDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set\n         */\n        function DescriptorProto(properties) {\n          this.field = [];\n          this.extension = [];\n          this.nestedType = [];\n          this.enumType = [];\n          this.extensionRange = [];\n          this.oneofDecl = [];\n          this.reservedRange = [];\n          this.reservedName = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * DescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n\n        DescriptorProto.prototype.name = \"\";\n        /**\n         * DescriptorProto field.\n         * @member {Array.<google.protobuf.IFieldDescriptorProto>} field\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.field = $util.emptyArray;\n        /**\n         * DescriptorProto extension.\n         * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.extension = $util.emptyArray;\n        /**\n         * DescriptorProto nestedType.\n         * @member {Array.<google.protobuf.IDescriptorProto>} nestedType\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.nestedType = $util.emptyArray;\n        /**\n         * DescriptorProto enumType.\n         * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.enumType = $util.emptyArray;\n        /**\n         * DescriptorProto extensionRange.\n         * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.extensionRange = $util.emptyArray;\n        /**\n         * DescriptorProto oneofDecl.\n         * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.oneofDecl = $util.emptyArray;\n        /**\n         * DescriptorProto options.\n         * @member {google.protobuf.IMessageOptions|null|undefined} options\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.options = null;\n        /**\n         * DescriptorProto reservedRange.\n         * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.reservedRange = $util.emptyArray;\n        /**\n         * DescriptorProto reservedName.\n         * @member {Array.<string>} reservedName\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.reservedName = $util.emptyArray;\n        /**\n         * Creates a new DescriptorProto instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set\n         * @returns {google.protobuf.DescriptorProto} DescriptorProto instance\n         */\n\n        DescriptorProto.create = function create(properties) {\n          return new DescriptorProto(properties);\n        };\n        /**\n         * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        DescriptorProto.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.name);\n          if (message.field != null && message.field.length) for (var i = 0; i < message.field.length; ++i) $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).fork()).ldelim();\n          if (message.nestedType != null && message.nestedType.length) for (var i = 0; i < message.nestedType.length; ++i) $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(\n          /* id 3, wireType 2 =*/\n          26).fork()).ldelim();\n          if (message.enumType != null && message.enumType.length) for (var i = 0; i < message.enumType.length; ++i) $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(\n          /* id 4, wireType 2 =*/\n          34).fork()).ldelim();\n          if (message.extensionRange != null && message.extensionRange.length) for (var i = 0; i < message.extensionRange.length; ++i) $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(\n          /* id 5, wireType 2 =*/\n          42).fork()).ldelim();\n          if (message.extension != null && message.extension.length) for (var i = 0; i < message.extension.length; ++i) $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(\n          /* id 6, wireType 2 =*/\n          50).fork()).ldelim();\n          if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(\n          /* id 7, wireType 2 =*/\n          58).fork()).ldelim();\n          if (message.oneofDecl != null && message.oneofDecl.length) for (var i = 0; i < message.oneofDecl.length; ++i) $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(\n          /* id 8, wireType 2 =*/\n          66).fork()).ldelim();\n          if (message.reservedRange != null && message.reservedRange.length) for (var i = 0; i < message.reservedRange.length; ++i) $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(\n          /* id 9, wireType 2 =*/\n          74).fork()).ldelim();\n          if (message.reservedName != null && message.reservedName.length) for (var i = 0; i < message.reservedName.length; ++i) writer.uint32(\n          /* id 10, wireType 2 =*/\n          82).string(message.reservedName[i]);\n          return writer;\n        };\n        /**\n         * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a DescriptorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.DescriptorProto} DescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        DescriptorProto.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.DescriptorProto();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.name = reader.string();\n                break;\n\n              case 2:\n                if (!(message.field && message.field.length)) message.field = [];\n                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 6:\n                if (!(message.extension && message.extension.length)) message.extension = [];\n                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 3:\n                if (!(message.nestedType && message.nestedType.length)) message.nestedType = [];\n                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 4:\n                if (!(message.enumType && message.enumType.length)) message.enumType = [];\n                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 5:\n                if (!(message.extensionRange && message.extensionRange.length)) message.extensionRange = [];\n                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));\n                break;\n\n              case 8:\n                if (!(message.oneofDecl && message.oneofDecl.length)) message.oneofDecl = [];\n                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 7:\n                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());\n                break;\n\n              case 9:\n                if (!(message.reservedRange && message.reservedRange.length)) message.reservedRange = [];\n                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));\n                break;\n\n              case 10:\n                if (!(message.reservedName && message.reservedName.length)) message.reservedName = [];\n                message.reservedName.push(reader.string());\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.DescriptorProto} DescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        DescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a DescriptorProto message.\n         * @function verify\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        DescriptorProto.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n\n          if (message.field != null && message.hasOwnProperty(\"field\")) {\n            if (!Array.isArray(message.field)) return \"field: array expected\";\n\n            for (var i = 0; i < message.field.length; ++i) {\n              var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);\n              if (error) return \"field.\" + error;\n            }\n          }\n\n          if (message.extension != null && message.hasOwnProperty(\"extension\")) {\n            if (!Array.isArray(message.extension)) return \"extension: array expected\";\n\n            for (var i = 0; i < message.extension.length; ++i) {\n              var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);\n              if (error) return \"extension.\" + error;\n            }\n          }\n\n          if (message.nestedType != null && message.hasOwnProperty(\"nestedType\")) {\n            if (!Array.isArray(message.nestedType)) return \"nestedType: array expected\";\n\n            for (var i = 0; i < message.nestedType.length; ++i) {\n              var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);\n              if (error) return \"nestedType.\" + error;\n            }\n          }\n\n          if (message.enumType != null && message.hasOwnProperty(\"enumType\")) {\n            if (!Array.isArray(message.enumType)) return \"enumType: array expected\";\n\n            for (var i = 0; i < message.enumType.length; ++i) {\n              var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);\n              if (error) return \"enumType.\" + error;\n            }\n          }\n\n          if (message.extensionRange != null && message.hasOwnProperty(\"extensionRange\")) {\n            if (!Array.isArray(message.extensionRange)) return \"extensionRange: array expected\";\n\n            for (var i = 0; i < message.extensionRange.length; ++i) {\n              var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);\n              if (error) return \"extensionRange.\" + error;\n            }\n          }\n\n          if (message.oneofDecl != null && message.hasOwnProperty(\"oneofDecl\")) {\n            if (!Array.isArray(message.oneofDecl)) return \"oneofDecl: array expected\";\n\n            for (var i = 0; i < message.oneofDecl.length; ++i) {\n              var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);\n              if (error) return \"oneofDecl.\" + error;\n            }\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) {\n            var error = $root.google.protobuf.MessageOptions.verify(message.options);\n            if (error) return \"options.\" + error;\n          }\n\n          if (message.reservedRange != null && message.hasOwnProperty(\"reservedRange\")) {\n            if (!Array.isArray(message.reservedRange)) return \"reservedRange: array expected\";\n\n            for (var i = 0; i < message.reservedRange.length; ++i) {\n              var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);\n              if (error) return \"reservedRange.\" + error;\n            }\n          }\n\n          if (message.reservedName != null && message.hasOwnProperty(\"reservedName\")) {\n            if (!Array.isArray(message.reservedName)) return \"reservedName: array expected\";\n\n            for (var i = 0; i < message.reservedName.length; ++i) if (!$util.isString(message.reservedName[i])) return \"reservedName: string[] expected\";\n          }\n\n          return null;\n        };\n        /**\n         * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.DescriptorProto} DescriptorProto\n         */\n\n\n        DescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.DescriptorProto) return object;\n          var message = new $root.google.protobuf.DescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.field) {\n            if (!Array.isArray(object.field)) throw TypeError(\".google.protobuf.DescriptorProto.field: array expected\");\n            message.field = [];\n\n            for (var i = 0; i < object.field.length; ++i) {\n              if (typeof object.field[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.field: object expected\");\n              message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);\n            }\n          }\n\n          if (object.extension) {\n            if (!Array.isArray(object.extension)) throw TypeError(\".google.protobuf.DescriptorProto.extension: array expected\");\n            message.extension = [];\n\n            for (var i = 0; i < object.extension.length; ++i) {\n              if (typeof object.extension[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.extension: object expected\");\n              message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);\n            }\n          }\n\n          if (object.nestedType) {\n            if (!Array.isArray(object.nestedType)) throw TypeError(\".google.protobuf.DescriptorProto.nestedType: array expected\");\n            message.nestedType = [];\n\n            for (var i = 0; i < object.nestedType.length; ++i) {\n              if (typeof object.nestedType[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.nestedType: object expected\");\n              message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);\n            }\n          }\n\n          if (object.enumType) {\n            if (!Array.isArray(object.enumType)) throw TypeError(\".google.protobuf.DescriptorProto.enumType: array expected\");\n            message.enumType = [];\n\n            for (var i = 0; i < object.enumType.length; ++i) {\n              if (typeof object.enumType[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.enumType: object expected\");\n              message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);\n            }\n          }\n\n          if (object.extensionRange) {\n            if (!Array.isArray(object.extensionRange)) throw TypeError(\".google.protobuf.DescriptorProto.extensionRange: array expected\");\n            message.extensionRange = [];\n\n            for (var i = 0; i < object.extensionRange.length; ++i) {\n              if (typeof object.extensionRange[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.extensionRange: object expected\");\n              message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);\n            }\n          }\n\n          if (object.oneofDecl) {\n            if (!Array.isArray(object.oneofDecl)) throw TypeError(\".google.protobuf.DescriptorProto.oneofDecl: array expected\");\n            message.oneofDecl = [];\n\n            for (var i = 0; i < object.oneofDecl.length; ++i) {\n              if (typeof object.oneofDecl[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.oneofDecl: object expected\");\n              message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);\n            }\n          }\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);\n          }\n\n          if (object.reservedRange) {\n            if (!Array.isArray(object.reservedRange)) throw TypeError(\".google.protobuf.DescriptorProto.reservedRange: array expected\");\n            message.reservedRange = [];\n\n            for (var i = 0; i < object.reservedRange.length; ++i) {\n              if (typeof object.reservedRange[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.reservedRange: object expected\");\n              message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);\n            }\n          }\n\n          if (object.reservedName) {\n            if (!Array.isArray(object.reservedName)) throw TypeError(\".google.protobuf.DescriptorProto.reservedName: array expected\");\n            message.reservedName = [];\n\n            for (var i = 0; i < object.reservedName.length; ++i) message.reservedName[i] = String(object.reservedName[i]);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {google.protobuf.DescriptorProto} message DescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        DescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.field = [];\n            object.nestedType = [];\n            object.enumType = [];\n            object.extensionRange = [];\n            object.extension = [];\n            object.oneofDecl = [];\n            object.reservedRange = [];\n            object.reservedName = [];\n          }\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n\n          if (message.field && message.field.length) {\n            object.field = [];\n\n            for (var j = 0; j < message.field.length; ++j) object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);\n          }\n\n          if (message.nestedType && message.nestedType.length) {\n            object.nestedType = [];\n\n            for (var j = 0; j < message.nestedType.length; ++j) object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);\n          }\n\n          if (message.enumType && message.enumType.length) {\n            object.enumType = [];\n\n            for (var j = 0; j < message.enumType.length; ++j) object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);\n          }\n\n          if (message.extensionRange && message.extensionRange.length) {\n            object.extensionRange = [];\n\n            for (var j = 0; j < message.extensionRange.length; ++j) object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);\n          }\n\n          if (message.extension && message.extension.length) {\n            object.extension = [];\n\n            for (var j = 0; j < message.extension.length; ++j) object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);\n\n          if (message.oneofDecl && message.oneofDecl.length) {\n            object.oneofDecl = [];\n\n            for (var j = 0; j < message.oneofDecl.length; ++j) object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);\n          }\n\n          if (message.reservedRange && message.reservedRange.length) {\n            object.reservedRange = [];\n\n            for (var j = 0; j < message.reservedRange.length; ++j) object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);\n          }\n\n          if (message.reservedName && message.reservedName.length) {\n            object.reservedName = [];\n\n            for (var j = 0; j < message.reservedName.length; ++j) object.reservedName[j] = message.reservedName[j];\n          }\n\n          return object;\n        };\n        /**\n         * Converts this DescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        DescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        DescriptorProto.ExtensionRange = function () {\n          /**\n           * Properties of an ExtensionRange.\n           * @memberof google.protobuf.DescriptorProto\n           * @interface IExtensionRange\n           * @property {number|null} [start] ExtensionRange start\n           * @property {number|null} [end] ExtensionRange end\n           * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options\n           */\n\n          /**\n           * Constructs a new ExtensionRange.\n           * @memberof google.protobuf.DescriptorProto\n           * @classdesc Represents an ExtensionRange.\n           * @implements IExtensionRange\n           * @constructor\n           * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set\n           */\n          function ExtensionRange(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n          /**\n           * ExtensionRange start.\n           * @member {number} start\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @instance\n           */\n\n\n          ExtensionRange.prototype.start = 0;\n          /**\n           * ExtensionRange end.\n           * @member {number} end\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @instance\n           */\n\n          ExtensionRange.prototype.end = 0;\n          /**\n           * ExtensionRange options.\n           * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @instance\n           */\n\n          ExtensionRange.prototype.options = null;\n          /**\n           * Creates a new ExtensionRange instance using the specified properties.\n           * @function create\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set\n           * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance\n           */\n\n          ExtensionRange.create = function create(properties) {\n            return new ExtensionRange(properties);\n          };\n          /**\n           * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.\n           * @function encode\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          ExtensionRange.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.start != null && message.hasOwnProperty(\"start\")) writer.uint32(\n            /* id 1, wireType 0 =*/\n            8).int32(message.start);\n            if (message.end != null && message.hasOwnProperty(\"end\")) writer.uint32(\n            /* id 2, wireType 0 =*/\n            16).int32(message.end);\n            if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(\n            /* id 3, wireType 2 =*/\n            26).fork()).ldelim();\n            return writer;\n          };\n          /**\n           * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.\n           * @function encodeDelimited\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n          };\n          /**\n           * Decodes an ExtensionRange message from the specified reader or buffer.\n           * @function decode\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @param {number} [length] Message length if known beforehand\n           * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          ExtensionRange.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.google.protobuf.DescriptorProto.ExtensionRange();\n\n            while (reader.pos < end) {\n              var tag = reader.uint32();\n\n              switch (tag >>> 3) {\n                case 1:\n                  message.start = reader.int32();\n                  break;\n\n                case 2:\n                  message.end = reader.int32();\n                  break;\n\n                case 3:\n                  message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());\n                  break;\n\n                default:\n                  reader.skipType(tag & 7);\n                  break;\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.\n           * @function decodeDelimited\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          ExtensionRange.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n          };\n          /**\n           * Verifies an ExtensionRange message.\n           * @function verify\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {Object.<string,*>} message Plain object to verify\n           * @returns {string|null} `null` if valid, otherwise the reason why it is not\n           */\n\n\n          ExtensionRange.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null) return \"object expected\";\n            if (message.start != null && message.hasOwnProperty(\"start\")) if (!$util.isInteger(message.start)) return \"start: integer expected\";\n            if (message.end != null && message.hasOwnProperty(\"end\")) if (!$util.isInteger(message.end)) return \"end: integer expected\";\n\n            if (message.options != null && message.hasOwnProperty(\"options\")) {\n              var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);\n              if (error) return \"options.\" + error;\n            }\n\n            return null;\n          };\n          /**\n           * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n           */\n\n\n          ExtensionRange.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange) return object;\n            var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();\n            if (object.start != null) message.start = object.start | 0;\n            if (object.end != null) message.end = object.end | 0;\n\n            if (object.options != null) {\n              if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.ExtensionRange.options: object expected\");\n              message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ExtensionRange.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.start = 0;\n              object.end = 0;\n              object.options = null;\n            }\n\n            if (message.start != null && message.hasOwnProperty(\"start\")) object.start = message.start;\n            if (message.end != null && message.hasOwnProperty(\"end\")) object.end = message.end;\n            if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);\n            return object;\n          };\n          /**\n           * Converts this ExtensionRange to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ExtensionRange.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ExtensionRange;\n        }();\n\n        DescriptorProto.ReservedRange = function () {\n          /**\n           * Properties of a ReservedRange.\n           * @memberof google.protobuf.DescriptorProto\n           * @interface IReservedRange\n           * @property {number|null} [start] ReservedRange start\n           * @property {number|null} [end] ReservedRange end\n           */\n\n          /**\n           * Constructs a new ReservedRange.\n           * @memberof google.protobuf.DescriptorProto\n           * @classdesc Represents a ReservedRange.\n           * @implements IReservedRange\n           * @constructor\n           * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set\n           */\n          function ReservedRange(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n          /**\n           * ReservedRange start.\n           * @member {number} start\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @instance\n           */\n\n\n          ReservedRange.prototype.start = 0;\n          /**\n           * ReservedRange end.\n           * @member {number} end\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @instance\n           */\n\n          ReservedRange.prototype.end = 0;\n          /**\n           * Creates a new ReservedRange instance using the specified properties.\n           * @function create\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set\n           * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance\n           */\n\n          ReservedRange.create = function create(properties) {\n            return new ReservedRange(properties);\n          };\n          /**\n           * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.\n           * @function encode\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          ReservedRange.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.start != null && message.hasOwnProperty(\"start\")) writer.uint32(\n            /* id 1, wireType 0 =*/\n            8).int32(message.start);\n            if (message.end != null && message.hasOwnProperty(\"end\")) writer.uint32(\n            /* id 2, wireType 0 =*/\n            16).int32(message.end);\n            return writer;\n          };\n          /**\n           * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.\n           * @function encodeDelimited\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n          };\n          /**\n           * Decodes a ReservedRange message from the specified reader or buffer.\n           * @function decode\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @param {number} [length] Message length if known beforehand\n           * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          ReservedRange.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.google.protobuf.DescriptorProto.ReservedRange();\n\n            while (reader.pos < end) {\n              var tag = reader.uint32();\n\n              switch (tag >>> 3) {\n                case 1:\n                  message.start = reader.int32();\n                  break;\n\n                case 2:\n                  message.end = reader.int32();\n                  break;\n\n                default:\n                  reader.skipType(tag & 7);\n                  break;\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Decodes a ReservedRange message from the specified reader or buffer, length delimited.\n           * @function decodeDelimited\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          ReservedRange.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n          };\n          /**\n           * Verifies a ReservedRange message.\n           * @function verify\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {Object.<string,*>} message Plain object to verify\n           * @returns {string|null} `null` if valid, otherwise the reason why it is not\n           */\n\n\n          ReservedRange.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null) return \"object expected\";\n            if (message.start != null && message.hasOwnProperty(\"start\")) if (!$util.isInteger(message.start)) return \"start: integer expected\";\n            if (message.end != null && message.hasOwnProperty(\"end\")) if (!$util.isInteger(message.end)) return \"end: integer expected\";\n            return null;\n          };\n          /**\n           * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n           */\n\n\n          ReservedRange.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange) return object;\n            var message = new $root.google.protobuf.DescriptorProto.ReservedRange();\n            if (object.start != null) message.start = object.start | 0;\n            if (object.end != null) message.end = object.end | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ReservedRange.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.start = 0;\n              object.end = 0;\n            }\n\n            if (message.start != null && message.hasOwnProperty(\"start\")) object.start = message.start;\n            if (message.end != null && message.hasOwnProperty(\"end\")) object.end = message.end;\n            return object;\n          };\n          /**\n           * Converts this ReservedRange to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ReservedRange.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ReservedRange;\n        }();\n\n        return DescriptorProto;\n      }();\n\n      protobuf.ExtensionRangeOptions = function () {\n        /**\n         * Properties of an ExtensionRangeOptions.\n         * @memberof google.protobuf\n         * @interface IExtensionRangeOptions\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new ExtensionRangeOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents an ExtensionRangeOptions.\n         * @implements IExtensionRangeOptions\n         * @constructor\n         * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set\n         */\n        function ExtensionRangeOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * ExtensionRangeOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @instance\n         */\n\n\n        ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates a new ExtensionRangeOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @static\n         * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set\n         * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance\n         */\n\n        ExtensionRangeOptions.create = function create(properties) {\n          return new ExtensionRangeOptions(properties);\n        };\n        /**\n         * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @static\n         * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        ExtensionRangeOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @static\n         * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes an ExtensionRangeOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        ExtensionRangeOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.ExtensionRangeOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies an ExtensionRangeOptions message.\n         * @function verify\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        ExtensionRangeOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions\n         */\n\n\n        ExtensionRangeOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.ExtensionRangeOptions) return object;\n          var message = new $root.google.protobuf.ExtensionRangeOptions();\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @static\n         * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ExtensionRangeOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this ExtensionRangeOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.ExtensionRangeOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ExtensionRangeOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ExtensionRangeOptions;\n      }();\n\n      protobuf.FieldDescriptorProto = function () {\n        /**\n         * Properties of a FieldDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IFieldDescriptorProto\n         * @property {string|null} [name] FieldDescriptorProto name\n         * @property {number|null} [number] FieldDescriptorProto number\n         * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label\n         * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type\n         * @property {string|null} [typeName] FieldDescriptorProto typeName\n         * @property {string|null} [extendee] FieldDescriptorProto extendee\n         * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue\n         * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex\n         * @property {string|null} [jsonName] FieldDescriptorProto jsonName\n         * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options\n         */\n\n        /**\n         * Constructs a new FieldDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a FieldDescriptorProto.\n         * @implements IFieldDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set\n         */\n        function FieldDescriptorProto(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * FieldDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n\n        FieldDescriptorProto.prototype.name = \"\";\n        /**\n         * FieldDescriptorProto number.\n         * @member {number} number\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.number = 0;\n        /**\n         * FieldDescriptorProto label.\n         * @member {google.protobuf.FieldDescriptorProto.Label} label\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.label = 1;\n        /**\n         * FieldDescriptorProto type.\n         * @member {google.protobuf.FieldDescriptorProto.Type} type\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.type = 1;\n        /**\n         * FieldDescriptorProto typeName.\n         * @member {string} typeName\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.typeName = \"\";\n        /**\n         * FieldDescriptorProto extendee.\n         * @member {string} extendee\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.extendee = \"\";\n        /**\n         * FieldDescriptorProto defaultValue.\n         * @member {string} defaultValue\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.defaultValue = \"\";\n        /**\n         * FieldDescriptorProto oneofIndex.\n         * @member {number} oneofIndex\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.oneofIndex = 0;\n        /**\n         * FieldDescriptorProto jsonName.\n         * @member {string} jsonName\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.jsonName = \"\";\n        /**\n         * FieldDescriptorProto options.\n         * @member {google.protobuf.IFieldOptions|null|undefined} options\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.options = null;\n        /**\n         * Creates a new FieldDescriptorProto instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set\n         * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance\n         */\n\n        FieldDescriptorProto.create = function create(properties) {\n          return new FieldDescriptorProto(properties);\n        };\n        /**\n         * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FieldDescriptorProto.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.name);\n          if (message.extendee != null && message.hasOwnProperty(\"extendee\")) writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).string(message.extendee);\n          if (message.number != null && message.hasOwnProperty(\"number\")) writer.uint32(\n          /* id 3, wireType 0 =*/\n          24).int32(message.number);\n          if (message.label != null && message.hasOwnProperty(\"label\")) writer.uint32(\n          /* id 4, wireType 0 =*/\n          32).int32(message.label);\n          if (message.type != null && message.hasOwnProperty(\"type\")) writer.uint32(\n          /* id 5, wireType 0 =*/\n          40).int32(message.type);\n          if (message.typeName != null && message.hasOwnProperty(\"typeName\")) writer.uint32(\n          /* id 6, wireType 2 =*/\n          50).string(message.typeName);\n          if (message.defaultValue != null && message.hasOwnProperty(\"defaultValue\")) writer.uint32(\n          /* id 7, wireType 2 =*/\n          58).string(message.defaultValue);\n          if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(\n          /* id 8, wireType 2 =*/\n          66).fork()).ldelim();\n          if (message.oneofIndex != null && message.hasOwnProperty(\"oneofIndex\")) writer.uint32(\n          /* id 9, wireType 0 =*/\n          72).int32(message.oneofIndex);\n          if (message.jsonName != null && message.hasOwnProperty(\"jsonName\")) writer.uint32(\n          /* id 10, wireType 2 =*/\n          82).string(message.jsonName);\n          return writer;\n        };\n        /**\n         * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a FieldDescriptorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FieldDescriptorProto.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.FieldDescriptorProto();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.name = reader.string();\n                break;\n\n              case 3:\n                message.number = reader.int32();\n                break;\n\n              case 4:\n                message.label = reader.int32();\n                break;\n\n              case 5:\n                message.type = reader.int32();\n                break;\n\n              case 6:\n                message.typeName = reader.string();\n                break;\n\n              case 2:\n                message.extendee = reader.string();\n                break;\n\n              case 7:\n                message.defaultValue = reader.string();\n                break;\n\n              case 9:\n                message.oneofIndex = reader.int32();\n                break;\n\n              case 10:\n                message.jsonName = reader.string();\n                break;\n\n              case 8:\n                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a FieldDescriptorProto message.\n         * @function verify\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        FieldDescriptorProto.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n          if (message.number != null && message.hasOwnProperty(\"number\")) if (!$util.isInteger(message.number)) return \"number: integer expected\";\n          if (message.label != null && message.hasOwnProperty(\"label\")) switch (message.label) {\n            default:\n              return \"label: enum value expected\";\n\n            case 1:\n            case 2:\n            case 3:\n              break;\n          }\n          if (message.type != null && message.hasOwnProperty(\"type\")) switch (message.type) {\n            default:\n              return \"type: enum value expected\";\n\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n              break;\n          }\n          if (message.typeName != null && message.hasOwnProperty(\"typeName\")) if (!$util.isString(message.typeName)) return \"typeName: string expected\";\n          if (message.extendee != null && message.hasOwnProperty(\"extendee\")) if (!$util.isString(message.extendee)) return \"extendee: string expected\";\n          if (message.defaultValue != null && message.hasOwnProperty(\"defaultValue\")) if (!$util.isString(message.defaultValue)) return \"defaultValue: string expected\";\n          if (message.oneofIndex != null && message.hasOwnProperty(\"oneofIndex\")) if (!$util.isInteger(message.oneofIndex)) return \"oneofIndex: integer expected\";\n          if (message.jsonName != null && message.hasOwnProperty(\"jsonName\")) if (!$util.isString(message.jsonName)) return \"jsonName: string expected\";\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) {\n            var error = $root.google.protobuf.FieldOptions.verify(message.options);\n            if (error) return \"options.\" + error;\n          }\n\n          return null;\n        };\n        /**\n         * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n         */\n\n\n        FieldDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FieldDescriptorProto) return object;\n          var message = new $root.google.protobuf.FieldDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n          if (object.number != null) message.number = object.number | 0;\n\n          switch (object.label) {\n            case \"LABEL_OPTIONAL\":\n            case 1:\n              message.label = 1;\n              break;\n\n            case \"LABEL_REQUIRED\":\n            case 2:\n              message.label = 2;\n              break;\n\n            case \"LABEL_REPEATED\":\n            case 3:\n              message.label = 3;\n              break;\n          }\n\n          switch (object.type) {\n            case \"TYPE_DOUBLE\":\n            case 1:\n              message.type = 1;\n              break;\n\n            case \"TYPE_FLOAT\":\n            case 2:\n              message.type = 2;\n              break;\n\n            case \"TYPE_INT64\":\n            case 3:\n              message.type = 3;\n              break;\n\n            case \"TYPE_UINT64\":\n            case 4:\n              message.type = 4;\n              break;\n\n            case \"TYPE_INT32\":\n            case 5:\n              message.type = 5;\n              break;\n\n            case \"TYPE_FIXED64\":\n            case 6:\n              message.type = 6;\n              break;\n\n            case \"TYPE_FIXED32\":\n            case 7:\n              message.type = 7;\n              break;\n\n            case \"TYPE_BOOL\":\n            case 8:\n              message.type = 8;\n              break;\n\n            case \"TYPE_STRING\":\n            case 9:\n              message.type = 9;\n              break;\n\n            case \"TYPE_GROUP\":\n            case 10:\n              message.type = 10;\n              break;\n\n            case \"TYPE_MESSAGE\":\n            case 11:\n              message.type = 11;\n              break;\n\n            case \"TYPE_BYTES\":\n            case 12:\n              message.type = 12;\n              break;\n\n            case \"TYPE_UINT32\":\n            case 13:\n              message.type = 13;\n              break;\n\n            case \"TYPE_ENUM\":\n            case 14:\n              message.type = 14;\n              break;\n\n            case \"TYPE_SFIXED32\":\n            case 15:\n              message.type = 15;\n              break;\n\n            case \"TYPE_SFIXED64\":\n            case 16:\n              message.type = 16;\n              break;\n\n            case \"TYPE_SINT32\":\n            case 17:\n              message.type = 17;\n              break;\n\n            case \"TYPE_SINT64\":\n            case 18:\n              message.type = 18;\n              break;\n          }\n\n          if (object.typeName != null) message.typeName = String(object.typeName);\n          if (object.extendee != null) message.extendee = String(object.extendee);\n          if (object.defaultValue != null) message.defaultValue = String(object.defaultValue);\n          if (object.oneofIndex != null) message.oneofIndex = object.oneofIndex | 0;\n          if (object.jsonName != null) message.jsonName = String(object.jsonName);\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.FieldDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FieldDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.extendee = \"\";\n            object.number = 0;\n            object.label = options.enums === String ? \"LABEL_OPTIONAL\" : 1;\n            object.type = options.enums === String ? \"TYPE_DOUBLE\" : 1;\n            object.typeName = \"\";\n            object.defaultValue = \"\";\n            object.options = null;\n            object.oneofIndex = 0;\n            object.jsonName = \"\";\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.extendee != null && message.hasOwnProperty(\"extendee\")) object.extendee = message.extendee;\n          if (message.number != null && message.hasOwnProperty(\"number\")) object.number = message.number;\n          if (message.label != null && message.hasOwnProperty(\"label\")) object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;\n          if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;\n          if (message.typeName != null && message.hasOwnProperty(\"typeName\")) object.typeName = message.typeName;\n          if (message.defaultValue != null && message.hasOwnProperty(\"defaultValue\")) object.defaultValue = message.defaultValue;\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);\n          if (message.oneofIndex != null && message.hasOwnProperty(\"oneofIndex\")) object.oneofIndex = message.oneofIndex;\n          if (message.jsonName != null && message.hasOwnProperty(\"jsonName\")) object.jsonName = message.jsonName;\n          return object;\n        };\n        /**\n         * Converts this FieldDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FieldDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        /**\n         * Type enum.\n         * @name google.protobuf.FieldDescriptorProto.Type\n         * @enum {string}\n         * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value\n         * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value\n         * @property {number} TYPE_INT64=3 TYPE_INT64 value\n         * @property {number} TYPE_UINT64=4 TYPE_UINT64 value\n         * @property {number} TYPE_INT32=5 TYPE_INT32 value\n         * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value\n         * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value\n         * @property {number} TYPE_BOOL=8 TYPE_BOOL value\n         * @property {number} TYPE_STRING=9 TYPE_STRING value\n         * @property {number} TYPE_GROUP=10 TYPE_GROUP value\n         * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value\n         * @property {number} TYPE_BYTES=12 TYPE_BYTES value\n         * @property {number} TYPE_UINT32=13 TYPE_UINT32 value\n         * @property {number} TYPE_ENUM=14 TYPE_ENUM value\n         * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value\n         * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value\n         * @property {number} TYPE_SINT32=17 TYPE_SINT32 value\n         * @property {number} TYPE_SINT64=18 TYPE_SINT64 value\n         */\n\n\n        FieldDescriptorProto.Type = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[1] = \"TYPE_DOUBLE\"] = 1;\n          values[valuesById[2] = \"TYPE_FLOAT\"] = 2;\n          values[valuesById[3] = \"TYPE_INT64\"] = 3;\n          values[valuesById[4] = \"TYPE_UINT64\"] = 4;\n          values[valuesById[5] = \"TYPE_INT32\"] = 5;\n          values[valuesById[6] = \"TYPE_FIXED64\"] = 6;\n          values[valuesById[7] = \"TYPE_FIXED32\"] = 7;\n          values[valuesById[8] = \"TYPE_BOOL\"] = 8;\n          values[valuesById[9] = \"TYPE_STRING\"] = 9;\n          values[valuesById[10] = \"TYPE_GROUP\"] = 10;\n          values[valuesById[11] = \"TYPE_MESSAGE\"] = 11;\n          values[valuesById[12] = \"TYPE_BYTES\"] = 12;\n          values[valuesById[13] = \"TYPE_UINT32\"] = 13;\n          values[valuesById[14] = \"TYPE_ENUM\"] = 14;\n          values[valuesById[15] = \"TYPE_SFIXED32\"] = 15;\n          values[valuesById[16] = \"TYPE_SFIXED64\"] = 16;\n          values[valuesById[17] = \"TYPE_SINT32\"] = 17;\n          values[valuesById[18] = \"TYPE_SINT64\"] = 18;\n          return values;\n        }();\n        /**\n         * Label enum.\n         * @name google.protobuf.FieldDescriptorProto.Label\n         * @enum {string}\n         * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value\n         * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value\n         * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value\n         */\n\n\n        FieldDescriptorProto.Label = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[1] = \"LABEL_OPTIONAL\"] = 1;\n          values[valuesById[2] = \"LABEL_REQUIRED\"] = 2;\n          values[valuesById[3] = \"LABEL_REPEATED\"] = 3;\n          return values;\n        }();\n\n        return FieldDescriptorProto;\n      }();\n\n      protobuf.OneofDescriptorProto = function () {\n        /**\n         * Properties of an OneofDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IOneofDescriptorProto\n         * @property {string|null} [name] OneofDescriptorProto name\n         * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options\n         */\n\n        /**\n         * Constructs a new OneofDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents an OneofDescriptorProto.\n         * @implements IOneofDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set\n         */\n        function OneofDescriptorProto(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * OneofDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @instance\n         */\n\n\n        OneofDescriptorProto.prototype.name = \"\";\n        /**\n         * OneofDescriptorProto options.\n         * @member {google.protobuf.IOneofOptions|null|undefined} options\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @instance\n         */\n\n        OneofDescriptorProto.prototype.options = null;\n        /**\n         * Creates a new OneofDescriptorProto instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set\n         * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance\n         */\n\n        OneofDescriptorProto.create = function create(properties) {\n          return new OneofDescriptorProto(properties);\n        };\n        /**\n         * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        OneofDescriptorProto.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.name);\n          if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes an OneofDescriptorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        OneofDescriptorProto.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.OneofDescriptorProto();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.name = reader.string();\n                break;\n\n              case 2:\n                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies an OneofDescriptorProto message.\n         * @function verify\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        OneofDescriptorProto.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) {\n            var error = $root.google.protobuf.OneofOptions.verify(message.options);\n            if (error) return \"options.\" + error;\n          }\n\n          return null;\n        };\n        /**\n         * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n         */\n\n\n        OneofDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.OneofDescriptorProto) return object;\n          var message = new $root.google.protobuf.OneofDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.OneofDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        OneofDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);\n          return object;\n        };\n        /**\n         * Converts this OneofDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        OneofDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OneofDescriptorProto;\n      }();\n\n      protobuf.EnumDescriptorProto = function () {\n        /**\n         * Properties of an EnumDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IEnumDescriptorProto\n         * @property {string|null} [name] EnumDescriptorProto name\n         * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value\n         * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options\n         * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange\n         * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName\n         */\n\n        /**\n         * Constructs a new EnumDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents an EnumDescriptorProto.\n         * @implements IEnumDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set\n         */\n        function EnumDescriptorProto(properties) {\n          this.value = [];\n          this.reservedRange = [];\n          this.reservedName = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * EnumDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         */\n\n\n        EnumDescriptorProto.prototype.name = \"\";\n        /**\n         * EnumDescriptorProto value.\n         * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         */\n\n        EnumDescriptorProto.prototype.value = $util.emptyArray;\n        /**\n         * EnumDescriptorProto options.\n         * @member {google.protobuf.IEnumOptions|null|undefined} options\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         */\n\n        EnumDescriptorProto.prototype.options = null;\n        /**\n         * EnumDescriptorProto reservedRange.\n         * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         */\n\n        EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;\n        /**\n         * EnumDescriptorProto reservedName.\n         * @member {Array.<string>} reservedName\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         */\n\n        EnumDescriptorProto.prototype.reservedName = $util.emptyArray;\n        /**\n         * Creates a new EnumDescriptorProto instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set\n         * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance\n         */\n\n        EnumDescriptorProto.create = function create(properties) {\n          return new EnumDescriptorProto(properties);\n        };\n        /**\n         * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        EnumDescriptorProto.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.name);\n          if (message.value != null && message.value.length) for (var i = 0; i < message.value.length; ++i) $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).fork()).ldelim();\n          if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(\n          /* id 3, wireType 2 =*/\n          26).fork()).ldelim();\n          if (message.reservedRange != null && message.reservedRange.length) for (var i = 0; i < message.reservedRange.length; ++i) $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(\n          /* id 4, wireType 2 =*/\n          34).fork()).ldelim();\n          if (message.reservedName != null && message.reservedName.length) for (var i = 0; i < message.reservedName.length; ++i) writer.uint32(\n          /* id 5, wireType 2 =*/\n          42).string(message.reservedName[i]);\n          return writer;\n        };\n        /**\n         * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes an EnumDescriptorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        EnumDescriptorProto.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.EnumDescriptorProto();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.name = reader.string();\n                break;\n\n              case 2:\n                if (!(message.value && message.value.length)) message.value = [];\n                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 3:\n                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());\n                break;\n\n              case 4:\n                if (!(message.reservedRange && message.reservedRange.length)) message.reservedRange = [];\n                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));\n                break;\n\n              case 5:\n                if (!(message.reservedName && message.reservedName.length)) message.reservedName = [];\n                message.reservedName.push(reader.string());\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies an EnumDescriptorProto message.\n         * @function verify\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        EnumDescriptorProto.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n\n          if (message.value != null && message.hasOwnProperty(\"value\")) {\n            if (!Array.isArray(message.value)) return \"value: array expected\";\n\n            for (var i = 0; i < message.value.length; ++i) {\n              var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);\n              if (error) return \"value.\" + error;\n            }\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) {\n            var error = $root.google.protobuf.EnumOptions.verify(message.options);\n            if (error) return \"options.\" + error;\n          }\n\n          if (message.reservedRange != null && message.hasOwnProperty(\"reservedRange\")) {\n            if (!Array.isArray(message.reservedRange)) return \"reservedRange: array expected\";\n\n            for (var i = 0; i < message.reservedRange.length; ++i) {\n              var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);\n              if (error) return \"reservedRange.\" + error;\n            }\n          }\n\n          if (message.reservedName != null && message.hasOwnProperty(\"reservedName\")) {\n            if (!Array.isArray(message.reservedName)) return \"reservedName: array expected\";\n\n            for (var i = 0; i < message.reservedName.length; ++i) if (!$util.isString(message.reservedName[i])) return \"reservedName: string[] expected\";\n          }\n\n          return null;\n        };\n        /**\n         * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n         */\n\n\n        EnumDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.EnumDescriptorProto) return object;\n          var message = new $root.google.protobuf.EnumDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.value) {\n            if (!Array.isArray(object.value)) throw TypeError(\".google.protobuf.EnumDescriptorProto.value: array expected\");\n            message.value = [];\n\n            for (var i = 0; i < object.value.length; ++i) {\n              if (typeof object.value[i] !== \"object\") throw TypeError(\".google.protobuf.EnumDescriptorProto.value: object expected\");\n              message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);\n            }\n          }\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.EnumDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);\n          }\n\n          if (object.reservedRange) {\n            if (!Array.isArray(object.reservedRange)) throw TypeError(\".google.protobuf.EnumDescriptorProto.reservedRange: array expected\");\n            message.reservedRange = [];\n\n            for (var i = 0; i < object.reservedRange.length; ++i) {\n              if (typeof object.reservedRange[i] !== \"object\") throw TypeError(\".google.protobuf.EnumDescriptorProto.reservedRange: object expected\");\n              message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);\n            }\n          }\n\n          if (object.reservedName) {\n            if (!Array.isArray(object.reservedName)) throw TypeError(\".google.protobuf.EnumDescriptorProto.reservedName: array expected\");\n            message.reservedName = [];\n\n            for (var i = 0; i < object.reservedName.length; ++i) message.reservedName[i] = String(object.reservedName[i]);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        EnumDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.value = [];\n            object.reservedRange = [];\n            object.reservedName = [];\n          }\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n\n          if (message.value && message.value.length) {\n            object.value = [];\n\n            for (var j = 0; j < message.value.length; ++j) object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);\n\n          if (message.reservedRange && message.reservedRange.length) {\n            object.reservedRange = [];\n\n            for (var j = 0; j < message.reservedRange.length; ++j) object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);\n          }\n\n          if (message.reservedName && message.reservedName.length) {\n            object.reservedName = [];\n\n            for (var j = 0; j < message.reservedName.length; ++j) object.reservedName[j] = message.reservedName[j];\n          }\n\n          return object;\n        };\n        /**\n         * Converts this EnumDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        EnumDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        EnumDescriptorProto.EnumReservedRange = function () {\n          /**\n           * Properties of an EnumReservedRange.\n           * @memberof google.protobuf.EnumDescriptorProto\n           * @interface IEnumReservedRange\n           * @property {number|null} [start] EnumReservedRange start\n           * @property {number|null} [end] EnumReservedRange end\n           */\n\n          /**\n           * Constructs a new EnumReservedRange.\n           * @memberof google.protobuf.EnumDescriptorProto\n           * @classdesc Represents an EnumReservedRange.\n           * @implements IEnumReservedRange\n           * @constructor\n           * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set\n           */\n          function EnumReservedRange(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n          /**\n           * EnumReservedRange start.\n           * @member {number} start\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @instance\n           */\n\n\n          EnumReservedRange.prototype.start = 0;\n          /**\n           * EnumReservedRange end.\n           * @member {number} end\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @instance\n           */\n\n          EnumReservedRange.prototype.end = 0;\n          /**\n           * Creates a new EnumReservedRange instance using the specified properties.\n           * @function create\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @static\n           * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set\n           * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance\n           */\n\n          EnumReservedRange.create = function create(properties) {\n            return new EnumReservedRange(properties);\n          };\n          /**\n           * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.\n           * @function encode\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @static\n           * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          EnumReservedRange.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            if (message.start != null && message.hasOwnProperty(\"start\")) writer.uint32(\n            /* id 1, wireType 0 =*/\n            8).int32(message.start);\n            if (message.end != null && message.hasOwnProperty(\"end\")) writer.uint32(\n            /* id 2, wireType 0 =*/\n            16).int32(message.end);\n            return writer;\n          };\n          /**\n           * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.\n           * @function encodeDelimited\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @static\n           * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n          };\n          /**\n           * Decodes an EnumReservedRange message from the specified reader or buffer.\n           * @function decode\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @param {number} [length] Message length if known beforehand\n           * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          EnumReservedRange.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();\n\n            while (reader.pos < end) {\n              var tag = reader.uint32();\n\n              switch (tag >>> 3) {\n                case 1:\n                  message.start = reader.int32();\n                  break;\n\n                case 2:\n                  message.end = reader.int32();\n                  break;\n\n                default:\n                  reader.skipType(tag & 7);\n                  break;\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.\n           * @function decodeDelimited\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n          };\n          /**\n           * Verifies an EnumReservedRange message.\n           * @function verify\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @static\n           * @param {Object.<string,*>} message Plain object to verify\n           * @returns {string|null} `null` if valid, otherwise the reason why it is not\n           */\n\n\n          EnumReservedRange.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null) return \"object expected\";\n            if (message.start != null && message.hasOwnProperty(\"start\")) if (!$util.isInteger(message.start)) return \"start: integer expected\";\n            if (message.end != null && message.hasOwnProperty(\"end\")) if (!$util.isInteger(message.end)) return \"end: integer expected\";\n            return null;\n          };\n          /**\n           * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange\n           */\n\n\n          EnumReservedRange.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange) return object;\n            var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();\n            if (object.start != null) message.start = object.start | 0;\n            if (object.end != null) message.end = object.end | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @static\n           * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          EnumReservedRange.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.start = 0;\n              object.end = 0;\n            }\n\n            if (message.start != null && message.hasOwnProperty(\"start\")) object.start = message.start;\n            if (message.end != null && message.hasOwnProperty(\"end\")) object.end = message.end;\n            return object;\n          };\n          /**\n           * Converts this EnumReservedRange to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          EnumReservedRange.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return EnumReservedRange;\n        }();\n\n        return EnumDescriptorProto;\n      }();\n\n      protobuf.EnumValueDescriptorProto = function () {\n        /**\n         * Properties of an EnumValueDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IEnumValueDescriptorProto\n         * @property {string|null} [name] EnumValueDescriptorProto name\n         * @property {number|null} [number] EnumValueDescriptorProto number\n         * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options\n         */\n\n        /**\n         * Constructs a new EnumValueDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents an EnumValueDescriptorProto.\n         * @implements IEnumValueDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set\n         */\n        function EnumValueDescriptorProto(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * EnumValueDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @instance\n         */\n\n\n        EnumValueDescriptorProto.prototype.name = \"\";\n        /**\n         * EnumValueDescriptorProto number.\n         * @member {number} number\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @instance\n         */\n\n        EnumValueDescriptorProto.prototype.number = 0;\n        /**\n         * EnumValueDescriptorProto options.\n         * @member {google.protobuf.IEnumValueOptions|null|undefined} options\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @instance\n         */\n\n        EnumValueDescriptorProto.prototype.options = null;\n        /**\n         * Creates a new EnumValueDescriptorProto instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set\n         * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance\n         */\n\n        EnumValueDescriptorProto.create = function create(properties) {\n          return new EnumValueDescriptorProto(properties);\n        };\n        /**\n         * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        EnumValueDescriptorProto.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.name);\n          if (message.number != null && message.hasOwnProperty(\"number\")) writer.uint32(\n          /* id 2, wireType 0 =*/\n          16).int32(message.number);\n          if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(\n          /* id 3, wireType 2 =*/\n          26).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        EnumValueDescriptorProto.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.EnumValueDescriptorProto();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.name = reader.string();\n                break;\n\n              case 2:\n                message.number = reader.int32();\n                break;\n\n              case 3:\n                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies an EnumValueDescriptorProto message.\n         * @function verify\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        EnumValueDescriptorProto.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n          if (message.number != null && message.hasOwnProperty(\"number\")) if (!$util.isInteger(message.number)) return \"number: integer expected\";\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) {\n            var error = $root.google.protobuf.EnumValueOptions.verify(message.options);\n            if (error) return \"options.\" + error;\n          }\n\n          return null;\n        };\n        /**\n         * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n         */\n\n\n        EnumValueDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.EnumValueDescriptorProto) return object;\n          var message = new $root.google.protobuf.EnumValueDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n          if (object.number != null) message.number = object.number | 0;\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.EnumValueDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        EnumValueDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.number = 0;\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.number != null && message.hasOwnProperty(\"number\")) object.number = message.number;\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);\n          return object;\n        };\n        /**\n         * Converts this EnumValueDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        EnumValueDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return EnumValueDescriptorProto;\n      }();\n\n      protobuf.ServiceDescriptorProto = function () {\n        /**\n         * Properties of a ServiceDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IServiceDescriptorProto\n         * @property {string|null} [name] ServiceDescriptorProto name\n         * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method\n         * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options\n         */\n\n        /**\n         * Constructs a new ServiceDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a ServiceDescriptorProto.\n         * @implements IServiceDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set\n         */\n        function ServiceDescriptorProto(properties) {\n          this.method = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * ServiceDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @instance\n         */\n\n\n        ServiceDescriptorProto.prototype.name = \"\";\n        /**\n         * ServiceDescriptorProto method.\n         * @member {Array.<google.protobuf.IMethodDescriptorProto>} method\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @instance\n         */\n\n        ServiceDescriptorProto.prototype.method = $util.emptyArray;\n        /**\n         * ServiceDescriptorProto options.\n         * @member {google.protobuf.IServiceOptions|null|undefined} options\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @instance\n         */\n\n        ServiceDescriptorProto.prototype.options = null;\n        /**\n         * Creates a new ServiceDescriptorProto instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set\n         * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance\n         */\n\n        ServiceDescriptorProto.create = function create(properties) {\n          return new ServiceDescriptorProto(properties);\n        };\n        /**\n         * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        ServiceDescriptorProto.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.name);\n          if (message.method != null && message.method.length) for (var i = 0; i < message.method.length; ++i) $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).fork()).ldelim();\n          if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(\n          /* id 3, wireType 2 =*/\n          26).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a ServiceDescriptorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        ServiceDescriptorProto.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.ServiceDescriptorProto();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.name = reader.string();\n                break;\n\n              case 2:\n                if (!(message.method && message.method.length)) message.method = [];\n                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));\n                break;\n\n              case 3:\n                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a ServiceDescriptorProto message.\n         * @function verify\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        ServiceDescriptorProto.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n\n          if (message.method != null && message.hasOwnProperty(\"method\")) {\n            if (!Array.isArray(message.method)) return \"method: array expected\";\n\n            for (var i = 0; i < message.method.length; ++i) {\n              var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);\n              if (error) return \"method.\" + error;\n            }\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) {\n            var error = $root.google.protobuf.ServiceOptions.verify(message.options);\n            if (error) return \"options.\" + error;\n          }\n\n          return null;\n        };\n        /**\n         * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n         */\n\n\n        ServiceDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.ServiceDescriptorProto) return object;\n          var message = new $root.google.protobuf.ServiceDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.method) {\n            if (!Array.isArray(object.method)) throw TypeError(\".google.protobuf.ServiceDescriptorProto.method: array expected\");\n            message.method = [];\n\n            for (var i = 0; i < object.method.length; ++i) {\n              if (typeof object.method[i] !== \"object\") throw TypeError(\".google.protobuf.ServiceDescriptorProto.method: object expected\");\n              message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);\n            }\n          }\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.ServiceDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ServiceDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.method = [];\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n\n          if (message.method && message.method.length) {\n            object.method = [];\n\n            for (var j = 0; j < message.method.length; ++j) object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);\n          return object;\n        };\n        /**\n         * Converts this ServiceDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ServiceDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ServiceDescriptorProto;\n      }();\n\n      protobuf.MethodDescriptorProto = function () {\n        /**\n         * Properties of a MethodDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IMethodDescriptorProto\n         * @property {string|null} [name] MethodDescriptorProto name\n         * @property {string|null} [inputType] MethodDescriptorProto inputType\n         * @property {string|null} [outputType] MethodDescriptorProto outputType\n         * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options\n         * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming\n         * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming\n         */\n\n        /**\n         * Constructs a new MethodDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a MethodDescriptorProto.\n         * @implements IMethodDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set\n         */\n        function MethodDescriptorProto(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * MethodDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n\n        MethodDescriptorProto.prototype.name = \"\";\n        /**\n         * MethodDescriptorProto inputType.\n         * @member {string} inputType\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.inputType = \"\";\n        /**\n         * MethodDescriptorProto outputType.\n         * @member {string} outputType\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.outputType = \"\";\n        /**\n         * MethodDescriptorProto options.\n         * @member {google.protobuf.IMethodOptions|null|undefined} options\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.options = null;\n        /**\n         * MethodDescriptorProto clientStreaming.\n         * @member {boolean} clientStreaming\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.clientStreaming = false;\n        /**\n         * MethodDescriptorProto serverStreaming.\n         * @member {boolean} serverStreaming\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.serverStreaming = false;\n        /**\n         * Creates a new MethodDescriptorProto instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set\n         * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance\n         */\n\n        MethodDescriptorProto.create = function create(properties) {\n          return new MethodDescriptorProto(properties);\n        };\n        /**\n         * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        MethodDescriptorProto.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.hasOwnProperty(\"name\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.name);\n          if (message.inputType != null && message.hasOwnProperty(\"inputType\")) writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).string(message.inputType);\n          if (message.outputType != null && message.hasOwnProperty(\"outputType\")) writer.uint32(\n          /* id 3, wireType 2 =*/\n          26).string(message.outputType);\n          if (message.options != null && message.hasOwnProperty(\"options\")) $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(\n          /* id 4, wireType 2 =*/\n          34).fork()).ldelim();\n          if (message.clientStreaming != null && message.hasOwnProperty(\"clientStreaming\")) writer.uint32(\n          /* id 5, wireType 0 =*/\n          40).bool(message.clientStreaming);\n          if (message.serverStreaming != null && message.hasOwnProperty(\"serverStreaming\")) writer.uint32(\n          /* id 6, wireType 0 =*/\n          48).bool(message.serverStreaming);\n          return writer;\n        };\n        /**\n         * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a MethodDescriptorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        MethodDescriptorProto.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.MethodDescriptorProto();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.name = reader.string();\n                break;\n\n              case 2:\n                message.inputType = reader.string();\n                break;\n\n              case 3:\n                message.outputType = reader.string();\n                break;\n\n              case 4:\n                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());\n                break;\n\n              case 5:\n                message.clientStreaming = reader.bool();\n                break;\n\n              case 6:\n                message.serverStreaming = reader.bool();\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a MethodDescriptorProto message.\n         * @function verify\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        MethodDescriptorProto.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) if (!$util.isString(message.name)) return \"name: string expected\";\n          if (message.inputType != null && message.hasOwnProperty(\"inputType\")) if (!$util.isString(message.inputType)) return \"inputType: string expected\";\n          if (message.outputType != null && message.hasOwnProperty(\"outputType\")) if (!$util.isString(message.outputType)) return \"outputType: string expected\";\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) {\n            var error = $root.google.protobuf.MethodOptions.verify(message.options);\n            if (error) return \"options.\" + error;\n          }\n\n          if (message.clientStreaming != null && message.hasOwnProperty(\"clientStreaming\")) if (typeof message.clientStreaming !== \"boolean\") return \"clientStreaming: boolean expected\";\n          if (message.serverStreaming != null && message.hasOwnProperty(\"serverStreaming\")) if (typeof message.serverStreaming !== \"boolean\") return \"serverStreaming: boolean expected\";\n          return null;\n        };\n        /**\n         * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n         */\n\n\n        MethodDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.MethodDescriptorProto) return object;\n          var message = new $root.google.protobuf.MethodDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n          if (object.inputType != null) message.inputType = String(object.inputType);\n          if (object.outputType != null) message.outputType = String(object.outputType);\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.MethodDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);\n          }\n\n          if (object.clientStreaming != null) message.clientStreaming = Boolean(object.clientStreaming);\n          if (object.serverStreaming != null) message.serverStreaming = Boolean(object.serverStreaming);\n          return message;\n        };\n        /**\n         * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        MethodDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.inputType = \"\";\n            object.outputType = \"\";\n            object.options = null;\n            object.clientStreaming = false;\n            object.serverStreaming = false;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.inputType != null && message.hasOwnProperty(\"inputType\")) object.inputType = message.inputType;\n          if (message.outputType != null && message.hasOwnProperty(\"outputType\")) object.outputType = message.outputType;\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);\n          if (message.clientStreaming != null && message.hasOwnProperty(\"clientStreaming\")) object.clientStreaming = message.clientStreaming;\n          if (message.serverStreaming != null && message.hasOwnProperty(\"serverStreaming\")) object.serverStreaming = message.serverStreaming;\n          return object;\n        };\n        /**\n         * Converts this MethodDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        MethodDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return MethodDescriptorProto;\n      }();\n\n      protobuf.FileOptions = function () {\n        /**\n         * Properties of a FileOptions.\n         * @memberof google.protobuf\n         * @interface IFileOptions\n         * @property {string|null} [javaPackage] FileOptions javaPackage\n         * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname\n         * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles\n         * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash\n         * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8\n         * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor\n         * @property {string|null} [goPackage] FileOptions goPackage\n         * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices\n         * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices\n         * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices\n         * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices\n         * @property {boolean|null} [deprecated] FileOptions deprecated\n         * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas\n         * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix\n         * @property {string|null} [csharpNamespace] FileOptions csharpNamespace\n         * @property {string|null} [swiftPrefix] FileOptions swiftPrefix\n         * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix\n         * @property {string|null} [phpNamespace] FileOptions phpNamespace\n         * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace\n         * @property {string|null} [rubyPackage] FileOptions rubyPackage\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new FileOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a FileOptions.\n         * @implements IFileOptions\n         * @constructor\n         * @param {google.protobuf.IFileOptions=} [properties] Properties to set\n         */\n        function FileOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * FileOptions javaPackage.\n         * @member {string} javaPackage\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n\n        FileOptions.prototype.javaPackage = \"\";\n        /**\n         * FileOptions javaOuterClassname.\n         * @member {string} javaOuterClassname\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaOuterClassname = \"\";\n        /**\n         * FileOptions javaMultipleFiles.\n         * @member {boolean} javaMultipleFiles\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaMultipleFiles = false;\n        /**\n         * FileOptions javaGenerateEqualsAndHash.\n         * @member {boolean} javaGenerateEqualsAndHash\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaGenerateEqualsAndHash = false;\n        /**\n         * FileOptions javaStringCheckUtf8.\n         * @member {boolean} javaStringCheckUtf8\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaStringCheckUtf8 = false;\n        /**\n         * FileOptions optimizeFor.\n         * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.optimizeFor = 1;\n        /**\n         * FileOptions goPackage.\n         * @member {string} goPackage\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.goPackage = \"\";\n        /**\n         * FileOptions ccGenericServices.\n         * @member {boolean} ccGenericServices\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.ccGenericServices = false;\n        /**\n         * FileOptions javaGenericServices.\n         * @member {boolean} javaGenericServices\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaGenericServices = false;\n        /**\n         * FileOptions pyGenericServices.\n         * @member {boolean} pyGenericServices\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.pyGenericServices = false;\n        /**\n         * FileOptions phpGenericServices.\n         * @member {boolean} phpGenericServices\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.phpGenericServices = false;\n        /**\n         * FileOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.deprecated = false;\n        /**\n         * FileOptions ccEnableArenas.\n         * @member {boolean} ccEnableArenas\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.ccEnableArenas = false;\n        /**\n         * FileOptions objcClassPrefix.\n         * @member {string} objcClassPrefix\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.objcClassPrefix = \"\";\n        /**\n         * FileOptions csharpNamespace.\n         * @member {string} csharpNamespace\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.csharpNamespace = \"\";\n        /**\n         * FileOptions swiftPrefix.\n         * @member {string} swiftPrefix\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.swiftPrefix = \"\";\n        /**\n         * FileOptions phpClassPrefix.\n         * @member {string} phpClassPrefix\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.phpClassPrefix = \"\";\n        /**\n         * FileOptions phpNamespace.\n         * @member {string} phpNamespace\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.phpNamespace = \"\";\n        /**\n         * FileOptions phpMetadataNamespace.\n         * @member {string} phpMetadataNamespace\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.phpMetadataNamespace = \"\";\n        /**\n         * FileOptions rubyPackage.\n         * @member {string} rubyPackage\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.rubyPackage = \"\";\n        /**\n         * FileOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates a new FileOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {google.protobuf.IFileOptions=} [properties] Properties to set\n         * @returns {google.protobuf.FileOptions} FileOptions instance\n         */\n\n        FileOptions.create = function create(properties) {\n          return new FileOptions(properties);\n        };\n        /**\n         * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FileOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.javaPackage != null && message.hasOwnProperty(\"javaPackage\")) writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).string(message.javaPackage);\n          if (message.javaOuterClassname != null && message.hasOwnProperty(\"javaOuterClassname\")) writer.uint32(\n          /* id 8, wireType 2 =*/\n          66).string(message.javaOuterClassname);\n          if (message.optimizeFor != null && message.hasOwnProperty(\"optimizeFor\")) writer.uint32(\n          /* id 9, wireType 0 =*/\n          72).int32(message.optimizeFor);\n          if (message.javaMultipleFiles != null && message.hasOwnProperty(\"javaMultipleFiles\")) writer.uint32(\n          /* id 10, wireType 0 =*/\n          80).bool(message.javaMultipleFiles);\n          if (message.goPackage != null && message.hasOwnProperty(\"goPackage\")) writer.uint32(\n          /* id 11, wireType 2 =*/\n          90).string(message.goPackage);\n          if (message.ccGenericServices != null && message.hasOwnProperty(\"ccGenericServices\")) writer.uint32(\n          /* id 16, wireType 0 =*/\n          128).bool(message.ccGenericServices);\n          if (message.javaGenericServices != null && message.hasOwnProperty(\"javaGenericServices\")) writer.uint32(\n          /* id 17, wireType 0 =*/\n          136).bool(message.javaGenericServices);\n          if (message.pyGenericServices != null && message.hasOwnProperty(\"pyGenericServices\")) writer.uint32(\n          /* id 18, wireType 0 =*/\n          144).bool(message.pyGenericServices);\n          if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty(\"javaGenerateEqualsAndHash\")) writer.uint32(\n          /* id 20, wireType 0 =*/\n          160).bool(message.javaGenerateEqualsAndHash);\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) writer.uint32(\n          /* id 23, wireType 0 =*/\n          184).bool(message.deprecated);\n          if (message.javaStringCheckUtf8 != null && message.hasOwnProperty(\"javaStringCheckUtf8\")) writer.uint32(\n          /* id 27, wireType 0 =*/\n          216).bool(message.javaStringCheckUtf8);\n          if (message.ccEnableArenas != null && message.hasOwnProperty(\"ccEnableArenas\")) writer.uint32(\n          /* id 31, wireType 0 =*/\n          248).bool(message.ccEnableArenas);\n          if (message.objcClassPrefix != null && message.hasOwnProperty(\"objcClassPrefix\")) writer.uint32(\n          /* id 36, wireType 2 =*/\n          290).string(message.objcClassPrefix);\n          if (message.csharpNamespace != null && message.hasOwnProperty(\"csharpNamespace\")) writer.uint32(\n          /* id 37, wireType 2 =*/\n          298).string(message.csharpNamespace);\n          if (message.swiftPrefix != null && message.hasOwnProperty(\"swiftPrefix\")) writer.uint32(\n          /* id 39, wireType 2 =*/\n          314).string(message.swiftPrefix);\n          if (message.phpClassPrefix != null && message.hasOwnProperty(\"phpClassPrefix\")) writer.uint32(\n          /* id 40, wireType 2 =*/\n          322).string(message.phpClassPrefix);\n          if (message.phpNamespace != null && message.hasOwnProperty(\"phpNamespace\")) writer.uint32(\n          /* id 41, wireType 2 =*/\n          330).string(message.phpNamespace);\n          if (message.phpGenericServices != null && message.hasOwnProperty(\"phpGenericServices\")) writer.uint32(\n          /* id 42, wireType 0 =*/\n          336).bool(message.phpGenericServices);\n          if (message.phpMetadataNamespace != null && message.hasOwnProperty(\"phpMetadataNamespace\")) writer.uint32(\n          /* id 44, wireType 2 =*/\n          354).string(message.phpMetadataNamespace);\n          if (message.rubyPackage != null && message.hasOwnProperty(\"rubyPackage\")) writer.uint32(\n          /* id 45, wireType 2 =*/\n          362).string(message.rubyPackage);\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FileOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a FileOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.FileOptions} FileOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FileOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.FileOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.javaPackage = reader.string();\n                break;\n\n              case 8:\n                message.javaOuterClassname = reader.string();\n                break;\n\n              case 10:\n                message.javaMultipleFiles = reader.bool();\n                break;\n\n              case 20:\n                message.javaGenerateEqualsAndHash = reader.bool();\n                break;\n\n              case 27:\n                message.javaStringCheckUtf8 = reader.bool();\n                break;\n\n              case 9:\n                message.optimizeFor = reader.int32();\n                break;\n\n              case 11:\n                message.goPackage = reader.string();\n                break;\n\n              case 16:\n                message.ccGenericServices = reader.bool();\n                break;\n\n              case 17:\n                message.javaGenericServices = reader.bool();\n                break;\n\n              case 18:\n                message.pyGenericServices = reader.bool();\n                break;\n\n              case 42:\n                message.phpGenericServices = reader.bool();\n                break;\n\n              case 23:\n                message.deprecated = reader.bool();\n                break;\n\n              case 31:\n                message.ccEnableArenas = reader.bool();\n                break;\n\n              case 36:\n                message.objcClassPrefix = reader.string();\n                break;\n\n              case 37:\n                message.csharpNamespace = reader.string();\n                break;\n\n              case 39:\n                message.swiftPrefix = reader.string();\n                break;\n\n              case 40:\n                message.phpClassPrefix = reader.string();\n                break;\n\n              case 41:\n                message.phpNamespace = reader.string();\n                break;\n\n              case 44:\n                message.phpMetadataNamespace = reader.string();\n                break;\n\n              case 45:\n                message.rubyPackage = reader.string();\n                break;\n\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a FileOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.FileOptions} FileOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FileOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a FileOptions message.\n         * @function verify\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        FileOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.javaPackage != null && message.hasOwnProperty(\"javaPackage\")) if (!$util.isString(message.javaPackage)) return \"javaPackage: string expected\";\n          if (message.javaOuterClassname != null && message.hasOwnProperty(\"javaOuterClassname\")) if (!$util.isString(message.javaOuterClassname)) return \"javaOuterClassname: string expected\";\n          if (message.javaMultipleFiles != null && message.hasOwnProperty(\"javaMultipleFiles\")) if (typeof message.javaMultipleFiles !== \"boolean\") return \"javaMultipleFiles: boolean expected\";\n          if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty(\"javaGenerateEqualsAndHash\")) if (typeof message.javaGenerateEqualsAndHash !== \"boolean\") return \"javaGenerateEqualsAndHash: boolean expected\";\n          if (message.javaStringCheckUtf8 != null && message.hasOwnProperty(\"javaStringCheckUtf8\")) if (typeof message.javaStringCheckUtf8 !== \"boolean\") return \"javaStringCheckUtf8: boolean expected\";\n          if (message.optimizeFor != null && message.hasOwnProperty(\"optimizeFor\")) switch (message.optimizeFor) {\n            default:\n              return \"optimizeFor: enum value expected\";\n\n            case 1:\n            case 2:\n            case 3:\n              break;\n          }\n          if (message.goPackage != null && message.hasOwnProperty(\"goPackage\")) if (!$util.isString(message.goPackage)) return \"goPackage: string expected\";\n          if (message.ccGenericServices != null && message.hasOwnProperty(\"ccGenericServices\")) if (typeof message.ccGenericServices !== \"boolean\") return \"ccGenericServices: boolean expected\";\n          if (message.javaGenericServices != null && message.hasOwnProperty(\"javaGenericServices\")) if (typeof message.javaGenericServices !== \"boolean\") return \"javaGenericServices: boolean expected\";\n          if (message.pyGenericServices != null && message.hasOwnProperty(\"pyGenericServices\")) if (typeof message.pyGenericServices !== \"boolean\") return \"pyGenericServices: boolean expected\";\n          if (message.phpGenericServices != null && message.hasOwnProperty(\"phpGenericServices\")) if (typeof message.phpGenericServices !== \"boolean\") return \"phpGenericServices: boolean expected\";\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) if (typeof message.deprecated !== \"boolean\") return \"deprecated: boolean expected\";\n          if (message.ccEnableArenas != null && message.hasOwnProperty(\"ccEnableArenas\")) if (typeof message.ccEnableArenas !== \"boolean\") return \"ccEnableArenas: boolean expected\";\n          if (message.objcClassPrefix != null && message.hasOwnProperty(\"objcClassPrefix\")) if (!$util.isString(message.objcClassPrefix)) return \"objcClassPrefix: string expected\";\n          if (message.csharpNamespace != null && message.hasOwnProperty(\"csharpNamespace\")) if (!$util.isString(message.csharpNamespace)) return \"csharpNamespace: string expected\";\n          if (message.swiftPrefix != null && message.hasOwnProperty(\"swiftPrefix\")) if (!$util.isString(message.swiftPrefix)) return \"swiftPrefix: string expected\";\n          if (message.phpClassPrefix != null && message.hasOwnProperty(\"phpClassPrefix\")) if (!$util.isString(message.phpClassPrefix)) return \"phpClassPrefix: string expected\";\n          if (message.phpNamespace != null && message.hasOwnProperty(\"phpNamespace\")) if (!$util.isString(message.phpNamespace)) return \"phpNamespace: string expected\";\n          if (message.phpMetadataNamespace != null && message.hasOwnProperty(\"phpMetadataNamespace\")) if (!$util.isString(message.phpMetadataNamespace)) return \"phpMetadataNamespace: string expected\";\n          if (message.rubyPackage != null && message.hasOwnProperty(\"rubyPackage\")) if (!$util.isString(message.rubyPackage)) return \"rubyPackage: string expected\";\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FileOptions} FileOptions\n         */\n\n\n        FileOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FileOptions) return object;\n          var message = new $root.google.protobuf.FileOptions();\n          if (object.javaPackage != null) message.javaPackage = String(object.javaPackage);\n          if (object.javaOuterClassname != null) message.javaOuterClassname = String(object.javaOuterClassname);\n          if (object.javaMultipleFiles != null) message.javaMultipleFiles = Boolean(object.javaMultipleFiles);\n          if (object.javaGenerateEqualsAndHash != null) message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);\n          if (object.javaStringCheckUtf8 != null) message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);\n\n          switch (object.optimizeFor) {\n            case \"SPEED\":\n            case 1:\n              message.optimizeFor = 1;\n              break;\n\n            case \"CODE_SIZE\":\n            case 2:\n              message.optimizeFor = 2;\n              break;\n\n            case \"LITE_RUNTIME\":\n            case 3:\n              message.optimizeFor = 3;\n              break;\n          }\n\n          if (object.goPackage != null) message.goPackage = String(object.goPackage);\n          if (object.ccGenericServices != null) message.ccGenericServices = Boolean(object.ccGenericServices);\n          if (object.javaGenericServices != null) message.javaGenericServices = Boolean(object.javaGenericServices);\n          if (object.pyGenericServices != null) message.pyGenericServices = Boolean(object.pyGenericServices);\n          if (object.phpGenericServices != null) message.phpGenericServices = Boolean(object.phpGenericServices);\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n          if (object.ccEnableArenas != null) message.ccEnableArenas = Boolean(object.ccEnableArenas);\n          if (object.objcClassPrefix != null) message.objcClassPrefix = String(object.objcClassPrefix);\n          if (object.csharpNamespace != null) message.csharpNamespace = String(object.csharpNamespace);\n          if (object.swiftPrefix != null) message.swiftPrefix = String(object.swiftPrefix);\n          if (object.phpClassPrefix != null) message.phpClassPrefix = String(object.phpClassPrefix);\n          if (object.phpNamespace != null) message.phpNamespace = String(object.phpNamespace);\n          if (object.phpMetadataNamespace != null) message.phpMetadataNamespace = String(object.phpMetadataNamespace);\n          if (object.rubyPackage != null) message.rubyPackage = String(object.rubyPackage);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.FileOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.FileOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FileOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {google.protobuf.FileOptions} message FileOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FileOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (options.defaults) {\n            object.javaPackage = \"\";\n            object.javaOuterClassname = \"\";\n            object.optimizeFor = options.enums === String ? \"SPEED\" : 1;\n            object.javaMultipleFiles = false;\n            object.goPackage = \"\";\n            object.ccGenericServices = false;\n            object.javaGenericServices = false;\n            object.pyGenericServices = false;\n            object.javaGenerateEqualsAndHash = false;\n            object.deprecated = false;\n            object.javaStringCheckUtf8 = false;\n            object.ccEnableArenas = false;\n            object.objcClassPrefix = \"\";\n            object.csharpNamespace = \"\";\n            object.swiftPrefix = \"\";\n            object.phpClassPrefix = \"\";\n            object.phpNamespace = \"\";\n            object.phpGenericServices = false;\n            object.phpMetadataNamespace = \"\";\n            object.rubyPackage = \"\";\n          }\n\n          if (message.javaPackage != null && message.hasOwnProperty(\"javaPackage\")) object.javaPackage = message.javaPackage;\n          if (message.javaOuterClassname != null && message.hasOwnProperty(\"javaOuterClassname\")) object.javaOuterClassname = message.javaOuterClassname;\n          if (message.optimizeFor != null && message.hasOwnProperty(\"optimizeFor\")) object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;\n          if (message.javaMultipleFiles != null && message.hasOwnProperty(\"javaMultipleFiles\")) object.javaMultipleFiles = message.javaMultipleFiles;\n          if (message.goPackage != null && message.hasOwnProperty(\"goPackage\")) object.goPackage = message.goPackage;\n          if (message.ccGenericServices != null && message.hasOwnProperty(\"ccGenericServices\")) object.ccGenericServices = message.ccGenericServices;\n          if (message.javaGenericServices != null && message.hasOwnProperty(\"javaGenericServices\")) object.javaGenericServices = message.javaGenericServices;\n          if (message.pyGenericServices != null && message.hasOwnProperty(\"pyGenericServices\")) object.pyGenericServices = message.pyGenericServices;\n          if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty(\"javaGenerateEqualsAndHash\")) object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n          if (message.javaStringCheckUtf8 != null && message.hasOwnProperty(\"javaStringCheckUtf8\")) object.javaStringCheckUtf8 = message.javaStringCheckUtf8;\n          if (message.ccEnableArenas != null && message.hasOwnProperty(\"ccEnableArenas\")) object.ccEnableArenas = message.ccEnableArenas;\n          if (message.objcClassPrefix != null && message.hasOwnProperty(\"objcClassPrefix\")) object.objcClassPrefix = message.objcClassPrefix;\n          if (message.csharpNamespace != null && message.hasOwnProperty(\"csharpNamespace\")) object.csharpNamespace = message.csharpNamespace;\n          if (message.swiftPrefix != null && message.hasOwnProperty(\"swiftPrefix\")) object.swiftPrefix = message.swiftPrefix;\n          if (message.phpClassPrefix != null && message.hasOwnProperty(\"phpClassPrefix\")) object.phpClassPrefix = message.phpClassPrefix;\n          if (message.phpNamespace != null && message.hasOwnProperty(\"phpNamespace\")) object.phpNamespace = message.phpNamespace;\n          if (message.phpGenericServices != null && message.hasOwnProperty(\"phpGenericServices\")) object.phpGenericServices = message.phpGenericServices;\n          if (message.phpMetadataNamespace != null && message.hasOwnProperty(\"phpMetadataNamespace\")) object.phpMetadataNamespace = message.phpMetadataNamespace;\n          if (message.rubyPackage != null && message.hasOwnProperty(\"rubyPackage\")) object.rubyPackage = message.rubyPackage;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this FileOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FileOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        /**\n         * OptimizeMode enum.\n         * @name google.protobuf.FileOptions.OptimizeMode\n         * @enum {string}\n         * @property {number} SPEED=1 SPEED value\n         * @property {number} CODE_SIZE=2 CODE_SIZE value\n         * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value\n         */\n\n\n        FileOptions.OptimizeMode = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[1] = \"SPEED\"] = 1;\n          values[valuesById[2] = \"CODE_SIZE\"] = 2;\n          values[valuesById[3] = \"LITE_RUNTIME\"] = 3;\n          return values;\n        }();\n\n        return FileOptions;\n      }();\n\n      protobuf.MessageOptions = function () {\n        /**\n         * Properties of a MessageOptions.\n         * @memberof google.protobuf\n         * @interface IMessageOptions\n         * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat\n         * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor\n         * @property {boolean|null} [deprecated] MessageOptions deprecated\n         * @property {boolean|null} [mapEntry] MessageOptions mapEntry\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new MessageOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a MessageOptions.\n         * @implements IMessageOptions\n         * @constructor\n         * @param {google.protobuf.IMessageOptions=} [properties] Properties to set\n         */\n        function MessageOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * MessageOptions messageSetWireFormat.\n         * @member {boolean} messageSetWireFormat\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n\n        MessageOptions.prototype.messageSetWireFormat = false;\n        /**\n         * MessageOptions noStandardDescriptorAccessor.\n         * @member {boolean} noStandardDescriptorAccessor\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype.noStandardDescriptorAccessor = false;\n        /**\n         * MessageOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype.deprecated = false;\n        /**\n         * MessageOptions mapEntry.\n         * @member {boolean} mapEntry\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype.mapEntry = false;\n        /**\n         * MessageOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates a new MessageOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {google.protobuf.IMessageOptions=} [properties] Properties to set\n         * @returns {google.protobuf.MessageOptions} MessageOptions instance\n         */\n\n        MessageOptions.create = function create(properties) {\n          return new MessageOptions(properties);\n        };\n        /**\n         * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        MessageOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.messageSetWireFormat != null && message.hasOwnProperty(\"messageSetWireFormat\")) writer.uint32(\n          /* id 1, wireType 0 =*/\n          8).bool(message.messageSetWireFormat);\n          if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty(\"noStandardDescriptorAccessor\")) writer.uint32(\n          /* id 2, wireType 0 =*/\n          16).bool(message.noStandardDescriptorAccessor);\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) writer.uint32(\n          /* id 3, wireType 0 =*/\n          24).bool(message.deprecated);\n          if (message.mapEntry != null && message.hasOwnProperty(\"mapEntry\")) writer.uint32(\n          /* id 7, wireType 0 =*/\n          56).bool(message.mapEntry);\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a MessageOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.MessageOptions} MessageOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        MessageOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.MessageOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.messageSetWireFormat = reader.bool();\n                break;\n\n              case 2:\n                message.noStandardDescriptorAccessor = reader.bool();\n                break;\n\n              case 3:\n                message.deprecated = reader.bool();\n                break;\n\n              case 7:\n                message.mapEntry = reader.bool();\n                break;\n\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a MessageOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.MessageOptions} MessageOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        MessageOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a MessageOptions message.\n         * @function verify\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        MessageOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.messageSetWireFormat != null && message.hasOwnProperty(\"messageSetWireFormat\")) if (typeof message.messageSetWireFormat !== \"boolean\") return \"messageSetWireFormat: boolean expected\";\n          if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty(\"noStandardDescriptorAccessor\")) if (typeof message.noStandardDescriptorAccessor !== \"boolean\") return \"noStandardDescriptorAccessor: boolean expected\";\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) if (typeof message.deprecated !== \"boolean\") return \"deprecated: boolean expected\";\n          if (message.mapEntry != null && message.hasOwnProperty(\"mapEntry\")) if (typeof message.mapEntry !== \"boolean\") return \"mapEntry: boolean expected\";\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.MessageOptions} MessageOptions\n         */\n\n\n        MessageOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.MessageOptions) return object;\n          var message = new $root.google.protobuf.MessageOptions();\n          if (object.messageSetWireFormat != null) message.messageSetWireFormat = Boolean(object.messageSetWireFormat);\n          if (object.noStandardDescriptorAccessor != null) message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n          if (object.mapEntry != null) message.mapEntry = Boolean(object.mapEntry);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.MessageOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.MessageOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {google.protobuf.MessageOptions} message MessageOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        MessageOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (options.defaults) {\n            object.messageSetWireFormat = false;\n            object.noStandardDescriptorAccessor = false;\n            object.deprecated = false;\n            object.mapEntry = false;\n          }\n\n          if (message.messageSetWireFormat != null && message.hasOwnProperty(\"messageSetWireFormat\")) object.messageSetWireFormat = message.messageSetWireFormat;\n          if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty(\"noStandardDescriptorAccessor\")) object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n          if (message.mapEntry != null && message.hasOwnProperty(\"mapEntry\")) object.mapEntry = message.mapEntry;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this MessageOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        MessageOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return MessageOptions;\n      }();\n\n      protobuf.FieldOptions = function () {\n        /**\n         * Properties of a FieldOptions.\n         * @memberof google.protobuf\n         * @interface IFieldOptions\n         * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype\n         * @property {boolean|null} [packed] FieldOptions packed\n         * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype\n         * @property {boolean|null} [lazy] FieldOptions lazy\n         * @property {boolean|null} [deprecated] FieldOptions deprecated\n         * @property {boolean|null} [weak] FieldOptions weak\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption\n         * @property {Array.<google.api.FieldBehavior>|null} [\".google.api.fieldBehavior\"] FieldOptions .google.api.fieldBehavior\n         */\n\n        /**\n         * Constructs a new FieldOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a FieldOptions.\n         * @implements IFieldOptions\n         * @constructor\n         * @param {google.protobuf.IFieldOptions=} [properties] Properties to set\n         */\n        function FieldOptions(properties) {\n          this.uninterpretedOption = [];\n          this[\".google.api.fieldBehavior\"] = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * FieldOptions ctype.\n         * @member {google.protobuf.FieldOptions.CType} ctype\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n\n        FieldOptions.prototype.ctype = 0;\n        /**\n         * FieldOptions packed.\n         * @member {boolean} packed\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.packed = false;\n        /**\n         * FieldOptions jstype.\n         * @member {google.protobuf.FieldOptions.JSType} jstype\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.jstype = 0;\n        /**\n         * FieldOptions lazy.\n         * @member {boolean} lazy\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.lazy = false;\n        /**\n         * FieldOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.deprecated = false;\n        /**\n         * FieldOptions weak.\n         * @member {boolean} weak\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.weak = false;\n        /**\n         * FieldOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * FieldOptions .google.api.fieldBehavior.\n         * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype[\".google.api.fieldBehavior\"] = $util.emptyArray;\n        /**\n         * Creates a new FieldOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {google.protobuf.IFieldOptions=} [properties] Properties to set\n         * @returns {google.protobuf.FieldOptions} FieldOptions instance\n         */\n\n        FieldOptions.create = function create(properties) {\n          return new FieldOptions(properties);\n        };\n        /**\n         * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FieldOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.ctype != null && message.hasOwnProperty(\"ctype\")) writer.uint32(\n          /* id 1, wireType 0 =*/\n          8).int32(message.ctype);\n          if (message.packed != null && message.hasOwnProperty(\"packed\")) writer.uint32(\n          /* id 2, wireType 0 =*/\n          16).bool(message.packed);\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) writer.uint32(\n          /* id 3, wireType 0 =*/\n          24).bool(message.deprecated);\n          if (message.lazy != null && message.hasOwnProperty(\"lazy\")) writer.uint32(\n          /* id 5, wireType 0 =*/\n          40).bool(message.lazy);\n          if (message.jstype != null && message.hasOwnProperty(\"jstype\")) writer.uint32(\n          /* id 6, wireType 0 =*/\n          48).int32(message.jstype);\n          if (message.weak != null && message.hasOwnProperty(\"weak\")) writer.uint32(\n          /* id 10, wireType 0 =*/\n          80).bool(message.weak);\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n\n          if (message[\".google.api.fieldBehavior\"] != null && message[\".google.api.fieldBehavior\"].length) {\n            writer.uint32(\n            /* id 1052, wireType 2 =*/\n            8418).fork();\n\n            for (var i = 0; i < message[\".google.api.fieldBehavior\"].length; ++i) writer.int32(message[\".google.api.fieldBehavior\"][i]);\n\n            writer.ldelim();\n          }\n\n          return writer;\n        };\n        /**\n         * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a FieldOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.FieldOptions} FieldOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FieldOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.FieldOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.ctype = reader.int32();\n                break;\n\n              case 2:\n                message.packed = reader.bool();\n                break;\n\n              case 6:\n                message.jstype = reader.int32();\n                break;\n\n              case 5:\n                message.lazy = reader.bool();\n                break;\n\n              case 3:\n                message.deprecated = reader.bool();\n                break;\n\n              case 10:\n                message.weak = reader.bool();\n                break;\n\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              case 1052:\n                if (!(message[\".google.api.fieldBehavior\"] && message[\".google.api.fieldBehavior\"].length)) message[\".google.api.fieldBehavior\"] = [];\n\n                if ((tag & 7) === 2) {\n                  var end2 = reader.uint32() + reader.pos;\n\n                  while (reader.pos < end2) message[\".google.api.fieldBehavior\"].push(reader.int32());\n                } else message[\".google.api.fieldBehavior\"].push(reader.int32());\n\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a FieldOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.FieldOptions} FieldOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        FieldOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a FieldOptions message.\n         * @function verify\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        FieldOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.ctype != null && message.hasOwnProperty(\"ctype\")) switch (message.ctype) {\n            default:\n              return \"ctype: enum value expected\";\n\n            case 0:\n            case 1:\n            case 2:\n              break;\n          }\n          if (message.packed != null && message.hasOwnProperty(\"packed\")) if (typeof message.packed !== \"boolean\") return \"packed: boolean expected\";\n          if (message.jstype != null && message.hasOwnProperty(\"jstype\")) switch (message.jstype) {\n            default:\n              return \"jstype: enum value expected\";\n\n            case 0:\n            case 1:\n            case 2:\n              break;\n          }\n          if (message.lazy != null && message.hasOwnProperty(\"lazy\")) if (typeof message.lazy !== \"boolean\") return \"lazy: boolean expected\";\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) if (typeof message.deprecated !== \"boolean\") return \"deprecated: boolean expected\";\n          if (message.weak != null && message.hasOwnProperty(\"weak\")) if (typeof message.weak !== \"boolean\") return \"weak: boolean expected\";\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          if (message[\".google.api.fieldBehavior\"] != null && message.hasOwnProperty(\".google.api.fieldBehavior\")) {\n            if (!Array.isArray(message[\".google.api.fieldBehavior\"])) return \".google.api.fieldBehavior: array expected\";\n\n            for (var i = 0; i < message[\".google.api.fieldBehavior\"].length; ++i) switch (message[\".google.api.fieldBehavior\"][i]) {\n              default:\n                return \".google.api.fieldBehavior: enum value[] expected\";\n\n              case 0:\n              case 1:\n              case 2:\n              case 3:\n              case 4:\n              case 5:\n                break;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FieldOptions} FieldOptions\n         */\n\n\n        FieldOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FieldOptions) return object;\n          var message = new $root.google.protobuf.FieldOptions();\n\n          switch (object.ctype) {\n            case \"STRING\":\n            case 0:\n              message.ctype = 0;\n              break;\n\n            case \"CORD\":\n            case 1:\n              message.ctype = 1;\n              break;\n\n            case \"STRING_PIECE\":\n            case 2:\n              message.ctype = 2;\n              break;\n          }\n\n          if (object.packed != null) message.packed = Boolean(object.packed);\n\n          switch (object.jstype) {\n            case \"JS_NORMAL\":\n            case 0:\n              message.jstype = 0;\n              break;\n\n            case \"JS_STRING\":\n            case 1:\n              message.jstype = 1;\n              break;\n\n            case \"JS_NUMBER\":\n            case 2:\n              message.jstype = 2;\n              break;\n          }\n\n          if (object.lazy != null) message.lazy = Boolean(object.lazy);\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n          if (object.weak != null) message.weak = Boolean(object.weak);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.FieldOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.FieldOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          if (object[\".google.api.fieldBehavior\"]) {\n            if (!Array.isArray(object[\".google.api.fieldBehavior\"])) throw TypeError(\".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected\");\n            message[\".google.api.fieldBehavior\"] = [];\n\n            for (var i = 0; i < object[\".google.api.fieldBehavior\"].length; ++i) switch (object[\".google.api.fieldBehavior\"][i]) {\n              default:\n              case \"FIELD_BEHAVIOR_UNSPECIFIED\":\n              case 0:\n                message[\".google.api.fieldBehavior\"][i] = 0;\n                break;\n\n              case \"OPTIONAL\":\n              case 1:\n                message[\".google.api.fieldBehavior\"][i] = 1;\n                break;\n\n              case \"REQUIRED\":\n              case 2:\n                message[\".google.api.fieldBehavior\"][i] = 2;\n                break;\n\n              case \"OUTPUT_ONLY\":\n              case 3:\n                message[\".google.api.fieldBehavior\"][i] = 3;\n                break;\n\n              case \"INPUT_ONLY\":\n              case 4:\n                message[\".google.api.fieldBehavior\"][i] = 4;\n                break;\n\n              case \"IMMUTABLE\":\n              case 5:\n                message[\".google.api.fieldBehavior\"][i] = 5;\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {google.protobuf.FieldOptions} message FieldOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FieldOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.uninterpretedOption = [];\n            object[\".google.api.fieldBehavior\"] = [];\n          }\n\n          if (options.defaults) {\n            object.ctype = options.enums === String ? \"STRING\" : 0;\n            object.packed = false;\n            object.deprecated = false;\n            object.lazy = false;\n            object.jstype = options.enums === String ? \"JS_NORMAL\" : 0;\n            object.weak = false;\n          }\n\n          if (message.ctype != null && message.hasOwnProperty(\"ctype\")) object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;\n          if (message.packed != null && message.hasOwnProperty(\"packed\")) object.packed = message.packed;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n          if (message.lazy != null && message.hasOwnProperty(\"lazy\")) object.lazy = message.lazy;\n          if (message.jstype != null && message.hasOwnProperty(\"jstype\")) object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;\n          if (message.weak != null && message.hasOwnProperty(\"weak\")) object.weak = message.weak;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          if (message[\".google.api.fieldBehavior\"] && message[\".google.api.fieldBehavior\"].length) {\n            object[\".google.api.fieldBehavior\"] = [];\n\n            for (var j = 0; j < message[\".google.api.fieldBehavior\"].length; ++j) object[\".google.api.fieldBehavior\"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[\".google.api.fieldBehavior\"][j]] : message[\".google.api.fieldBehavior\"][j];\n          }\n\n          return object;\n        };\n        /**\n         * Converts this FieldOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FieldOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        /**\n         * CType enum.\n         * @name google.protobuf.FieldOptions.CType\n         * @enum {string}\n         * @property {number} STRING=0 STRING value\n         * @property {number} CORD=1 CORD value\n         * @property {number} STRING_PIECE=2 STRING_PIECE value\n         */\n\n\n        FieldOptions.CType = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[0] = \"STRING\"] = 0;\n          values[valuesById[1] = \"CORD\"] = 1;\n          values[valuesById[2] = \"STRING_PIECE\"] = 2;\n          return values;\n        }();\n        /**\n         * JSType enum.\n         * @name google.protobuf.FieldOptions.JSType\n         * @enum {string}\n         * @property {number} JS_NORMAL=0 JS_NORMAL value\n         * @property {number} JS_STRING=1 JS_STRING value\n         * @property {number} JS_NUMBER=2 JS_NUMBER value\n         */\n\n\n        FieldOptions.JSType = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[0] = \"JS_NORMAL\"] = 0;\n          values[valuesById[1] = \"JS_STRING\"] = 1;\n          values[valuesById[2] = \"JS_NUMBER\"] = 2;\n          return values;\n        }();\n\n        return FieldOptions;\n      }();\n\n      protobuf.OneofOptions = function () {\n        /**\n         * Properties of an OneofOptions.\n         * @memberof google.protobuf\n         * @interface IOneofOptions\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new OneofOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents an OneofOptions.\n         * @implements IOneofOptions\n         * @constructor\n         * @param {google.protobuf.IOneofOptions=} [properties] Properties to set\n         */\n        function OneofOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * OneofOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.OneofOptions\n         * @instance\n         */\n\n\n        OneofOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates a new OneofOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {google.protobuf.IOneofOptions=} [properties] Properties to set\n         * @returns {google.protobuf.OneofOptions} OneofOptions instance\n         */\n\n        OneofOptions.create = function create(properties) {\n          return new OneofOptions(properties);\n        };\n        /**\n         * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        OneofOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes an OneofOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.OneofOptions} OneofOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        OneofOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.OneofOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes an OneofOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.OneofOptions} OneofOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        OneofOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies an OneofOptions message.\n         * @function verify\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        OneofOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.OneofOptions} OneofOptions\n         */\n\n\n        OneofOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.OneofOptions) return object;\n          var message = new $root.google.protobuf.OneofOptions();\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.OneofOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.OneofOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {google.protobuf.OneofOptions} message OneofOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        OneofOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this OneofOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.OneofOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        OneofOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OneofOptions;\n      }();\n\n      protobuf.EnumOptions = function () {\n        /**\n         * Properties of an EnumOptions.\n         * @memberof google.protobuf\n         * @interface IEnumOptions\n         * @property {boolean|null} [allowAlias] EnumOptions allowAlias\n         * @property {boolean|null} [deprecated] EnumOptions deprecated\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new EnumOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents an EnumOptions.\n         * @implements IEnumOptions\n         * @constructor\n         * @param {google.protobuf.IEnumOptions=} [properties] Properties to set\n         */\n        function EnumOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * EnumOptions allowAlias.\n         * @member {boolean} allowAlias\n         * @memberof google.protobuf.EnumOptions\n         * @instance\n         */\n\n\n        EnumOptions.prototype.allowAlias = false;\n        /**\n         * EnumOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.EnumOptions\n         * @instance\n         */\n\n        EnumOptions.prototype.deprecated = false;\n        /**\n         * EnumOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.EnumOptions\n         * @instance\n         */\n\n        EnumOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates a new EnumOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {google.protobuf.IEnumOptions=} [properties] Properties to set\n         * @returns {google.protobuf.EnumOptions} EnumOptions instance\n         */\n\n        EnumOptions.create = function create(properties) {\n          return new EnumOptions(properties);\n        };\n        /**\n         * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        EnumOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.allowAlias != null && message.hasOwnProperty(\"allowAlias\")) writer.uint32(\n          /* id 2, wireType 0 =*/\n          16).bool(message.allowAlias);\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) writer.uint32(\n          /* id 3, wireType 0 =*/\n          24).bool(message.deprecated);\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes an EnumOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.EnumOptions} EnumOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        EnumOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.EnumOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 2:\n                message.allowAlias = reader.bool();\n                break;\n\n              case 3:\n                message.deprecated = reader.bool();\n                break;\n\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes an EnumOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.EnumOptions} EnumOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        EnumOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies an EnumOptions message.\n         * @function verify\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        EnumOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.allowAlias != null && message.hasOwnProperty(\"allowAlias\")) if (typeof message.allowAlias !== \"boolean\") return \"allowAlias: boolean expected\";\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) if (typeof message.deprecated !== \"boolean\") return \"deprecated: boolean expected\";\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.EnumOptions} EnumOptions\n         */\n\n\n        EnumOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.EnumOptions) return object;\n          var message = new $root.google.protobuf.EnumOptions();\n          if (object.allowAlias != null) message.allowAlias = Boolean(object.allowAlias);\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.EnumOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.EnumOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {google.protobuf.EnumOptions} message EnumOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        EnumOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (options.defaults) {\n            object.allowAlias = false;\n            object.deprecated = false;\n          }\n\n          if (message.allowAlias != null && message.hasOwnProperty(\"allowAlias\")) object.allowAlias = message.allowAlias;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this EnumOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.EnumOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        EnumOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return EnumOptions;\n      }();\n\n      protobuf.EnumValueOptions = function () {\n        /**\n         * Properties of an EnumValueOptions.\n         * @memberof google.protobuf\n         * @interface IEnumValueOptions\n         * @property {boolean|null} [deprecated] EnumValueOptions deprecated\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new EnumValueOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents an EnumValueOptions.\n         * @implements IEnumValueOptions\n         * @constructor\n         * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set\n         */\n        function EnumValueOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * EnumValueOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.EnumValueOptions\n         * @instance\n         */\n\n\n        EnumValueOptions.prototype.deprecated = false;\n        /**\n         * EnumValueOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.EnumValueOptions\n         * @instance\n         */\n\n        EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates a new EnumValueOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set\n         * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance\n         */\n\n        EnumValueOptions.create = function create(properties) {\n          return new EnumValueOptions(properties);\n        };\n        /**\n         * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        EnumValueOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) writer.uint32(\n          /* id 1, wireType 0 =*/\n          8).bool(message.deprecated);\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes an EnumValueOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        EnumValueOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.EnumValueOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.deprecated = reader.bool();\n                break;\n\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies an EnumValueOptions message.\n         * @function verify\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        EnumValueOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) if (typeof message.deprecated !== \"boolean\") return \"deprecated: boolean expected\";\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n         */\n\n\n        EnumValueOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.EnumValueOptions) return object;\n          var message = new $root.google.protobuf.EnumValueOptions();\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.EnumValueOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.EnumValueOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {google.protobuf.EnumValueOptions} message EnumValueOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        EnumValueOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n          if (options.defaults) object.deprecated = false;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this EnumValueOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.EnumValueOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        EnumValueOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return EnumValueOptions;\n      }();\n\n      protobuf.ServiceOptions = function () {\n        /**\n         * Properties of a ServiceOptions.\n         * @memberof google.protobuf\n         * @interface IServiceOptions\n         * @property {boolean|null} [deprecated] ServiceOptions deprecated\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption\n         * @property {string|null} [\".google.api.defaultHost\"] ServiceOptions .google.api.defaultHost\n         * @property {string|null} [\".google.api.oauthScopes\"] ServiceOptions .google.api.oauthScopes\n         */\n\n        /**\n         * Constructs a new ServiceOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a ServiceOptions.\n         * @implements IServiceOptions\n         * @constructor\n         * @param {google.protobuf.IServiceOptions=} [properties] Properties to set\n         */\n        function ServiceOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * ServiceOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         */\n\n\n        ServiceOptions.prototype.deprecated = false;\n        /**\n         * ServiceOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         */\n\n        ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * ServiceOptions .google.api.defaultHost.\n         * @member {string} .google.api.defaultHost\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         */\n\n        ServiceOptions.prototype[\".google.api.defaultHost\"] = \"\";\n        /**\n         * ServiceOptions .google.api.oauthScopes.\n         * @member {string} .google.api.oauthScopes\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         */\n\n        ServiceOptions.prototype[\".google.api.oauthScopes\"] = \"\";\n        /**\n         * Creates a new ServiceOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {google.protobuf.IServiceOptions=} [properties] Properties to set\n         * @returns {google.protobuf.ServiceOptions} ServiceOptions instance\n         */\n\n        ServiceOptions.create = function create(properties) {\n          return new ServiceOptions(properties);\n        };\n        /**\n         * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        ServiceOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) writer.uint32(\n          /* id 33, wireType 0 =*/\n          264).bool(message.deprecated);\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n          if (message[\".google.api.defaultHost\"] != null && message.hasOwnProperty(\".google.api.defaultHost\")) writer.uint32(\n          /* id 1049, wireType 2 =*/\n          8394).string(message[\".google.api.defaultHost\"]);\n          if (message[\".google.api.oauthScopes\"] != null && message.hasOwnProperty(\".google.api.oauthScopes\")) writer.uint32(\n          /* id 1050, wireType 2 =*/\n          8402).string(message[\".google.api.oauthScopes\"]);\n          return writer;\n        };\n        /**\n         * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a ServiceOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.ServiceOptions} ServiceOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        ServiceOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.ServiceOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 33:\n                message.deprecated = reader.bool();\n                break;\n\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              case 1049:\n                message[\".google.api.defaultHost\"] = reader.string();\n                break;\n\n              case 1050:\n                message[\".google.api.oauthScopes\"] = reader.string();\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.ServiceOptions} ServiceOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        ServiceOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a ServiceOptions message.\n         * @function verify\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        ServiceOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) if (typeof message.deprecated !== \"boolean\") return \"deprecated: boolean expected\";\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          if (message[\".google.api.defaultHost\"] != null && message.hasOwnProperty(\".google.api.defaultHost\")) if (!$util.isString(message[\".google.api.defaultHost\"])) return \".google.api.defaultHost: string expected\";\n          if (message[\".google.api.oauthScopes\"] != null && message.hasOwnProperty(\".google.api.oauthScopes\")) if (!$util.isString(message[\".google.api.oauthScopes\"])) return \".google.api.oauthScopes: string expected\";\n          return null;\n        };\n        /**\n         * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.ServiceOptions} ServiceOptions\n         */\n\n\n        ServiceOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.ServiceOptions) return object;\n          var message = new $root.google.protobuf.ServiceOptions();\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.ServiceOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.ServiceOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          if (object[\".google.api.defaultHost\"] != null) message[\".google.api.defaultHost\"] = String(object[\".google.api.defaultHost\"]);\n          if (object[\".google.api.oauthScopes\"] != null) message[\".google.api.oauthScopes\"] = String(object[\".google.api.oauthScopes\"]);\n          return message;\n        };\n        /**\n         * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {google.protobuf.ServiceOptions} message ServiceOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ServiceOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (options.defaults) {\n            object.deprecated = false;\n            object[\".google.api.defaultHost\"] = \"\";\n            object[\".google.api.oauthScopes\"] = \"\";\n          }\n\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          if (message[\".google.api.defaultHost\"] != null && message.hasOwnProperty(\".google.api.defaultHost\")) object[\".google.api.defaultHost\"] = message[\".google.api.defaultHost\"];\n          if (message[\".google.api.oauthScopes\"] != null && message.hasOwnProperty(\".google.api.oauthScopes\")) object[\".google.api.oauthScopes\"] = message[\".google.api.oauthScopes\"];\n          return object;\n        };\n        /**\n         * Converts this ServiceOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ServiceOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ServiceOptions;\n      }();\n\n      protobuf.MethodOptions = function () {\n        /**\n         * Properties of a MethodOptions.\n         * @memberof google.protobuf\n         * @interface IMethodOptions\n         * @property {boolean|null} [deprecated] MethodOptions deprecated\n         * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption\n         * @property {google.api.IHttpRule|null} [\".google.api.http\"] MethodOptions .google.api.http\n         * @property {Array.<string>|null} [\".google.api.methodSignature\"] MethodOptions .google.api.methodSignature\n         */\n\n        /**\n         * Constructs a new MethodOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a MethodOptions.\n         * @implements IMethodOptions\n         * @constructor\n         * @param {google.protobuf.IMethodOptions=} [properties] Properties to set\n         */\n        function MethodOptions(properties) {\n          this.uninterpretedOption = [];\n          this[\".google.api.methodSignature\"] = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * MethodOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n\n        MethodOptions.prototype.deprecated = false;\n        /**\n         * MethodOptions idempotencyLevel.\n         * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n        MethodOptions.prototype.idempotencyLevel = 0;\n        /**\n         * MethodOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n        MethodOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * MethodOptions .google.api.http.\n         * @member {google.api.IHttpRule|null|undefined} .google.api.http\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n        MethodOptions.prototype[\".google.api.http\"] = null;\n        /**\n         * MethodOptions .google.api.methodSignature.\n         * @member {Array.<string>} .google.api.methodSignature\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n        MethodOptions.prototype[\".google.api.methodSignature\"] = $util.emptyArray;\n        /**\n         * Creates a new MethodOptions instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {google.protobuf.IMethodOptions=} [properties] Properties to set\n         * @returns {google.protobuf.MethodOptions} MethodOptions instance\n         */\n\n        MethodOptions.create = function create(properties) {\n          return new MethodOptions(properties);\n        };\n        /**\n         * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        MethodOptions.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) writer.uint32(\n          /* id 33, wireType 0 =*/\n          264).bool(message.deprecated);\n          if (message.idempotencyLevel != null && message.hasOwnProperty(\"idempotencyLevel\")) writer.uint32(\n          /* id 34, wireType 0 =*/\n          272).int32(message.idempotencyLevel);\n          if (message.uninterpretedOption != null && message.uninterpretedOption.length) for (var i = 0; i < message.uninterpretedOption.length; ++i) $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(\n          /* id 999, wireType 2 =*/\n          7994).fork()).ldelim();\n          if (message[\".google.api.methodSignature\"] != null && message[\".google.api.methodSignature\"].length) for (var i = 0; i < message[\".google.api.methodSignature\"].length; ++i) writer.uint32(\n          /* id 1051, wireType 2 =*/\n          8410).string(message[\".google.api.methodSignature\"][i]);\n          if (message[\".google.api.http\"] != null && message.hasOwnProperty(\".google.api.http\")) $root.google.api.HttpRule.encode(message[\".google.api.http\"], writer.uint32(\n          /* id 72295728, wireType 2 =*/\n          578365826).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a MethodOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.MethodOptions} MethodOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        MethodOptions.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.MethodOptions();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 33:\n                message.deprecated = reader.bool();\n                break;\n\n              case 34:\n                message.idempotencyLevel = reader.int32();\n                break;\n\n              case 999:\n                if (!(message.uninterpretedOption && message.uninterpretedOption.length)) message.uninterpretedOption = [];\n                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                break;\n\n              case 72295728:\n                message[\".google.api.http\"] = $root.google.api.HttpRule.decode(reader, reader.uint32());\n                break;\n\n              case 1051:\n                if (!(message[\".google.api.methodSignature\"] && message[\".google.api.methodSignature\"].length)) message[\".google.api.methodSignature\"] = [];\n                message[\".google.api.methodSignature\"].push(reader.string());\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a MethodOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.MethodOptions} MethodOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        MethodOptions.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a MethodOptions message.\n         * @function verify\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        MethodOptions.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) if (typeof message.deprecated !== \"boolean\") return \"deprecated: boolean expected\";\n          if (message.idempotencyLevel != null && message.hasOwnProperty(\"idempotencyLevel\")) switch (message.idempotencyLevel) {\n            default:\n              return \"idempotencyLevel: enum value expected\";\n\n            case 0:\n            case 1:\n            case 2:\n              break;\n          }\n\n          if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n            if (!Array.isArray(message.uninterpretedOption)) return \"uninterpretedOption: array expected\";\n\n            for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n              if (error) return \"uninterpretedOption.\" + error;\n            }\n          }\n\n          if (message[\".google.api.http\"] != null && message.hasOwnProperty(\".google.api.http\")) {\n            var error = $root.google.api.HttpRule.verify(message[\".google.api.http\"]);\n            if (error) return \".google.api.http.\" + error;\n          }\n\n          if (message[\".google.api.methodSignature\"] != null && message.hasOwnProperty(\".google.api.methodSignature\")) {\n            if (!Array.isArray(message[\".google.api.methodSignature\"])) return \".google.api.methodSignature: array expected\";\n\n            for (var i = 0; i < message[\".google.api.methodSignature\"].length; ++i) if (!$util.isString(message[\".google.api.methodSignature\"][i])) return \".google.api.methodSignature: string[] expected\";\n          }\n\n          return null;\n        };\n        /**\n         * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.MethodOptions} MethodOptions\n         */\n\n\n        MethodOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.MethodOptions) return object;\n          var message = new $root.google.protobuf.MethodOptions();\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n\n          switch (object.idempotencyLevel) {\n            case \"IDEMPOTENCY_UNKNOWN\":\n            case 0:\n              message.idempotencyLevel = 0;\n              break;\n\n            case \"NO_SIDE_EFFECTS\":\n            case 1:\n              message.idempotencyLevel = 1;\n              break;\n\n            case \"IDEMPOTENT\":\n            case 2:\n              message.idempotencyLevel = 2;\n              break;\n          }\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.MethodOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.MethodOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          if (object[\".google.api.http\"] != null) {\n            if (typeof object[\".google.api.http\"] !== \"object\") throw TypeError(\".google.protobuf.MethodOptions..google.api.http: object expected\");\n            message[\".google.api.http\"] = $root.google.api.HttpRule.fromObject(object[\".google.api.http\"]);\n          }\n\n          if (object[\".google.api.methodSignature\"]) {\n            if (!Array.isArray(object[\".google.api.methodSignature\"])) throw TypeError(\".google.protobuf.MethodOptions..google.api.methodSignature: array expected\");\n            message[\".google.api.methodSignature\"] = [];\n\n            for (var i = 0; i < object[\".google.api.methodSignature\"].length; ++i) message[\".google.api.methodSignature\"][i] = String(object[\".google.api.methodSignature\"][i]);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {google.protobuf.MethodOptions} message MethodOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        MethodOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.uninterpretedOption = [];\n            object[\".google.api.methodSignature\"] = [];\n          }\n\n          if (options.defaults) {\n            object.deprecated = false;\n            object.idempotencyLevel = options.enums === String ? \"IDEMPOTENCY_UNKNOWN\" : 0;\n            object[\".google.api.http\"] = null;\n          }\n\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n          if (message.idempotencyLevel != null && message.hasOwnProperty(\"idempotencyLevel\")) object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n          }\n\n          if (message[\".google.api.methodSignature\"] && message[\".google.api.methodSignature\"].length) {\n            object[\".google.api.methodSignature\"] = [];\n\n            for (var j = 0; j < message[\".google.api.methodSignature\"].length; ++j) object[\".google.api.methodSignature\"][j] = message[\".google.api.methodSignature\"][j];\n          }\n\n          if (message[\".google.api.http\"] != null && message.hasOwnProperty(\".google.api.http\")) object[\".google.api.http\"] = $root.google.api.HttpRule.toObject(message[\".google.api.http\"], options);\n          return object;\n        };\n        /**\n         * Converts this MethodOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        MethodOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        /**\n         * IdempotencyLevel enum.\n         * @name google.protobuf.MethodOptions.IdempotencyLevel\n         * @enum {string}\n         * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value\n         * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value\n         * @property {number} IDEMPOTENT=2 IDEMPOTENT value\n         */\n\n\n        MethodOptions.IdempotencyLevel = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[0] = \"IDEMPOTENCY_UNKNOWN\"] = 0;\n          values[valuesById[1] = \"NO_SIDE_EFFECTS\"] = 1;\n          values[valuesById[2] = \"IDEMPOTENT\"] = 2;\n          return values;\n        }();\n\n        return MethodOptions;\n      }();\n\n      protobuf.UninterpretedOption = function () {\n        /**\n         * Properties of an UninterpretedOption.\n         * @memberof google.protobuf\n         * @interface IUninterpretedOption\n         * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name\n         * @property {string|null} [identifierValue] UninterpretedOption identifierValue\n         * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue\n         * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue\n         * @property {number|null} [doubleValue] UninterpretedOption doubleValue\n         * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue\n         * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue\n         */\n\n        /**\n         * Constructs a new UninterpretedOption.\n         * @memberof google.protobuf\n         * @classdesc Represents an UninterpretedOption.\n         * @implements IUninterpretedOption\n         * @constructor\n         * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set\n         */\n        function UninterpretedOption(properties) {\n          this.name = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * UninterpretedOption name.\n         * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n\n        UninterpretedOption.prototype.name = $util.emptyArray;\n        /**\n         * UninterpretedOption identifierValue.\n         * @member {string} identifierValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.identifierValue = \"\";\n        /**\n         * UninterpretedOption positiveIntValue.\n         * @member {number|Long} positiveIntValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n        /**\n         * UninterpretedOption negativeIntValue.\n         * @member {number|Long} negativeIntValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n        /**\n         * UninterpretedOption doubleValue.\n         * @member {number} doubleValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.doubleValue = 0;\n        /**\n         * UninterpretedOption stringValue.\n         * @member {Uint8Array} stringValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.stringValue = $util.newBuffer([]);\n        /**\n         * UninterpretedOption aggregateValue.\n         * @member {string} aggregateValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.aggregateValue = \"\";\n        /**\n         * Creates a new UninterpretedOption instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set\n         * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance\n         */\n\n        UninterpretedOption.create = function create(properties) {\n          return new UninterpretedOption(properties);\n        };\n        /**\n         * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        UninterpretedOption.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.name != null && message.name.length) for (var i = 0; i < message.name.length; ++i) $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(\n          /* id 2, wireType 2 =*/\n          18).fork()).ldelim();\n          if (message.identifierValue != null && message.hasOwnProperty(\"identifierValue\")) writer.uint32(\n          /* id 3, wireType 2 =*/\n          26).string(message.identifierValue);\n          if (message.positiveIntValue != null && message.hasOwnProperty(\"positiveIntValue\")) writer.uint32(\n          /* id 4, wireType 0 =*/\n          32).uint64(message.positiveIntValue);\n          if (message.negativeIntValue != null && message.hasOwnProperty(\"negativeIntValue\")) writer.uint32(\n          /* id 5, wireType 0 =*/\n          40).int64(message.negativeIntValue);\n          if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\")) writer.uint32(\n          /* id 6, wireType 1 =*/\n          49).double(message.doubleValue);\n          if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) writer.uint32(\n          /* id 7, wireType 2 =*/\n          58).bytes(message.stringValue);\n          if (message.aggregateValue != null && message.hasOwnProperty(\"aggregateValue\")) writer.uint32(\n          /* id 8, wireType 2 =*/\n          66).string(message.aggregateValue);\n          return writer;\n        };\n        /**\n         * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes an UninterpretedOption message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        UninterpretedOption.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.UninterpretedOption();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 2:\n                if (!(message.name && message.name.length)) message.name = [];\n                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));\n                break;\n\n              case 3:\n                message.identifierValue = reader.string();\n                break;\n\n              case 4:\n                message.positiveIntValue = reader.uint64();\n                break;\n\n              case 5:\n                message.negativeIntValue = reader.int64();\n                break;\n\n              case 6:\n                message.doubleValue = reader.double();\n                break;\n\n              case 7:\n                message.stringValue = reader.bytes();\n                break;\n\n              case 8:\n                message.aggregateValue = reader.string();\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies an UninterpretedOption message.\n         * @function verify\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        UninterpretedOption.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) {\n            if (!Array.isArray(message.name)) return \"name: array expected\";\n\n            for (var i = 0; i < message.name.length; ++i) {\n              var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);\n              if (error) return \"name.\" + error;\n            }\n          }\n\n          if (message.identifierValue != null && message.hasOwnProperty(\"identifierValue\")) if (!$util.isString(message.identifierValue)) return \"identifierValue: string expected\";\n          if (message.positiveIntValue != null && message.hasOwnProperty(\"positiveIntValue\")) if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high))) return \"positiveIntValue: integer|Long expected\";\n          if (message.negativeIntValue != null && message.hasOwnProperty(\"negativeIntValue\")) if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high))) return \"negativeIntValue: integer|Long expected\";\n          if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\")) if (typeof message.doubleValue !== \"number\") return \"doubleValue: number expected\";\n          if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) if (!(message.stringValue && typeof message.stringValue.length === \"number\" || $util.isString(message.stringValue))) return \"stringValue: buffer expected\";\n          if (message.aggregateValue != null && message.hasOwnProperty(\"aggregateValue\")) if (!$util.isString(message.aggregateValue)) return \"aggregateValue: string expected\";\n          return null;\n        };\n        /**\n         * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n         */\n\n\n        UninterpretedOption.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.UninterpretedOption) return object;\n          var message = new $root.google.protobuf.UninterpretedOption();\n\n          if (object.name) {\n            if (!Array.isArray(object.name)) throw TypeError(\".google.protobuf.UninterpretedOption.name: array expected\");\n            message.name = [];\n\n            for (var i = 0; i < object.name.length; ++i) {\n              if (typeof object.name[i] !== \"object\") throw TypeError(\".google.protobuf.UninterpretedOption.name: object expected\");\n              message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);\n            }\n          }\n\n          if (object.identifierValue != null) message.identifierValue = String(object.identifierValue);\n          if (object.positiveIntValue != null) if ($util.Long) (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;else if (typeof object.positiveIntValue === \"string\") message.positiveIntValue = parseInt(object.positiveIntValue, 10);else if (typeof object.positiveIntValue === \"number\") message.positiveIntValue = object.positiveIntValue;else if (typeof object.positiveIntValue === \"object\") message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);\n          if (object.negativeIntValue != null) if ($util.Long) (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;else if (typeof object.negativeIntValue === \"string\") message.negativeIntValue = parseInt(object.negativeIntValue, 10);else if (typeof object.negativeIntValue === \"number\") message.negativeIntValue = object.negativeIntValue;else if (typeof object.negativeIntValue === \"object\") message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();\n          if (object.doubleValue != null) message.doubleValue = Number(object.doubleValue);\n          if (object.stringValue != null) if (typeof object.stringValue === \"string\") $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);else if (object.stringValue.length) message.stringValue = object.stringValue;\n          if (object.aggregateValue != null) message.aggregateValue = String(object.aggregateValue);\n          return message;\n        };\n        /**\n         * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {google.protobuf.UninterpretedOption} message UninterpretedOption\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        UninterpretedOption.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.name = [];\n\n          if (options.defaults) {\n            object.identifierValue = \"\";\n\n            if ($util.Long) {\n              var long = new $util.Long(0, 0, true);\n              object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else object.positiveIntValue = options.longs === String ? \"0\" : 0;\n\n            if ($util.Long) {\n              var long = new $util.Long(0, 0, false);\n              object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else object.negativeIntValue = options.longs === String ? \"0\" : 0;\n\n            object.doubleValue = 0;\n            if (options.bytes === String) object.stringValue = \"\";else {\n              object.stringValue = [];\n              if (options.bytes !== Array) object.stringValue = $util.newBuffer(object.stringValue);\n            }\n            object.aggregateValue = \"\";\n          }\n\n          if (message.name && message.name.length) {\n            object.name = [];\n\n            for (var j = 0; j < message.name.length; ++j) object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);\n          }\n\n          if (message.identifierValue != null && message.hasOwnProperty(\"identifierValue\")) object.identifierValue = message.identifierValue;\n          if (message.positiveIntValue != null && message.hasOwnProperty(\"positiveIntValue\")) if (typeof message.positiveIntValue === \"number\") object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;else object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;\n          if (message.negativeIntValue != null && message.hasOwnProperty(\"negativeIntValue\")) if (typeof message.negativeIntValue === \"number\") object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;else object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;\n          if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\")) object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n          if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;\n          if (message.aggregateValue != null && message.hasOwnProperty(\"aggregateValue\")) object.aggregateValue = message.aggregateValue;\n          return object;\n        };\n        /**\n         * Converts this UninterpretedOption to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        UninterpretedOption.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        UninterpretedOption.NamePart = function () {\n          /**\n           * Properties of a NamePart.\n           * @memberof google.protobuf.UninterpretedOption\n           * @interface INamePart\n           * @property {string} namePart NamePart namePart\n           * @property {boolean} isExtension NamePart isExtension\n           */\n\n          /**\n           * Constructs a new NamePart.\n           * @memberof google.protobuf.UninterpretedOption\n           * @classdesc Represents a NamePart.\n           * @implements INamePart\n           * @constructor\n           * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set\n           */\n          function NamePart(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n          /**\n           * NamePart namePart.\n           * @member {string} namePart\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @instance\n           */\n\n\n          NamePart.prototype.namePart = \"\";\n          /**\n           * NamePart isExtension.\n           * @member {boolean} isExtension\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @instance\n           */\n\n          NamePart.prototype.isExtension = false;\n          /**\n           * Creates a new NamePart instance using the specified properties.\n           * @function create\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set\n           * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance\n           */\n\n          NamePart.create = function create(properties) {\n            return new NamePart(properties);\n          };\n          /**\n           * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.\n           * @function encode\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          NamePart.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n            writer.uint32(\n            /* id 1, wireType 2 =*/\n            10).string(message.namePart);\n            writer.uint32(\n            /* id 2, wireType 0 =*/\n            16).bool(message.isExtension);\n            return writer;\n          };\n          /**\n           * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.\n           * @function encodeDelimited\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          NamePart.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n          };\n          /**\n           * Decodes a NamePart message from the specified reader or buffer.\n           * @function decode\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @param {number} [length] Message length if known beforehand\n           * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          NamePart.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.google.protobuf.UninterpretedOption.NamePart();\n\n            while (reader.pos < end) {\n              var tag = reader.uint32();\n\n              switch (tag >>> 3) {\n                case 1:\n                  message.namePart = reader.string();\n                  break;\n\n                case 2:\n                  message.isExtension = reader.bool();\n                  break;\n\n                default:\n                  reader.skipType(tag & 7);\n                  break;\n              }\n            }\n\n            if (!message.hasOwnProperty(\"namePart\")) throw $util.ProtocolError(\"missing required 'namePart'\", {\n              instance: message\n            });\n            if (!message.hasOwnProperty(\"isExtension\")) throw $util.ProtocolError(\"missing required 'isExtension'\", {\n              instance: message\n            });\n            return message;\n          };\n          /**\n           * Decodes a NamePart message from the specified reader or buffer, length delimited.\n           * @function decodeDelimited\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          NamePart.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n          };\n          /**\n           * Verifies a NamePart message.\n           * @function verify\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {Object.<string,*>} message Plain object to verify\n           * @returns {string|null} `null` if valid, otherwise the reason why it is not\n           */\n\n\n          NamePart.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null) return \"object expected\";\n            if (!$util.isString(message.namePart)) return \"namePart: string expected\";\n            if (typeof message.isExtension !== \"boolean\") return \"isExtension: boolean expected\";\n            return null;\n          };\n          /**\n           * Creates a NamePart message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n           */\n\n\n          NamePart.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart) return object;\n            var message = new $root.google.protobuf.UninterpretedOption.NamePart();\n            if (object.namePart != null) message.namePart = String(object.namePart);\n            if (object.isExtension != null) message.isExtension = Boolean(object.isExtension);\n            return message;\n          };\n          /**\n           * Creates a plain object from a NamePart message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          NamePart.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.namePart = \"\";\n              object.isExtension = false;\n            }\n\n            if (message.namePart != null && message.hasOwnProperty(\"namePart\")) object.namePart = message.namePart;\n            if (message.isExtension != null && message.hasOwnProperty(\"isExtension\")) object.isExtension = message.isExtension;\n            return object;\n          };\n          /**\n           * Converts this NamePart to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          NamePart.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return NamePart;\n        }();\n\n        return UninterpretedOption;\n      }();\n\n      protobuf.SourceCodeInfo = function () {\n        /**\n         * Properties of a SourceCodeInfo.\n         * @memberof google.protobuf\n         * @interface ISourceCodeInfo\n         * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location\n         */\n\n        /**\n         * Constructs a new SourceCodeInfo.\n         * @memberof google.protobuf\n         * @classdesc Represents a SourceCodeInfo.\n         * @implements ISourceCodeInfo\n         * @constructor\n         * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set\n         */\n        function SourceCodeInfo(properties) {\n          this.location = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * SourceCodeInfo location.\n         * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location\n         * @memberof google.protobuf.SourceCodeInfo\n         * @instance\n         */\n\n\n        SourceCodeInfo.prototype.location = $util.emptyArray;\n        /**\n         * Creates a new SourceCodeInfo instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set\n         * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance\n         */\n\n        SourceCodeInfo.create = function create(properties) {\n          return new SourceCodeInfo(properties);\n        };\n        /**\n         * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        SourceCodeInfo.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.location != null && message.location.length) for (var i = 0; i < message.location.length; ++i) $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a SourceCodeInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        SourceCodeInfo.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.SourceCodeInfo();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                if (!(message.location && message.location.length)) message.location = [];\n                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a SourceCodeInfo message.\n         * @function verify\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        SourceCodeInfo.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n          if (message.location != null && message.hasOwnProperty(\"location\")) {\n            if (!Array.isArray(message.location)) return \"location: array expected\";\n\n            for (var i = 0; i < message.location.length; ++i) {\n              var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);\n              if (error) return \"location.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n         */\n\n\n        SourceCodeInfo.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.SourceCodeInfo) return object;\n          var message = new $root.google.protobuf.SourceCodeInfo();\n\n          if (object.location) {\n            if (!Array.isArray(object.location)) throw TypeError(\".google.protobuf.SourceCodeInfo.location: array expected\");\n            message.location = [];\n\n            for (var i = 0; i < object.location.length; ++i) {\n              if (typeof object.location[i] !== \"object\") throw TypeError(\".google.protobuf.SourceCodeInfo.location: object expected\");\n              message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        SourceCodeInfo.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.location = [];\n\n          if (message.location && message.location.length) {\n            object.location = [];\n\n            for (var j = 0; j < message.location.length; ++j) object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this SourceCodeInfo to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.SourceCodeInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        SourceCodeInfo.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        SourceCodeInfo.Location = function () {\n          /**\n           * Properties of a Location.\n           * @memberof google.protobuf.SourceCodeInfo\n           * @interface ILocation\n           * @property {Array.<number>|null} [path] Location path\n           * @property {Array.<number>|null} [span] Location span\n           * @property {string|null} [leadingComments] Location leadingComments\n           * @property {string|null} [trailingComments] Location trailingComments\n           * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments\n           */\n\n          /**\n           * Constructs a new Location.\n           * @memberof google.protobuf.SourceCodeInfo\n           * @classdesc Represents a Location.\n           * @implements ILocation\n           * @constructor\n           * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set\n           */\n          function Location(properties) {\n            this.path = [];\n            this.span = [];\n            this.leadingDetachedComments = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n          /**\n           * Location path.\n           * @member {Array.<number>} path\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n\n          Location.prototype.path = $util.emptyArray;\n          /**\n           * Location span.\n           * @member {Array.<number>} span\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n          Location.prototype.span = $util.emptyArray;\n          /**\n           * Location leadingComments.\n           * @member {string} leadingComments\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n          Location.prototype.leadingComments = \"\";\n          /**\n           * Location trailingComments.\n           * @member {string} trailingComments\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n          Location.prototype.trailingComments = \"\";\n          /**\n           * Location leadingDetachedComments.\n           * @member {Array.<string>} leadingDetachedComments\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n          Location.prototype.leadingDetachedComments = $util.emptyArray;\n          /**\n           * Creates a new Location instance using the specified properties.\n           * @function create\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set\n           * @returns {google.protobuf.SourceCodeInfo.Location} Location instance\n           */\n\n          Location.create = function create(properties) {\n            return new Location(properties);\n          };\n          /**\n           * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.\n           * @function encode\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          Location.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n\n            if (message.path != null && message.path.length) {\n              writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork();\n\n              for (var i = 0; i < message.path.length; ++i) writer.int32(message.path[i]);\n\n              writer.ldelim();\n            }\n\n            if (message.span != null && message.span.length) {\n              writer.uint32(\n              /* id 2, wireType 2 =*/\n              18).fork();\n\n              for (var i = 0; i < message.span.length; ++i) writer.int32(message.span[i]);\n\n              writer.ldelim();\n            }\n\n            if (message.leadingComments != null && message.hasOwnProperty(\"leadingComments\")) writer.uint32(\n            /* id 3, wireType 2 =*/\n            26).string(message.leadingComments);\n            if (message.trailingComments != null && message.hasOwnProperty(\"trailingComments\")) writer.uint32(\n            /* id 4, wireType 2 =*/\n            34).string(message.trailingComments);\n            if (message.leadingDetachedComments != null && message.leadingDetachedComments.length) for (var i = 0; i < message.leadingDetachedComments.length; ++i) writer.uint32(\n            /* id 6, wireType 2 =*/\n            50).string(message.leadingDetachedComments[i]);\n            return writer;\n          };\n          /**\n           * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.\n           * @function encodeDelimited\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          Location.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n          };\n          /**\n           * Decodes a Location message from the specified reader or buffer.\n           * @function decode\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @param {number} [length] Message length if known beforehand\n           * @returns {google.protobuf.SourceCodeInfo.Location} Location\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          Location.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.google.protobuf.SourceCodeInfo.Location();\n\n            while (reader.pos < end) {\n              var tag = reader.uint32();\n\n              switch (tag >>> 3) {\n                case 1:\n                  if (!(message.path && message.path.length)) message.path = [];\n\n                  if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n\n                    while (reader.pos < end2) message.path.push(reader.int32());\n                  } else message.path.push(reader.int32());\n\n                  break;\n\n                case 2:\n                  if (!(message.span && message.span.length)) message.span = [];\n\n                  if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n\n                    while (reader.pos < end2) message.span.push(reader.int32());\n                  } else message.span.push(reader.int32());\n\n                  break;\n\n                case 3:\n                  message.leadingComments = reader.string();\n                  break;\n\n                case 4:\n                  message.trailingComments = reader.string();\n                  break;\n\n                case 6:\n                  if (!(message.leadingDetachedComments && message.leadingDetachedComments.length)) message.leadingDetachedComments = [];\n                  message.leadingDetachedComments.push(reader.string());\n                  break;\n\n                default:\n                  reader.skipType(tag & 7);\n                  break;\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Decodes a Location message from the specified reader or buffer, length delimited.\n           * @function decodeDelimited\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @returns {google.protobuf.SourceCodeInfo.Location} Location\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          Location.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n          };\n          /**\n           * Verifies a Location message.\n           * @function verify\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {Object.<string,*>} message Plain object to verify\n           * @returns {string|null} `null` if valid, otherwise the reason why it is not\n           */\n\n\n          Location.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n            if (message.path != null && message.hasOwnProperty(\"path\")) {\n              if (!Array.isArray(message.path)) return \"path: array expected\";\n\n              for (var i = 0; i < message.path.length; ++i) if (!$util.isInteger(message.path[i])) return \"path: integer[] expected\";\n            }\n\n            if (message.span != null && message.hasOwnProperty(\"span\")) {\n              if (!Array.isArray(message.span)) return \"span: array expected\";\n\n              for (var i = 0; i < message.span.length; ++i) if (!$util.isInteger(message.span[i])) return \"span: integer[] expected\";\n            }\n\n            if (message.leadingComments != null && message.hasOwnProperty(\"leadingComments\")) if (!$util.isString(message.leadingComments)) return \"leadingComments: string expected\";\n            if (message.trailingComments != null && message.hasOwnProperty(\"trailingComments\")) if (!$util.isString(message.trailingComments)) return \"trailingComments: string expected\";\n\n            if (message.leadingDetachedComments != null && message.hasOwnProperty(\"leadingDetachedComments\")) {\n              if (!Array.isArray(message.leadingDetachedComments)) return \"leadingDetachedComments: array expected\";\n\n              for (var i = 0; i < message.leadingDetachedComments.length; ++i) if (!$util.isString(message.leadingDetachedComments[i])) return \"leadingDetachedComments: string[] expected\";\n            }\n\n            return null;\n          };\n          /**\n           * Creates a Location message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.SourceCodeInfo.Location} Location\n           */\n\n\n          Location.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.SourceCodeInfo.Location) return object;\n            var message = new $root.google.protobuf.SourceCodeInfo.Location();\n\n            if (object.path) {\n              if (!Array.isArray(object.path)) throw TypeError(\".google.protobuf.SourceCodeInfo.Location.path: array expected\");\n              message.path = [];\n\n              for (var i = 0; i < object.path.length; ++i) message.path[i] = object.path[i] | 0;\n            }\n\n            if (object.span) {\n              if (!Array.isArray(object.span)) throw TypeError(\".google.protobuf.SourceCodeInfo.Location.span: array expected\");\n              message.span = [];\n\n              for (var i = 0; i < object.span.length; ++i) message.span[i] = object.span[i] | 0;\n            }\n\n            if (object.leadingComments != null) message.leadingComments = String(object.leadingComments);\n            if (object.trailingComments != null) message.trailingComments = String(object.trailingComments);\n\n            if (object.leadingDetachedComments) {\n              if (!Array.isArray(object.leadingDetachedComments)) throw TypeError(\".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected\");\n              message.leadingDetachedComments = [];\n\n              for (var i = 0; i < object.leadingDetachedComments.length; ++i) message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a Location message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {google.protobuf.SourceCodeInfo.Location} message Location\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Location.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.arrays || options.defaults) {\n              object.path = [];\n              object.span = [];\n              object.leadingDetachedComments = [];\n            }\n\n            if (options.defaults) {\n              object.leadingComments = \"\";\n              object.trailingComments = \"\";\n            }\n\n            if (message.path && message.path.length) {\n              object.path = [];\n\n              for (var j = 0; j < message.path.length; ++j) object.path[j] = message.path[j];\n            }\n\n            if (message.span && message.span.length) {\n              object.span = [];\n\n              for (var j = 0; j < message.span.length; ++j) object.span[j] = message.span[j];\n            }\n\n            if (message.leadingComments != null && message.hasOwnProperty(\"leadingComments\")) object.leadingComments = message.leadingComments;\n            if (message.trailingComments != null && message.hasOwnProperty(\"trailingComments\")) object.trailingComments = message.trailingComments;\n\n            if (message.leadingDetachedComments && message.leadingDetachedComments.length) {\n              object.leadingDetachedComments = [];\n\n              for (var j = 0; j < message.leadingDetachedComments.length; ++j) object.leadingDetachedComments[j] = message.leadingDetachedComments[j];\n            }\n\n            return object;\n          };\n          /**\n           * Converts this Location to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Location.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Location;\n        }();\n\n        return SourceCodeInfo;\n      }();\n\n      protobuf.GeneratedCodeInfo = function () {\n        /**\n         * Properties of a GeneratedCodeInfo.\n         * @memberof google.protobuf\n         * @interface IGeneratedCodeInfo\n         * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation\n         */\n\n        /**\n         * Constructs a new GeneratedCodeInfo.\n         * @memberof google.protobuf\n         * @classdesc Represents a GeneratedCodeInfo.\n         * @implements IGeneratedCodeInfo\n         * @constructor\n         * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set\n         */\n        function GeneratedCodeInfo(properties) {\n          this.annotation = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * GeneratedCodeInfo annotation.\n         * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @instance\n         */\n\n\n        GeneratedCodeInfo.prototype.annotation = $util.emptyArray;\n        /**\n         * Creates a new GeneratedCodeInfo instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set\n         * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance\n         */\n\n        GeneratedCodeInfo.create = function create(properties) {\n          return new GeneratedCodeInfo(properties);\n        };\n        /**\n         * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        GeneratedCodeInfo.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.annotation != null && message.annotation.length) for (var i = 0; i < message.annotation.length; ++i) $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(\n          /* id 1, wireType 2 =*/\n          10).fork()).ldelim();\n          return writer;\n        };\n        /**\n         * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a GeneratedCodeInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        GeneratedCodeInfo.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.GeneratedCodeInfo();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                if (!(message.annotation && message.annotation.length)) message.annotation = [];\n                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a GeneratedCodeInfo message.\n         * @function verify\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        GeneratedCodeInfo.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n          if (message.annotation != null && message.hasOwnProperty(\"annotation\")) {\n            if (!Array.isArray(message.annotation)) return \"annotation: array expected\";\n\n            for (var i = 0; i < message.annotation.length; ++i) {\n              var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);\n              if (error) return \"annotation.\" + error;\n            }\n          }\n\n          return null;\n        };\n        /**\n         * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n         */\n\n\n        GeneratedCodeInfo.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.GeneratedCodeInfo) return object;\n          var message = new $root.google.protobuf.GeneratedCodeInfo();\n\n          if (object.annotation) {\n            if (!Array.isArray(object.annotation)) throw TypeError(\".google.protobuf.GeneratedCodeInfo.annotation: array expected\");\n            message.annotation = [];\n\n            for (var i = 0; i < object.annotation.length; ++i) {\n              if (typeof object.annotation[i] !== \"object\") throw TypeError(\".google.protobuf.GeneratedCodeInfo.annotation: object expected\");\n              message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        GeneratedCodeInfo.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.annotation = [];\n\n          if (message.annotation && message.annotation.length) {\n            object.annotation = [];\n\n            for (var j = 0; j < message.annotation.length; ++j) object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);\n          }\n\n          return object;\n        };\n        /**\n         * Converts this GeneratedCodeInfo to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        GeneratedCodeInfo.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        GeneratedCodeInfo.Annotation = function () {\n          /**\n           * Properties of an Annotation.\n           * @memberof google.protobuf.GeneratedCodeInfo\n           * @interface IAnnotation\n           * @property {Array.<number>|null} [path] Annotation path\n           * @property {string|null} [sourceFile] Annotation sourceFile\n           * @property {number|null} [begin] Annotation begin\n           * @property {number|null} [end] Annotation end\n           */\n\n          /**\n           * Constructs a new Annotation.\n           * @memberof google.protobuf.GeneratedCodeInfo\n           * @classdesc Represents an Annotation.\n           * @implements IAnnotation\n           * @constructor\n           * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set\n           */\n          function Annotation(properties) {\n            this.path = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n          /**\n           * Annotation path.\n           * @member {Array.<number>} path\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           */\n\n\n          Annotation.prototype.path = $util.emptyArray;\n          /**\n           * Annotation sourceFile.\n           * @member {string} sourceFile\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           */\n\n          Annotation.prototype.sourceFile = \"\";\n          /**\n           * Annotation begin.\n           * @member {number} begin\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           */\n\n          Annotation.prototype.begin = 0;\n          /**\n           * Annotation end.\n           * @member {number} end\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           */\n\n          Annotation.prototype.end = 0;\n          /**\n           * Creates a new Annotation instance using the specified properties.\n           * @function create\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set\n           * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance\n           */\n\n          Annotation.create = function create(properties) {\n            return new Annotation(properties);\n          };\n          /**\n           * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.\n           * @function encode\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          Annotation.encode = function encode(message, writer) {\n            if (!writer) writer = $Writer.create();\n\n            if (message.path != null && message.path.length) {\n              writer.uint32(\n              /* id 1, wireType 2 =*/\n              10).fork();\n\n              for (var i = 0; i < message.path.length; ++i) writer.int32(message.path[i]);\n\n              writer.ldelim();\n            }\n\n            if (message.sourceFile != null && message.hasOwnProperty(\"sourceFile\")) writer.uint32(\n            /* id 2, wireType 2 =*/\n            18).string(message.sourceFile);\n            if (message.begin != null && message.hasOwnProperty(\"begin\")) writer.uint32(\n            /* id 3, wireType 0 =*/\n            24).int32(message.begin);\n            if (message.end != null && message.hasOwnProperty(\"end\")) writer.uint32(\n            /* id 4, wireType 0 =*/\n            32).int32(message.end);\n            return writer;\n          };\n          /**\n           * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.\n           * @function encodeDelimited\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode\n           * @param {$protobuf.Writer} [writer] Writer to encode to\n           * @returns {$protobuf.Writer} Writer\n           */\n\n\n          Annotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n          };\n          /**\n           * Decodes an Annotation message from the specified reader or buffer.\n           * @function decode\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @param {number} [length] Message length if known beforehand\n           * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          Annotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length,\n                message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();\n\n            while (reader.pos < end) {\n              var tag = reader.uint32();\n\n              switch (tag >>> 3) {\n                case 1:\n                  if (!(message.path && message.path.length)) message.path = [];\n\n                  if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n\n                    while (reader.pos < end2) message.path.push(reader.int32());\n                  } else message.path.push(reader.int32());\n\n                  break;\n\n                case 2:\n                  message.sourceFile = reader.string();\n                  break;\n\n                case 3:\n                  message.begin = reader.int32();\n                  break;\n\n                case 4:\n                  message.end = reader.int32();\n                  break;\n\n                default:\n                  reader.skipType(tag & 7);\n                  break;\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Decodes an Annotation message from the specified reader or buffer, length delimited.\n           * @function decodeDelimited\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n           * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n           * @throws {Error} If the payload is not a reader or valid buffer\n           * @throws {$protobuf.util.ProtocolError} If required fields are missing\n           */\n\n\n          Annotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n          };\n          /**\n           * Verifies an Annotation message.\n           * @function verify\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {Object.<string,*>} message Plain object to verify\n           * @returns {string|null} `null` if valid, otherwise the reason why it is not\n           */\n\n\n          Annotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null) return \"object expected\";\n\n            if (message.path != null && message.hasOwnProperty(\"path\")) {\n              if (!Array.isArray(message.path)) return \"path: array expected\";\n\n              for (var i = 0; i < message.path.length; ++i) if (!$util.isInteger(message.path[i])) return \"path: integer[] expected\";\n            }\n\n            if (message.sourceFile != null && message.hasOwnProperty(\"sourceFile\")) if (!$util.isString(message.sourceFile)) return \"sourceFile: string expected\";\n            if (message.begin != null && message.hasOwnProperty(\"begin\")) if (!$util.isInteger(message.begin)) return \"begin: integer expected\";\n            if (message.end != null && message.hasOwnProperty(\"end\")) if (!$util.isInteger(message.end)) return \"end: integer expected\";\n            return null;\n          };\n          /**\n           * Creates an Annotation message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n           */\n\n\n          Annotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation) return object;\n            var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();\n\n            if (object.path) {\n              if (!Array.isArray(object.path)) throw TypeError(\".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected\");\n              message.path = [];\n\n              for (var i = 0; i < object.path.length; ++i) message.path[i] = object.path[i] | 0;\n            }\n\n            if (object.sourceFile != null) message.sourceFile = String(object.sourceFile);\n            if (object.begin != null) message.begin = object.begin | 0;\n            if (object.end != null) message.end = object.end | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from an Annotation message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Annotation.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.path = [];\n\n            if (options.defaults) {\n              object.sourceFile = \"\";\n              object.begin = 0;\n              object.end = 0;\n            }\n\n            if (message.path && message.path.length) {\n              object.path = [];\n\n              for (var j = 0; j < message.path.length; ++j) object.path[j] = message.path[j];\n            }\n\n            if (message.sourceFile != null && message.hasOwnProperty(\"sourceFile\")) object.sourceFile = message.sourceFile;\n            if (message.begin != null && message.hasOwnProperty(\"begin\")) object.begin = message.begin;\n            if (message.end != null && message.hasOwnProperty(\"end\")) object.end = message.end;\n            return object;\n          };\n          /**\n           * Converts this Annotation to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Annotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Annotation;\n        }();\n\n        return GeneratedCodeInfo;\n      }();\n\n      protobuf.Timestamp = function () {\n        /**\n         * Properties of a Timestamp.\n         * @memberof google.protobuf\n         * @interface ITimestamp\n         * @property {number|Long|null} [seconds] Timestamp seconds\n         * @property {number|null} [nanos] Timestamp nanos\n         */\n\n        /**\n         * Constructs a new Timestamp.\n         * @memberof google.protobuf\n         * @classdesc Represents a Timestamp.\n         * @implements ITimestamp\n         * @constructor\n         * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n         */\n        function Timestamp(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n        /**\n         * Timestamp seconds.\n         * @member {number|Long} seconds\n         * @memberof google.protobuf.Timestamp\n         * @instance\n         */\n\n\n        Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n        /**\n         * Timestamp nanos.\n         * @member {number} nanos\n         * @memberof google.protobuf.Timestamp\n         * @instance\n         */\n\n        Timestamp.prototype.nanos = 0;\n        /**\n         * Creates a new Timestamp instance using the specified properties.\n         * @function create\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n         * @returns {google.protobuf.Timestamp} Timestamp instance\n         */\n\n        Timestamp.create = function create(properties) {\n          return new Timestamp(properties);\n        };\n        /**\n         * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n         * @function encode\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        Timestamp.encode = function encode(message, writer) {\n          if (!writer) writer = $Writer.create();\n          if (message.seconds != null && message.hasOwnProperty(\"seconds\")) writer.uint32(\n          /* id 1, wireType 0 =*/\n          8).int64(message.seconds);\n          if (message.nanos != null && message.hasOwnProperty(\"nanos\")) writer.uint32(\n          /* id 2, wireType 0 =*/\n          16).int32(message.nanos);\n          return writer;\n        };\n        /**\n         * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n\n\n        Timestamp.encodeDelimited = function encodeDelimited(message, writer) {\n          return this.encode(message, writer).ldelim();\n        };\n        /**\n         * Decodes a Timestamp message from the specified reader or buffer.\n         * @function decode\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {google.protobuf.Timestamp} Timestamp\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        Timestamp.decode = function decode(reader, length) {\n          if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n          var end = length === undefined ? reader.len : reader.pos + length,\n              message = new $root.google.protobuf.Timestamp();\n\n          while (reader.pos < end) {\n            var tag = reader.uint32();\n\n            switch (tag >>> 3) {\n              case 1:\n                message.seconds = reader.int64();\n                break;\n\n              case 2:\n                message.nanos = reader.int32();\n                break;\n\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Decodes a Timestamp message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {google.protobuf.Timestamp} Timestamp\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n\n\n        Timestamp.decodeDelimited = function decodeDelimited(reader) {\n          if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n          return this.decode(reader, reader.uint32());\n        };\n        /**\n         * Verifies a Timestamp message.\n         * @function verify\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n\n\n        Timestamp.verify = function verify(message) {\n          if (typeof message !== \"object\" || message === null) return \"object expected\";\n          if (message.seconds != null && message.hasOwnProperty(\"seconds\")) if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high))) return \"seconds: integer|Long expected\";\n          if (message.nanos != null && message.hasOwnProperty(\"nanos\")) if (!$util.isInteger(message.nanos)) return \"nanos: integer expected\";\n          return null;\n        };\n        /**\n         * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Timestamp} Timestamp\n         */\n\n\n        Timestamp.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Timestamp) return object;\n          var message = new $root.google.protobuf.Timestamp();\n          if (object.seconds != null) if ($util.Long) (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;else if (typeof object.seconds === \"string\") message.seconds = parseInt(object.seconds, 10);else if (typeof object.seconds === \"number\") message.seconds = object.seconds;else if (typeof object.seconds === \"object\") message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();\n          if (object.nanos != null) message.nanos = object.nanos | 0;\n          return message;\n        };\n        /**\n         * Creates a plain object from a Timestamp message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {google.protobuf.Timestamp} message Timestamp\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Timestamp.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            if ($util.Long) {\n              var long = new $util.Long(0, 0, false);\n              object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else object.seconds = options.longs === String ? \"0\" : 0;\n\n            object.nanos = 0;\n          }\n\n          if (message.seconds != null && message.hasOwnProperty(\"seconds\")) if (typeof message.seconds === \"number\") object.seconds = options.longs === String ? String(message.seconds) : message.seconds;else object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;\n          if (message.nanos != null && message.hasOwnProperty(\"nanos\")) object.nanos = message.nanos;\n          return object;\n        };\n        /**\n         * Converts this Timestamp to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Timestamp\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Timestamp.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Timestamp;\n      }();\n\n      return protobuf;\n    }();\n\n    return google;\n  }();\n\n  return $root;\n});","map":{"version":3,"sources":["C:/Users/SHRUTHI KV/Desktop/project_positive/my-app/node_modules/@google-cloud/language/build/protos/protos.js"],"names":["global","factory","define","amd","require","module","exports","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","_google_cloud_language_3_8_0_protos","google","cloud","language","v1","LanguageService","rpcImpl","requestDelimited","responseDelimited","rpc","Service","call","prototype","Object","create","constructor","defineProperty","analyzeSentiment","request","callback","rpcCall","AnalyzeSentimentRequest","AnalyzeSentimentResponse","value","analyzeEntities","AnalyzeEntitiesRequest","AnalyzeEntitiesResponse","analyzeEntitySentiment","AnalyzeEntitySentimentRequest","AnalyzeEntitySentimentResponse","analyzeSyntax","AnalyzeSyntaxRequest","AnalyzeSyntaxResponse","classifyText","ClassifyTextRequest","ClassifyTextResponse","annotateText","AnnotateTextRequest","AnnotateTextResponse","Document","properties","keys","i","length","type","content","gcsContentUri","$oneOfFields","get","oneOfGetter","set","oneOfSetter","encode","message","writer","hasOwnProperty","uint32","int32","string","encodeDelimited","ldelim","decode","reader","end","undefined","len","pos","tag","skipType","decodeDelimited","verify","source","isString","fromObject","object","String","toObject","options","defaults","enums","Type","oneofs","toJSON","toJSONOptions","valuesById","values","Sentence","text","sentiment","TextSpan","fork","Sentiment","error","TypeError","Entity","metadata","mentions","name","emptyObject","salience","emptyArray","float","EntityMention","key","skip","push","isObject","Array","isArray","Number","arrays","objects","keys2","j","json","isFinite","EncodingType","Token","partOfSpeech","dependencyEdge","lemma","PartOfSpeech","DependencyEdge","magnitude","score","aspect","form","gender","mood","number","person","proper","reciprocity","tense","voice","Tag","Aspect","Case","Form","Gender","Mood","Person","Proper","Reciprocity","Tense","Voice","headTokenIndex","label","isInteger","Label","beginOffset","ClassificationCategory","confidence","document","encodingType","sentences","documentSentiment","entities","tokens","categories","features","Features","extractSyntax","extractEntities","extractDocumentSentiment","extractEntitySentiment","bool","Boolean","v1beta2","api","Http","rules","fullyDecodeReservedExpansion","HttpRule","additionalBindings","selector","put","post","patch","custom","body","responseBody","CustomHttpPattern","pattern","kind","path","FieldBehavior","protobuf","FileDescriptorSet","file","FileDescriptorProto","dependency","publicDependency","weakDependency","messageType","enumType","service","extension","sourceCodeInfo","syntax","DescriptorProto","EnumDescriptorProto","ServiceDescriptorProto","FieldDescriptorProto","FileOptions","SourceCodeInfo","end2","field","nestedType","extensionRange","oneofDecl","reservedRange","reservedName","ExtensionRange","MessageOptions","OneofDescriptorProto","ReservedRange","start","ExtensionRangeOptions","uninterpretedOption","UninterpretedOption","typeName","extendee","defaultValue","oneofIndex","jsonName","FieldOptions","OneofOptions","EnumValueDescriptorProto","EnumOptions","EnumReservedRange","EnumValueOptions","method","MethodDescriptorProto","ServiceOptions","inputType","outputType","clientStreaming","serverStreaming","MethodOptions","javaPackage","javaOuterClassname","javaMultipleFiles","javaGenerateEqualsAndHash","javaStringCheckUtf8","optimizeFor","goPackage","ccGenericServices","javaGenericServices","pyGenericServices","phpGenericServices","deprecated","ccEnableArenas","objcClassPrefix","csharpNamespace","swiftPrefix","phpClassPrefix","phpNamespace","phpMetadataNamespace","rubyPackage","OptimizeMode","messageSetWireFormat","noStandardDescriptorAccessor","mapEntry","ctype","packed","jstype","lazy","weak","CType","JSType","allowAlias","idempotencyLevel","IdempotencyLevel","identifierValue","positiveIntValue","Long","fromBits","negativeIntValue","doubleValue","stringValue","newBuffer","aggregateValue","NamePart","uint64","int64","double","bytes","low","high","fromValue","unsigned","parseInt","LongBits","toNumber","base64","long","longs","toString","slice","namePart","isExtension","ProtocolError","instance","location","Location","span","leadingDetachedComments","leadingComments","trailingComments","GeneratedCodeInfo","annotation","Annotation","sourceFile","begin","Timestamp","seconds","nanos"],"mappings":"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","sourcesContent":["// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n(function(global, factory) { /* global define, require, module */\n\n    /* AMD */ if (typeof define === 'function' && define.amd)\n        define([\"protobufjs/minimal\"], factory);\n\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)\n        module.exports = factory(require(\"protobufjs/minimal\"));\n\n})(this, function($protobuf) {\n    \"use strict\";\n\n    // Common aliases\n    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n    \n    // Exported root namespace\n    var $root = $protobuf.roots._google_cloud_language_3_8_0_protos || ($protobuf.roots._google_cloud_language_3_8_0_protos = {});\n    \n    $root.google = (function() {\n    \n        /**\n         * Namespace google.\n         * @exports google\n         * @namespace\n         */\n        var google = {};\n    \n        google.cloud = (function() {\n    \n            /**\n             * Namespace cloud.\n             * @memberof google\n             * @namespace\n             */\n            var cloud = {};\n    \n            cloud.language = (function() {\n    \n                /**\n                 * Namespace language.\n                 * @memberof google.cloud\n                 * @namespace\n                 */\n                var language = {};\n    \n                language.v1 = (function() {\n    \n                    /**\n                     * Namespace v1.\n                     * @memberof google.cloud.language\n                     * @namespace\n                     */\n                    var v1 = {};\n    \n                    v1.LanguageService = (function() {\n    \n                        /**\n                         * Constructs a new LanguageService service.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a LanguageService\n                         * @extends $protobuf.rpc.Service\n                         * @constructor\n                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n                         */\n                        function LanguageService(rpcImpl, requestDelimited, responseDelimited) {\n                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n                        }\n    \n                        (LanguageService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = LanguageService;\n    \n                        /**\n                         * Creates new LanguageService service using the specified rpc implementation.\n                         * @function create\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @static\n                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n                         * @returns {LanguageService} RPC service. Useful where requests and/or responses are streamed.\n                         */\n                        LanguageService.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n                            return new this(rpcImpl, requestDelimited, responseDelimited);\n                        };\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1.LanguageService#analyzeSentiment}.\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @typedef AnalyzeSentimentCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1.AnalyzeSentimentResponse} [response] AnalyzeSentimentResponse\n                         */\n    \n                        /**\n                         * Calls AnalyzeSentiment.\n                         * @function analyzeSentiment\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentRequest} request AnalyzeSentimentRequest message or plain object\n                         * @param {google.cloud.language.v1.LanguageService.AnalyzeSentimentCallback} callback Node-style callback called with the error, if any, and AnalyzeSentimentResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.analyzeSentiment = function analyzeSentiment(request, callback) {\n                            return this.rpcCall(analyzeSentiment, $root.google.cloud.language.v1.AnalyzeSentimentRequest, $root.google.cloud.language.v1.AnalyzeSentimentResponse, request, callback);\n                        }, \"name\", { value: \"AnalyzeSentiment\" });\n    \n                        /**\n                         * Calls AnalyzeSentiment.\n                         * @function analyzeSentiment\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentRequest} request AnalyzeSentimentRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1.AnalyzeSentimentResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1.LanguageService#analyzeEntities}.\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @typedef AnalyzeEntitiesCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1.AnalyzeEntitiesResponse} [response] AnalyzeEntitiesResponse\n                         */\n    \n                        /**\n                         * Calls AnalyzeEntities.\n                         * @function analyzeEntities\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest} request AnalyzeEntitiesRequest message or plain object\n                         * @param {google.cloud.language.v1.LanguageService.AnalyzeEntitiesCallback} callback Node-style callback called with the error, if any, and AnalyzeEntitiesResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.analyzeEntities = function analyzeEntities(request, callback) {\n                            return this.rpcCall(analyzeEntities, $root.google.cloud.language.v1.AnalyzeEntitiesRequest, $root.google.cloud.language.v1.AnalyzeEntitiesResponse, request, callback);\n                        }, \"name\", { value: \"AnalyzeEntities\" });\n    \n                        /**\n                         * Calls AnalyzeEntities.\n                         * @function analyzeEntities\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest} request AnalyzeEntitiesRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1.AnalyzeEntitiesResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1.LanguageService#analyzeEntitySentiment}.\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @typedef AnalyzeEntitySentimentCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1.AnalyzeEntitySentimentResponse} [response] AnalyzeEntitySentimentResponse\n                         */\n    \n                        /**\n                         * Calls AnalyzeEntitySentiment.\n                         * @function analyzeEntitySentiment\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest} request AnalyzeEntitySentimentRequest message or plain object\n                         * @param {google.cloud.language.v1.LanguageService.AnalyzeEntitySentimentCallback} callback Node-style callback called with the error, if any, and AnalyzeEntitySentimentResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.analyzeEntitySentiment = function analyzeEntitySentiment(request, callback) {\n                            return this.rpcCall(analyzeEntitySentiment, $root.google.cloud.language.v1.AnalyzeEntitySentimentRequest, $root.google.cloud.language.v1.AnalyzeEntitySentimentResponse, request, callback);\n                        }, \"name\", { value: \"AnalyzeEntitySentiment\" });\n    \n                        /**\n                         * Calls AnalyzeEntitySentiment.\n                         * @function analyzeEntitySentiment\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest} request AnalyzeEntitySentimentRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1.AnalyzeEntitySentimentResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1.LanguageService#analyzeSyntax}.\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @typedef AnalyzeSyntaxCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1.AnalyzeSyntaxResponse} [response] AnalyzeSyntaxResponse\n                         */\n    \n                        /**\n                         * Calls AnalyzeSyntax.\n                         * @function analyzeSyntax\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest} request AnalyzeSyntaxRequest message or plain object\n                         * @param {google.cloud.language.v1.LanguageService.AnalyzeSyntaxCallback} callback Node-style callback called with the error, if any, and AnalyzeSyntaxResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.analyzeSyntax = function analyzeSyntax(request, callback) {\n                            return this.rpcCall(analyzeSyntax, $root.google.cloud.language.v1.AnalyzeSyntaxRequest, $root.google.cloud.language.v1.AnalyzeSyntaxResponse, request, callback);\n                        }, \"name\", { value: \"AnalyzeSyntax\" });\n    \n                        /**\n                         * Calls AnalyzeSyntax.\n                         * @function analyzeSyntax\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest} request AnalyzeSyntaxRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1.AnalyzeSyntaxResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1.LanguageService#classifyText}.\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @typedef ClassifyTextCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1.ClassifyTextResponse} [response] ClassifyTextResponse\n                         */\n    \n                        /**\n                         * Calls ClassifyText.\n                         * @function classifyText\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IClassifyTextRequest} request ClassifyTextRequest message or plain object\n                         * @param {google.cloud.language.v1.LanguageService.ClassifyTextCallback} callback Node-style callback called with the error, if any, and ClassifyTextResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.classifyText = function classifyText(request, callback) {\n                            return this.rpcCall(classifyText, $root.google.cloud.language.v1.ClassifyTextRequest, $root.google.cloud.language.v1.ClassifyTextResponse, request, callback);\n                        }, \"name\", { value: \"ClassifyText\" });\n    \n                        /**\n                         * Calls ClassifyText.\n                         * @function classifyText\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IClassifyTextRequest} request ClassifyTextRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1.ClassifyTextResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1.LanguageService#annotateText}.\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @typedef AnnotateTextCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1.AnnotateTextResponse} [response] AnnotateTextResponse\n                         */\n    \n                        /**\n                         * Calls AnnotateText.\n                         * @function annotateText\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnnotateTextRequest} request AnnotateTextRequest message or plain object\n                         * @param {google.cloud.language.v1.LanguageService.AnnotateTextCallback} callback Node-style callback called with the error, if any, and AnnotateTextResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.annotateText = function annotateText(request, callback) {\n                            return this.rpcCall(annotateText, $root.google.cloud.language.v1.AnnotateTextRequest, $root.google.cloud.language.v1.AnnotateTextResponse, request, callback);\n                        }, \"name\", { value: \"AnnotateText\" });\n    \n                        /**\n                         * Calls AnnotateText.\n                         * @function annotateText\n                         * @memberof google.cloud.language.v1.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1.IAnnotateTextRequest} request AnnotateTextRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1.AnnotateTextResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        return LanguageService;\n                    })();\n    \n                    v1.Document = (function() {\n    \n                        /**\n                         * Properties of a Document.\n                         * @memberof google.cloud.language.v1\n                         * @interface IDocument\n                         * @property {google.cloud.language.v1.Document.Type|null} [type] Document type\n                         * @property {string|null} [content] Document content\n                         * @property {string|null} [gcsContentUri] Document gcsContentUri\n                         * @property {string|null} [language] Document language\n                         */\n    \n                        /**\n                         * Constructs a new Document.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a Document.\n                         * @implements IDocument\n                         * @constructor\n                         * @param {google.cloud.language.v1.IDocument=} [properties] Properties to set\n                         */\n                        function Document(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Document type.\n                         * @member {google.cloud.language.v1.Document.Type} type\n                         * @memberof google.cloud.language.v1.Document\n                         * @instance\n                         */\n                        Document.prototype.type = 0;\n    \n                        /**\n                         * Document content.\n                         * @member {string} content\n                         * @memberof google.cloud.language.v1.Document\n                         * @instance\n                         */\n                        Document.prototype.content = \"\";\n    \n                        /**\n                         * Document gcsContentUri.\n                         * @member {string} gcsContentUri\n                         * @memberof google.cloud.language.v1.Document\n                         * @instance\n                         */\n                        Document.prototype.gcsContentUri = \"\";\n    \n                        /**\n                         * Document language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1.Document\n                         * @instance\n                         */\n                        Document.prototype.language = \"\";\n    \n                        // OneOf field names bound to virtual getters and setters\n                        var $oneOfFields;\n    \n                        /**\n                         * Document source.\n                         * @member {\"content\"|\"gcsContentUri\"|undefined} source\n                         * @memberof google.cloud.language.v1.Document\n                         * @instance\n                         */\n                        Object.defineProperty(Document.prototype, \"source\", {\n                            get: $util.oneOfGetter($oneOfFields = [\"content\", \"gcsContentUri\"]),\n                            set: $util.oneOfSetter($oneOfFields)\n                        });\n    \n                        /**\n                         * Creates a new Document instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.Document\n                         * @static\n                         * @param {google.cloud.language.v1.IDocument=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.Document} Document instance\n                         */\n                        Document.create = function create(properties) {\n                            return new Document(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Document message. Does not implicitly {@link google.cloud.language.v1.Document.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.Document\n                         * @static\n                         * @param {google.cloud.language.v1.IDocument} message Document message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Document.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n                            if (message.content != null && message.hasOwnProperty(\"content\"))\n                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);\n                            if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\"))\n                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.gcsContentUri);\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.language);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.language.v1.Document.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.Document\n                         * @static\n                         * @param {google.cloud.language.v1.IDocument} message Document message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Document.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a Document message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.Document\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.Document} Document\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Document.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.Document();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.type = reader.int32();\n                                    break;\n                                case 2:\n                                    message.content = reader.string();\n                                    break;\n                                case 3:\n                                    message.gcsContentUri = reader.string();\n                                    break;\n                                case 4:\n                                    message.language = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a Document message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.Document\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.Document} Document\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Document.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a Document message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.Document\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Document.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            var properties = {};\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                switch (message.type) {\n                                default:\n                                    return \"type: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                    break;\n                                }\n                            if (message.content != null && message.hasOwnProperty(\"content\")) {\n                                properties.source = 1;\n                                if (!$util.isString(message.content))\n                                    return \"content: string expected\";\n                            }\n                            if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) {\n                                if (properties.source === 1)\n                                    return \"source: multiple values\";\n                                properties.source = 1;\n                                if (!$util.isString(message.gcsContentUri))\n                                    return \"gcsContentUri: string expected\";\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a Document message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.Document\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.Document} Document\n                         */\n                        Document.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.Document)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.Document();\n                            switch (object.type) {\n                            case \"TYPE_UNSPECIFIED\":\n                            case 0:\n                                message.type = 0;\n                                break;\n                            case \"PLAIN_TEXT\":\n                            case 1:\n                                message.type = 1;\n                                break;\n                            case \"HTML\":\n                            case 2:\n                                message.type = 2;\n                                break;\n                            }\n                            if (object.content != null)\n                                message.content = String(object.content);\n                            if (object.gcsContentUri != null)\n                                message.gcsContentUri = String(object.gcsContentUri);\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a Document message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.Document\n                         * @static\n                         * @param {google.cloud.language.v1.Document} message Document\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Document.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.type = options.enums === String ? \"TYPE_UNSPECIFIED\" : 0;\n                                object.language = \"\";\n                            }\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                object.type = options.enums === String ? $root.google.cloud.language.v1.Document.Type[message.type] : message.type;\n                            if (message.content != null && message.hasOwnProperty(\"content\")) {\n                                object.content = message.content;\n                                if (options.oneofs)\n                                    object.source = \"content\";\n                            }\n                            if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) {\n                                object.gcsContentUri = message.gcsContentUri;\n                                if (options.oneofs)\n                                    object.source = \"gcsContentUri\";\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Document to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.Document\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Document.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Type enum.\n                         * @name google.cloud.language.v1.Document.Type\n                         * @enum {string}\n                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value\n                         * @property {number} PLAIN_TEXT=1 PLAIN_TEXT value\n                         * @property {number} HTML=2 HTML value\n                         */\n                        Document.Type = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"TYPE_UNSPECIFIED\"] = 0;\n                            values[valuesById[1] = \"PLAIN_TEXT\"] = 1;\n                            values[valuesById[2] = \"HTML\"] = 2;\n                            return values;\n                        })();\n    \n                        return Document;\n                    })();\n    \n                    v1.Sentence = (function() {\n    \n                        /**\n                         * Properties of a Sentence.\n                         * @memberof google.cloud.language.v1\n                         * @interface ISentence\n                         * @property {google.cloud.language.v1.ITextSpan|null} [text] Sentence text\n                         * @property {google.cloud.language.v1.ISentiment|null} [sentiment] Sentence sentiment\n                         */\n    \n                        /**\n                         * Constructs a new Sentence.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a Sentence.\n                         * @implements ISentence\n                         * @constructor\n                         * @param {google.cloud.language.v1.ISentence=} [properties] Properties to set\n                         */\n                        function Sentence(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Sentence text.\n                         * @member {google.cloud.language.v1.ITextSpan|null|undefined} text\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @instance\n                         */\n                        Sentence.prototype.text = null;\n    \n                        /**\n                         * Sentence sentiment.\n                         * @member {google.cloud.language.v1.ISentiment|null|undefined} sentiment\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @instance\n                         */\n                        Sentence.prototype.sentiment = null;\n    \n                        /**\n                         * Creates a new Sentence instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @static\n                         * @param {google.cloud.language.v1.ISentence=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.Sentence} Sentence instance\n                         */\n                        Sentence.create = function create(properties) {\n                            return new Sentence(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Sentence message. Does not implicitly {@link google.cloud.language.v1.Sentence.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @static\n                         * @param {google.cloud.language.v1.ISentence} message Sentence message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Sentence.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                $root.google.cloud.language.v1.TextSpan.encode(message.text, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                $root.google.cloud.language.v1.Sentiment.encode(message.sentiment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Sentence message, length delimited. Does not implicitly {@link google.cloud.language.v1.Sentence.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @static\n                         * @param {google.cloud.language.v1.ISentence} message Sentence message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Sentence.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a Sentence message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.Sentence} Sentence\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Sentence.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.Sentence();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.text = $root.google.cloud.language.v1.TextSpan.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.sentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a Sentence message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.Sentence} Sentence\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Sentence.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a Sentence message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Sentence.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.text != null && message.hasOwnProperty(\"text\")) {\n                                var error = $root.google.cloud.language.v1.TextSpan.verify(message.text);\n                                if (error)\n                                    return \"text.\" + error;\n                            }\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                                var error = $root.google.cloud.language.v1.Sentiment.verify(message.sentiment);\n                                if (error)\n                                    return \"sentiment.\" + error;\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a Sentence message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.Sentence} Sentence\n                         */\n                        Sentence.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.Sentence)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.Sentence();\n                            if (object.text != null) {\n                                if (typeof object.text !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.Sentence.text: object expected\");\n                                message.text = $root.google.cloud.language.v1.TextSpan.fromObject(object.text);\n                            }\n                            if (object.sentiment != null) {\n                                if (typeof object.sentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.Sentence.sentiment: object expected\");\n                                message.sentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.sentiment);\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a Sentence message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @static\n                         * @param {google.cloud.language.v1.Sentence} message Sentence\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Sentence.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.text = null;\n                                object.sentiment = null;\n                            }\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                object.text = $root.google.cloud.language.v1.TextSpan.toObject(message.text, options);\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                object.sentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.sentiment, options);\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Sentence to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.Sentence\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Sentence.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return Sentence;\n                    })();\n    \n                    v1.Entity = (function() {\n    \n                        /**\n                         * Properties of an Entity.\n                         * @memberof google.cloud.language.v1\n                         * @interface IEntity\n                         * @property {string|null} [name] Entity name\n                         * @property {google.cloud.language.v1.Entity.Type|null} [type] Entity type\n                         * @property {Object.<string,string>|null} [metadata] Entity metadata\n                         * @property {number|null} [salience] Entity salience\n                         * @property {Array.<google.cloud.language.v1.IEntityMention>|null} [mentions] Entity mentions\n                         * @property {google.cloud.language.v1.ISentiment|null} [sentiment] Entity sentiment\n                         */\n    \n                        /**\n                         * Constructs a new Entity.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an Entity.\n                         * @implements IEntity\n                         * @constructor\n                         * @param {google.cloud.language.v1.IEntity=} [properties] Properties to set\n                         */\n                        function Entity(properties) {\n                            this.metadata = {};\n                            this.mentions = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Entity name.\n                         * @member {string} name\n                         * @memberof google.cloud.language.v1.Entity\n                         * @instance\n                         */\n                        Entity.prototype.name = \"\";\n    \n                        /**\n                         * Entity type.\n                         * @member {google.cloud.language.v1.Entity.Type} type\n                         * @memberof google.cloud.language.v1.Entity\n                         * @instance\n                         */\n                        Entity.prototype.type = 0;\n    \n                        /**\n                         * Entity metadata.\n                         * @member {Object.<string,string>} metadata\n                         * @memberof google.cloud.language.v1.Entity\n                         * @instance\n                         */\n                        Entity.prototype.metadata = $util.emptyObject;\n    \n                        /**\n                         * Entity salience.\n                         * @member {number} salience\n                         * @memberof google.cloud.language.v1.Entity\n                         * @instance\n                         */\n                        Entity.prototype.salience = 0;\n    \n                        /**\n                         * Entity mentions.\n                         * @member {Array.<google.cloud.language.v1.IEntityMention>} mentions\n                         * @memberof google.cloud.language.v1.Entity\n                         * @instance\n                         */\n                        Entity.prototype.mentions = $util.emptyArray;\n    \n                        /**\n                         * Entity sentiment.\n                         * @member {google.cloud.language.v1.ISentiment|null|undefined} sentiment\n                         * @memberof google.cloud.language.v1.Entity\n                         * @instance\n                         */\n                        Entity.prototype.sentiment = null;\n    \n                        /**\n                         * Creates a new Entity instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.Entity\n                         * @static\n                         * @param {google.cloud.language.v1.IEntity=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.Entity} Entity instance\n                         */\n                        Entity.create = function create(properties) {\n                            return new Entity(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Entity message. Does not implicitly {@link google.cloud.language.v1.Entity.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.Entity\n                         * @static\n                         * @param {google.cloud.language.v1.IEntity} message Entity message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Entity.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n                            if (message.metadata != null && message.hasOwnProperty(\"metadata\"))\n                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)\n                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();\n                            if (message.salience != null && message.hasOwnProperty(\"salience\"))\n                                writer.uint32(/* id 4, wireType 5 =*/37).float(message.salience);\n                            if (message.mentions != null && message.mentions.length)\n                                for (var i = 0; i < message.mentions.length; ++i)\n                                    $root.google.cloud.language.v1.EntityMention.encode(message.mentions[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                $root.google.cloud.language.v1.Sentiment.encode(message.sentiment, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Entity message, length delimited. Does not implicitly {@link google.cloud.language.v1.Entity.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.Entity\n                         * @static\n                         * @param {google.cloud.language.v1.IEntity} message Entity message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Entity.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an Entity message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.Entity\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.Entity} Entity\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Entity.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.Entity(), key;\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.name = reader.string();\n                                    break;\n                                case 2:\n                                    message.type = reader.int32();\n                                    break;\n                                case 3:\n                                    reader.skip().pos++;\n                                    if (message.metadata === $util.emptyObject)\n                                        message.metadata = {};\n                                    key = reader.string();\n                                    reader.pos++;\n                                    message.metadata[key] = reader.string();\n                                    break;\n                                case 4:\n                                    message.salience = reader.float();\n                                    break;\n                                case 5:\n                                    if (!(message.mentions && message.mentions.length))\n                                        message.mentions = [];\n                                    message.mentions.push($root.google.cloud.language.v1.EntityMention.decode(reader, reader.uint32()));\n                                    break;\n                                case 6:\n                                    message.sentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an Entity message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.Entity\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.Entity} Entity\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Entity.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an Entity message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.Entity\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Entity.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                if (!$util.isString(message.name))\n                                    return \"name: string expected\";\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                switch (message.type) {\n                                default:\n                                    return \"type: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 9:\n                                case 10:\n                                case 11:\n                                case 12:\n                                case 13:\n                                    break;\n                                }\n                            if (message.metadata != null && message.hasOwnProperty(\"metadata\")) {\n                                if (!$util.isObject(message.metadata))\n                                    return \"metadata: object expected\";\n                                var key = Object.keys(message.metadata);\n                                for (var i = 0; i < key.length; ++i)\n                                    if (!$util.isString(message.metadata[key[i]]))\n                                        return \"metadata: string{k:string} expected\";\n                            }\n                            if (message.salience != null && message.hasOwnProperty(\"salience\"))\n                                if (typeof message.salience !== \"number\")\n                                    return \"salience: number expected\";\n                            if (message.mentions != null && message.hasOwnProperty(\"mentions\")) {\n                                if (!Array.isArray(message.mentions))\n                                    return \"mentions: array expected\";\n                                for (var i = 0; i < message.mentions.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.EntityMention.verify(message.mentions[i]);\n                                    if (error)\n                                        return \"mentions.\" + error;\n                                }\n                            }\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                                var error = $root.google.cloud.language.v1.Sentiment.verify(message.sentiment);\n                                if (error)\n                                    return \"sentiment.\" + error;\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an Entity message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.Entity\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.Entity} Entity\n                         */\n                        Entity.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.Entity)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.Entity();\n                            if (object.name != null)\n                                message.name = String(object.name);\n                            switch (object.type) {\n                            case \"UNKNOWN\":\n                            case 0:\n                                message.type = 0;\n                                break;\n                            case \"PERSON\":\n                            case 1:\n                                message.type = 1;\n                                break;\n                            case \"LOCATION\":\n                            case 2:\n                                message.type = 2;\n                                break;\n                            case \"ORGANIZATION\":\n                            case 3:\n                                message.type = 3;\n                                break;\n                            case \"EVENT\":\n                            case 4:\n                                message.type = 4;\n                                break;\n                            case \"WORK_OF_ART\":\n                            case 5:\n                                message.type = 5;\n                                break;\n                            case \"CONSUMER_GOOD\":\n                            case 6:\n                                message.type = 6;\n                                break;\n                            case \"OTHER\":\n                            case 7:\n                                message.type = 7;\n                                break;\n                            case \"PHONE_NUMBER\":\n                            case 9:\n                                message.type = 9;\n                                break;\n                            case \"ADDRESS\":\n                            case 10:\n                                message.type = 10;\n                                break;\n                            case \"DATE\":\n                            case 11:\n                                message.type = 11;\n                                break;\n                            case \"NUMBER\":\n                            case 12:\n                                message.type = 12;\n                                break;\n                            case \"PRICE\":\n                            case 13:\n                                message.type = 13;\n                                break;\n                            }\n                            if (object.metadata) {\n                                if (typeof object.metadata !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.Entity.metadata: object expected\");\n                                message.metadata = {};\n                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)\n                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);\n                            }\n                            if (object.salience != null)\n                                message.salience = Number(object.salience);\n                            if (object.mentions) {\n                                if (!Array.isArray(object.mentions))\n                                    throw TypeError(\".google.cloud.language.v1.Entity.mentions: array expected\");\n                                message.mentions = [];\n                                for (var i = 0; i < object.mentions.length; ++i) {\n                                    if (typeof object.mentions[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.Entity.mentions: object expected\");\n                                    message.mentions[i] = $root.google.cloud.language.v1.EntityMention.fromObject(object.mentions[i]);\n                                }\n                            }\n                            if (object.sentiment != null) {\n                                if (typeof object.sentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.Entity.sentiment: object expected\");\n                                message.sentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.sentiment);\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an Entity message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.Entity\n                         * @static\n                         * @param {google.cloud.language.v1.Entity} message Entity\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Entity.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.mentions = [];\n                            if (options.objects || options.defaults)\n                                object.metadata = {};\n                            if (options.defaults) {\n                                object.name = \"\";\n                                object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                                object.salience = 0;\n                                object.sentiment = null;\n                            }\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                object.name = message.name;\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                object.type = options.enums === String ? $root.google.cloud.language.v1.Entity.Type[message.type] : message.type;\n                            var keys2;\n                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {\n                                object.metadata = {};\n                                for (var j = 0; j < keys2.length; ++j)\n                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];\n                            }\n                            if (message.salience != null && message.hasOwnProperty(\"salience\"))\n                                object.salience = options.json && !isFinite(message.salience) ? String(message.salience) : message.salience;\n                            if (message.mentions && message.mentions.length) {\n                                object.mentions = [];\n                                for (var j = 0; j < message.mentions.length; ++j)\n                                    object.mentions[j] = $root.google.cloud.language.v1.EntityMention.toObject(message.mentions[j], options);\n                            }\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                object.sentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.sentiment, options);\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Entity to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.Entity\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Entity.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Type enum.\n                         * @name google.cloud.language.v1.Entity.Type\n                         * @enum {string}\n                         * @property {number} UNKNOWN=0 UNKNOWN value\n                         * @property {number} PERSON=1 PERSON value\n                         * @property {number} LOCATION=2 LOCATION value\n                         * @property {number} ORGANIZATION=3 ORGANIZATION value\n                         * @property {number} EVENT=4 EVENT value\n                         * @property {number} WORK_OF_ART=5 WORK_OF_ART value\n                         * @property {number} CONSUMER_GOOD=6 CONSUMER_GOOD value\n                         * @property {number} OTHER=7 OTHER value\n                         * @property {number} PHONE_NUMBER=9 PHONE_NUMBER value\n                         * @property {number} ADDRESS=10 ADDRESS value\n                         * @property {number} DATE=11 DATE value\n                         * @property {number} NUMBER=12 NUMBER value\n                         * @property {number} PRICE=13 PRICE value\n                         */\n                        Entity.Type = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"PERSON\"] = 1;\n                            values[valuesById[2] = \"LOCATION\"] = 2;\n                            values[valuesById[3] = \"ORGANIZATION\"] = 3;\n                            values[valuesById[4] = \"EVENT\"] = 4;\n                            values[valuesById[5] = \"WORK_OF_ART\"] = 5;\n                            values[valuesById[6] = \"CONSUMER_GOOD\"] = 6;\n                            values[valuesById[7] = \"OTHER\"] = 7;\n                            values[valuesById[9] = \"PHONE_NUMBER\"] = 9;\n                            values[valuesById[10] = \"ADDRESS\"] = 10;\n                            values[valuesById[11] = \"DATE\"] = 11;\n                            values[valuesById[12] = \"NUMBER\"] = 12;\n                            values[valuesById[13] = \"PRICE\"] = 13;\n                            return values;\n                        })();\n    \n                        return Entity;\n                    })();\n    \n                    /**\n                     * EncodingType enum.\n                     * @name google.cloud.language.v1.EncodingType\n                     * @enum {string}\n                     * @property {number} NONE=0 NONE value\n                     * @property {number} UTF8=1 UTF8 value\n                     * @property {number} UTF16=2 UTF16 value\n                     * @property {number} UTF32=3 UTF32 value\n                     */\n                    v1.EncodingType = (function() {\n                        var valuesById = {}, values = Object.create(valuesById);\n                        values[valuesById[0] = \"NONE\"] = 0;\n                        values[valuesById[1] = \"UTF8\"] = 1;\n                        values[valuesById[2] = \"UTF16\"] = 2;\n                        values[valuesById[3] = \"UTF32\"] = 3;\n                        return values;\n                    })();\n    \n                    v1.Token = (function() {\n    \n                        /**\n                         * Properties of a Token.\n                         * @memberof google.cloud.language.v1\n                         * @interface IToken\n                         * @property {google.cloud.language.v1.ITextSpan|null} [text] Token text\n                         * @property {google.cloud.language.v1.IPartOfSpeech|null} [partOfSpeech] Token partOfSpeech\n                         * @property {google.cloud.language.v1.IDependencyEdge|null} [dependencyEdge] Token dependencyEdge\n                         * @property {string|null} [lemma] Token lemma\n                         */\n    \n                        /**\n                         * Constructs a new Token.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a Token.\n                         * @implements IToken\n                         * @constructor\n                         * @param {google.cloud.language.v1.IToken=} [properties] Properties to set\n                         */\n                        function Token(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Token text.\n                         * @member {google.cloud.language.v1.ITextSpan|null|undefined} text\n                         * @memberof google.cloud.language.v1.Token\n                         * @instance\n                         */\n                        Token.prototype.text = null;\n    \n                        /**\n                         * Token partOfSpeech.\n                         * @member {google.cloud.language.v1.IPartOfSpeech|null|undefined} partOfSpeech\n                         * @memberof google.cloud.language.v1.Token\n                         * @instance\n                         */\n                        Token.prototype.partOfSpeech = null;\n    \n                        /**\n                         * Token dependencyEdge.\n                         * @member {google.cloud.language.v1.IDependencyEdge|null|undefined} dependencyEdge\n                         * @memberof google.cloud.language.v1.Token\n                         * @instance\n                         */\n                        Token.prototype.dependencyEdge = null;\n    \n                        /**\n                         * Token lemma.\n                         * @member {string} lemma\n                         * @memberof google.cloud.language.v1.Token\n                         * @instance\n                         */\n                        Token.prototype.lemma = \"\";\n    \n                        /**\n                         * Creates a new Token instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.Token\n                         * @static\n                         * @param {google.cloud.language.v1.IToken=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.Token} Token instance\n                         */\n                        Token.create = function create(properties) {\n                            return new Token(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Token message. Does not implicitly {@link google.cloud.language.v1.Token.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.Token\n                         * @static\n                         * @param {google.cloud.language.v1.IToken} message Token message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Token.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                $root.google.cloud.language.v1.TextSpan.encode(message.text, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\"))\n                                $root.google.cloud.language.v1.PartOfSpeech.encode(message.partOfSpeech, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\"))\n                                $root.google.cloud.language.v1.DependencyEdge.encode(message.dependencyEdge, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            if (message.lemma != null && message.hasOwnProperty(\"lemma\"))\n                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.lemma);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Token message, length delimited. Does not implicitly {@link google.cloud.language.v1.Token.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.Token\n                         * @static\n                         * @param {google.cloud.language.v1.IToken} message Token message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Token.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a Token message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.Token\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.Token} Token\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Token.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.Token();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.text = $root.google.cloud.language.v1.TextSpan.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.partOfSpeech = $root.google.cloud.language.v1.PartOfSpeech.decode(reader, reader.uint32());\n                                    break;\n                                case 3:\n                                    message.dependencyEdge = $root.google.cloud.language.v1.DependencyEdge.decode(reader, reader.uint32());\n                                    break;\n                                case 4:\n                                    message.lemma = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a Token message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.Token\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.Token} Token\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Token.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a Token message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.Token\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Token.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.text != null && message.hasOwnProperty(\"text\")) {\n                                var error = $root.google.cloud.language.v1.TextSpan.verify(message.text);\n                                if (error)\n                                    return \"text.\" + error;\n                            }\n                            if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\")) {\n                                var error = $root.google.cloud.language.v1.PartOfSpeech.verify(message.partOfSpeech);\n                                if (error)\n                                    return \"partOfSpeech.\" + error;\n                            }\n                            if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\")) {\n                                var error = $root.google.cloud.language.v1.DependencyEdge.verify(message.dependencyEdge);\n                                if (error)\n                                    return \"dependencyEdge.\" + error;\n                            }\n                            if (message.lemma != null && message.hasOwnProperty(\"lemma\"))\n                                if (!$util.isString(message.lemma))\n                                    return \"lemma: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a Token message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.Token\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.Token} Token\n                         */\n                        Token.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.Token)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.Token();\n                            if (object.text != null) {\n                                if (typeof object.text !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.Token.text: object expected\");\n                                message.text = $root.google.cloud.language.v1.TextSpan.fromObject(object.text);\n                            }\n                            if (object.partOfSpeech != null) {\n                                if (typeof object.partOfSpeech !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.Token.partOfSpeech: object expected\");\n                                message.partOfSpeech = $root.google.cloud.language.v1.PartOfSpeech.fromObject(object.partOfSpeech);\n                            }\n                            if (object.dependencyEdge != null) {\n                                if (typeof object.dependencyEdge !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.Token.dependencyEdge: object expected\");\n                                message.dependencyEdge = $root.google.cloud.language.v1.DependencyEdge.fromObject(object.dependencyEdge);\n                            }\n                            if (object.lemma != null)\n                                message.lemma = String(object.lemma);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a Token message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.Token\n                         * @static\n                         * @param {google.cloud.language.v1.Token} message Token\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Token.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.text = null;\n                                object.partOfSpeech = null;\n                                object.dependencyEdge = null;\n                                object.lemma = \"\";\n                            }\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                object.text = $root.google.cloud.language.v1.TextSpan.toObject(message.text, options);\n                            if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\"))\n                                object.partOfSpeech = $root.google.cloud.language.v1.PartOfSpeech.toObject(message.partOfSpeech, options);\n                            if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\"))\n                                object.dependencyEdge = $root.google.cloud.language.v1.DependencyEdge.toObject(message.dependencyEdge, options);\n                            if (message.lemma != null && message.hasOwnProperty(\"lemma\"))\n                                object.lemma = message.lemma;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Token to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.Token\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Token.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return Token;\n                    })();\n    \n                    v1.Sentiment = (function() {\n    \n                        /**\n                         * Properties of a Sentiment.\n                         * @memberof google.cloud.language.v1\n                         * @interface ISentiment\n                         * @property {number|null} [magnitude] Sentiment magnitude\n                         * @property {number|null} [score] Sentiment score\n                         */\n    \n                        /**\n                         * Constructs a new Sentiment.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a Sentiment.\n                         * @implements ISentiment\n                         * @constructor\n                         * @param {google.cloud.language.v1.ISentiment=} [properties] Properties to set\n                         */\n                        function Sentiment(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Sentiment magnitude.\n                         * @member {number} magnitude\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @instance\n                         */\n                        Sentiment.prototype.magnitude = 0;\n    \n                        /**\n                         * Sentiment score.\n                         * @member {number} score\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @instance\n                         */\n                        Sentiment.prototype.score = 0;\n    \n                        /**\n                         * Creates a new Sentiment instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @static\n                         * @param {google.cloud.language.v1.ISentiment=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.Sentiment} Sentiment instance\n                         */\n                        Sentiment.create = function create(properties) {\n                            return new Sentiment(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Sentiment message. Does not implicitly {@link google.cloud.language.v1.Sentiment.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @static\n                         * @param {google.cloud.language.v1.ISentiment} message Sentiment message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Sentiment.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.magnitude != null && message.hasOwnProperty(\"magnitude\"))\n                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.magnitude);\n                            if (message.score != null && message.hasOwnProperty(\"score\"))\n                                writer.uint32(/* id 3, wireType 5 =*/29).float(message.score);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Sentiment message, length delimited. Does not implicitly {@link google.cloud.language.v1.Sentiment.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @static\n                         * @param {google.cloud.language.v1.ISentiment} message Sentiment message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Sentiment.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a Sentiment message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.Sentiment} Sentiment\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Sentiment.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.Sentiment();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 2:\n                                    message.magnitude = reader.float();\n                                    break;\n                                case 3:\n                                    message.score = reader.float();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a Sentiment message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.Sentiment} Sentiment\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Sentiment.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a Sentiment message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Sentiment.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.magnitude != null && message.hasOwnProperty(\"magnitude\"))\n                                if (typeof message.magnitude !== \"number\")\n                                    return \"magnitude: number expected\";\n                            if (message.score != null && message.hasOwnProperty(\"score\"))\n                                if (typeof message.score !== \"number\")\n                                    return \"score: number expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a Sentiment message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.Sentiment} Sentiment\n                         */\n                        Sentiment.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.Sentiment)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.Sentiment();\n                            if (object.magnitude != null)\n                                message.magnitude = Number(object.magnitude);\n                            if (object.score != null)\n                                message.score = Number(object.score);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a Sentiment message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @static\n                         * @param {google.cloud.language.v1.Sentiment} message Sentiment\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Sentiment.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.magnitude = 0;\n                                object.score = 0;\n                            }\n                            if (message.magnitude != null && message.hasOwnProperty(\"magnitude\"))\n                                object.magnitude = options.json && !isFinite(message.magnitude) ? String(message.magnitude) : message.magnitude;\n                            if (message.score != null && message.hasOwnProperty(\"score\"))\n                                object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Sentiment to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.Sentiment\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Sentiment.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return Sentiment;\n                    })();\n    \n                    v1.PartOfSpeech = (function() {\n    \n                        /**\n                         * Properties of a PartOfSpeech.\n                         * @memberof google.cloud.language.v1\n                         * @interface IPartOfSpeech\n                         * @property {google.cloud.language.v1.PartOfSpeech.Tag|null} [tag] PartOfSpeech tag\n                         * @property {google.cloud.language.v1.PartOfSpeech.Aspect|null} [aspect] PartOfSpeech aspect\n                         * @property {google.cloud.language.v1.PartOfSpeech.Case|null} [\"case\"] PartOfSpeech case\n                         * @property {google.cloud.language.v1.PartOfSpeech.Form|null} [form] PartOfSpeech form\n                         * @property {google.cloud.language.v1.PartOfSpeech.Gender|null} [gender] PartOfSpeech gender\n                         * @property {google.cloud.language.v1.PartOfSpeech.Mood|null} [mood] PartOfSpeech mood\n                         * @property {google.cloud.language.v1.PartOfSpeech.Number|null} [number] PartOfSpeech number\n                         * @property {google.cloud.language.v1.PartOfSpeech.Person|null} [person] PartOfSpeech person\n                         * @property {google.cloud.language.v1.PartOfSpeech.Proper|null} [proper] PartOfSpeech proper\n                         * @property {google.cloud.language.v1.PartOfSpeech.Reciprocity|null} [reciprocity] PartOfSpeech reciprocity\n                         * @property {google.cloud.language.v1.PartOfSpeech.Tense|null} [tense] PartOfSpeech tense\n                         * @property {google.cloud.language.v1.PartOfSpeech.Voice|null} [voice] PartOfSpeech voice\n                         */\n    \n                        /**\n                         * Constructs a new PartOfSpeech.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a PartOfSpeech.\n                         * @implements IPartOfSpeech\n                         * @constructor\n                         * @param {google.cloud.language.v1.IPartOfSpeech=} [properties] Properties to set\n                         */\n                        function PartOfSpeech(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * PartOfSpeech tag.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Tag} tag\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.tag = 0;\n    \n                        /**\n                         * PartOfSpeech aspect.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Aspect} aspect\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.aspect = 0;\n    \n                        /**\n                         * PartOfSpeech case.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Case} case\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype[\"case\"] = 0;\n    \n                        /**\n                         * PartOfSpeech form.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Form} form\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.form = 0;\n    \n                        /**\n                         * PartOfSpeech gender.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Gender} gender\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.gender = 0;\n    \n                        /**\n                         * PartOfSpeech mood.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Mood} mood\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.mood = 0;\n    \n                        /**\n                         * PartOfSpeech number.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Number} number\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.number = 0;\n    \n                        /**\n                         * PartOfSpeech person.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Person} person\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.person = 0;\n    \n                        /**\n                         * PartOfSpeech proper.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Proper} proper\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.proper = 0;\n    \n                        /**\n                         * PartOfSpeech reciprocity.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Reciprocity} reciprocity\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.reciprocity = 0;\n    \n                        /**\n                         * PartOfSpeech tense.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Tense} tense\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.tense = 0;\n    \n                        /**\n                         * PartOfSpeech voice.\n                         * @member {google.cloud.language.v1.PartOfSpeech.Voice} voice\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.voice = 0;\n    \n                        /**\n                         * Creates a new PartOfSpeech instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @static\n                         * @param {google.cloud.language.v1.IPartOfSpeech=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.PartOfSpeech} PartOfSpeech instance\n                         */\n                        PartOfSpeech.create = function create(properties) {\n                            return new PartOfSpeech(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified PartOfSpeech message. Does not implicitly {@link google.cloud.language.v1.PartOfSpeech.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @static\n                         * @param {google.cloud.language.v1.IPartOfSpeech} message PartOfSpeech message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        PartOfSpeech.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tag);\n                            if (message.aspect != null && message.hasOwnProperty(\"aspect\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.aspect);\n                            if (message[\"case\"] != null && message.hasOwnProperty(\"case\"))\n                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message[\"case\"]);\n                            if (message.form != null && message.hasOwnProperty(\"form\"))\n                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.form);\n                            if (message.gender != null && message.hasOwnProperty(\"gender\"))\n                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.gender);\n                            if (message.mood != null && message.hasOwnProperty(\"mood\"))\n                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.mood);\n                            if (message.number != null && message.hasOwnProperty(\"number\"))\n                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.number);\n                            if (message.person != null && message.hasOwnProperty(\"person\"))\n                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.person);\n                            if (message.proper != null && message.hasOwnProperty(\"proper\"))\n                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.proper);\n                            if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\"))\n                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.reciprocity);\n                            if (message.tense != null && message.hasOwnProperty(\"tense\"))\n                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.tense);\n                            if (message.voice != null && message.hasOwnProperty(\"voice\"))\n                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.voice);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified PartOfSpeech message, length delimited. Does not implicitly {@link google.cloud.language.v1.PartOfSpeech.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @static\n                         * @param {google.cloud.language.v1.IPartOfSpeech} message PartOfSpeech message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        PartOfSpeech.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a PartOfSpeech message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.PartOfSpeech} PartOfSpeech\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        PartOfSpeech.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.PartOfSpeech();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.tag = reader.int32();\n                                    break;\n                                case 2:\n                                    message.aspect = reader.int32();\n                                    break;\n                                case 3:\n                                    message[\"case\"] = reader.int32();\n                                    break;\n                                case 4:\n                                    message.form = reader.int32();\n                                    break;\n                                case 5:\n                                    message.gender = reader.int32();\n                                    break;\n                                case 6:\n                                    message.mood = reader.int32();\n                                    break;\n                                case 7:\n                                    message.number = reader.int32();\n                                    break;\n                                case 8:\n                                    message.person = reader.int32();\n                                    break;\n                                case 9:\n                                    message.proper = reader.int32();\n                                    break;\n                                case 10:\n                                    message.reciprocity = reader.int32();\n                                    break;\n                                case 11:\n                                    message.tense = reader.int32();\n                                    break;\n                                case 12:\n                                    message.voice = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a PartOfSpeech message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.PartOfSpeech} PartOfSpeech\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        PartOfSpeech.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a PartOfSpeech message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        PartOfSpeech.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                                switch (message.tag) {\n                                default:\n                                    return \"tag: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 10:\n                                case 11:\n                                case 12:\n                                case 13:\n                                    break;\n                                }\n                            if (message.aspect != null && message.hasOwnProperty(\"aspect\"))\n                                switch (message.aspect) {\n                                default:\n                                    return \"aspect: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            if (message[\"case\"] != null && message.hasOwnProperty(\"case\"))\n                                switch (message[\"case\"]) {\n                                default:\n                                    return \"case: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 10:\n                                case 11:\n                                case 12:\n                                case 13:\n                                case 14:\n                                    break;\n                                }\n                            if (message.form != null && message.hasOwnProperty(\"form\"))\n                                switch (message.form) {\n                                default:\n                                    return \"form: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 10:\n                                case 11:\n                                    break;\n                                }\n                            if (message.gender != null && message.hasOwnProperty(\"gender\"))\n                                switch (message.gender) {\n                                default:\n                                    return \"gender: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            if (message.mood != null && message.hasOwnProperty(\"mood\"))\n                                switch (message.mood) {\n                                default:\n                                    return \"mood: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                    break;\n                                }\n                            if (message.number != null && message.hasOwnProperty(\"number\"))\n                                switch (message.number) {\n                                default:\n                                    return \"number: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            if (message.person != null && message.hasOwnProperty(\"person\"))\n                                switch (message.person) {\n                                default:\n                                    return \"person: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                    break;\n                                }\n                            if (message.proper != null && message.hasOwnProperty(\"proper\"))\n                                switch (message.proper) {\n                                default:\n                                    return \"proper: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                    break;\n                                }\n                            if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\"))\n                                switch (message.reciprocity) {\n                                default:\n                                    return \"reciprocity: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                    break;\n                                }\n                            if (message.tense != null && message.hasOwnProperty(\"tense\"))\n                                switch (message.tense) {\n                                default:\n                                    return \"tense: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                    break;\n                                }\n                            if (message.voice != null && message.hasOwnProperty(\"voice\"))\n                                switch (message.voice) {\n                                default:\n                                    return \"voice: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a PartOfSpeech message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.PartOfSpeech} PartOfSpeech\n                         */\n                        PartOfSpeech.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.PartOfSpeech)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.PartOfSpeech();\n                            switch (object.tag) {\n                            case \"UNKNOWN\":\n                            case 0:\n                                message.tag = 0;\n                                break;\n                            case \"ADJ\":\n                            case 1:\n                                message.tag = 1;\n                                break;\n                            case \"ADP\":\n                            case 2:\n                                message.tag = 2;\n                                break;\n                            case \"ADV\":\n                            case 3:\n                                message.tag = 3;\n                                break;\n                            case \"CONJ\":\n                            case 4:\n                                message.tag = 4;\n                                break;\n                            case \"DET\":\n                            case 5:\n                                message.tag = 5;\n                                break;\n                            case \"NOUN\":\n                            case 6:\n                                message.tag = 6;\n                                break;\n                            case \"NUM\":\n                            case 7:\n                                message.tag = 7;\n                                break;\n                            case \"PRON\":\n                            case 8:\n                                message.tag = 8;\n                                break;\n                            case \"PRT\":\n                            case 9:\n                                message.tag = 9;\n                                break;\n                            case \"PUNCT\":\n                            case 10:\n                                message.tag = 10;\n                                break;\n                            case \"VERB\":\n                            case 11:\n                                message.tag = 11;\n                                break;\n                            case \"X\":\n                            case 12:\n                                message.tag = 12;\n                                break;\n                            case \"AFFIX\":\n                            case 13:\n                                message.tag = 13;\n                                break;\n                            }\n                            switch (object.aspect) {\n                            case \"ASPECT_UNKNOWN\":\n                            case 0:\n                                message.aspect = 0;\n                                break;\n                            case \"PERFECTIVE\":\n                            case 1:\n                                message.aspect = 1;\n                                break;\n                            case \"IMPERFECTIVE\":\n                            case 2:\n                                message.aspect = 2;\n                                break;\n                            case \"PROGRESSIVE\":\n                            case 3:\n                                message.aspect = 3;\n                                break;\n                            }\n                            switch (object[\"case\"]) {\n                            case \"CASE_UNKNOWN\":\n                            case 0:\n                                message[\"case\"] = 0;\n                                break;\n                            case \"ACCUSATIVE\":\n                            case 1:\n                                message[\"case\"] = 1;\n                                break;\n                            case \"ADVERBIAL\":\n                            case 2:\n                                message[\"case\"] = 2;\n                                break;\n                            case \"COMPLEMENTIVE\":\n                            case 3:\n                                message[\"case\"] = 3;\n                                break;\n                            case \"DATIVE\":\n                            case 4:\n                                message[\"case\"] = 4;\n                                break;\n                            case \"GENITIVE\":\n                            case 5:\n                                message[\"case\"] = 5;\n                                break;\n                            case \"INSTRUMENTAL\":\n                            case 6:\n                                message[\"case\"] = 6;\n                                break;\n                            case \"LOCATIVE\":\n                            case 7:\n                                message[\"case\"] = 7;\n                                break;\n                            case \"NOMINATIVE\":\n                            case 8:\n                                message[\"case\"] = 8;\n                                break;\n                            case \"OBLIQUE\":\n                            case 9:\n                                message[\"case\"] = 9;\n                                break;\n                            case \"PARTITIVE\":\n                            case 10:\n                                message[\"case\"] = 10;\n                                break;\n                            case \"PREPOSITIONAL\":\n                            case 11:\n                                message[\"case\"] = 11;\n                                break;\n                            case \"REFLEXIVE_CASE\":\n                            case 12:\n                                message[\"case\"] = 12;\n                                break;\n                            case \"RELATIVE_CASE\":\n                            case 13:\n                                message[\"case\"] = 13;\n                                break;\n                            case \"VOCATIVE\":\n                            case 14:\n                                message[\"case\"] = 14;\n                                break;\n                            }\n                            switch (object.form) {\n                            case \"FORM_UNKNOWN\":\n                            case 0:\n                                message.form = 0;\n                                break;\n                            case \"ADNOMIAL\":\n                            case 1:\n                                message.form = 1;\n                                break;\n                            case \"AUXILIARY\":\n                            case 2:\n                                message.form = 2;\n                                break;\n                            case \"COMPLEMENTIZER\":\n                            case 3:\n                                message.form = 3;\n                                break;\n                            case \"FINAL_ENDING\":\n                            case 4:\n                                message.form = 4;\n                                break;\n                            case \"GERUND\":\n                            case 5:\n                                message.form = 5;\n                                break;\n                            case \"REALIS\":\n                            case 6:\n                                message.form = 6;\n                                break;\n                            case \"IRREALIS\":\n                            case 7:\n                                message.form = 7;\n                                break;\n                            case \"SHORT\":\n                            case 8:\n                                message.form = 8;\n                                break;\n                            case \"LONG\":\n                            case 9:\n                                message.form = 9;\n                                break;\n                            case \"ORDER\":\n                            case 10:\n                                message.form = 10;\n                                break;\n                            case \"SPECIFIC\":\n                            case 11:\n                                message.form = 11;\n                                break;\n                            }\n                            switch (object.gender) {\n                            case \"GENDER_UNKNOWN\":\n                            case 0:\n                                message.gender = 0;\n                                break;\n                            case \"FEMININE\":\n                            case 1:\n                                message.gender = 1;\n                                break;\n                            case \"MASCULINE\":\n                            case 2:\n                                message.gender = 2;\n                                break;\n                            case \"NEUTER\":\n                            case 3:\n                                message.gender = 3;\n                                break;\n                            }\n                            switch (object.mood) {\n                            case \"MOOD_UNKNOWN\":\n                            case 0:\n                                message.mood = 0;\n                                break;\n                            case \"CONDITIONAL_MOOD\":\n                            case 1:\n                                message.mood = 1;\n                                break;\n                            case \"IMPERATIVE\":\n                            case 2:\n                                message.mood = 2;\n                                break;\n                            case \"INDICATIVE\":\n                            case 3:\n                                message.mood = 3;\n                                break;\n                            case \"INTERROGATIVE\":\n                            case 4:\n                                message.mood = 4;\n                                break;\n                            case \"JUSSIVE\":\n                            case 5:\n                                message.mood = 5;\n                                break;\n                            case \"SUBJUNCTIVE\":\n                            case 6:\n                                message.mood = 6;\n                                break;\n                            }\n                            switch (object.number) {\n                            case \"NUMBER_UNKNOWN\":\n                            case 0:\n                                message.number = 0;\n                                break;\n                            case \"SINGULAR\":\n                            case 1:\n                                message.number = 1;\n                                break;\n                            case \"PLURAL\":\n                            case 2:\n                                message.number = 2;\n                                break;\n                            case \"DUAL\":\n                            case 3:\n                                message.number = 3;\n                                break;\n                            }\n                            switch (object.person) {\n                            case \"PERSON_UNKNOWN\":\n                            case 0:\n                                message.person = 0;\n                                break;\n                            case \"FIRST\":\n                            case 1:\n                                message.person = 1;\n                                break;\n                            case \"SECOND\":\n                            case 2:\n                                message.person = 2;\n                                break;\n                            case \"THIRD\":\n                            case 3:\n                                message.person = 3;\n                                break;\n                            case \"REFLEXIVE_PERSON\":\n                            case 4:\n                                message.person = 4;\n                                break;\n                            }\n                            switch (object.proper) {\n                            case \"PROPER_UNKNOWN\":\n                            case 0:\n                                message.proper = 0;\n                                break;\n                            case \"PROPER\":\n                            case 1:\n                                message.proper = 1;\n                                break;\n                            case \"NOT_PROPER\":\n                            case 2:\n                                message.proper = 2;\n                                break;\n                            }\n                            switch (object.reciprocity) {\n                            case \"RECIPROCITY_UNKNOWN\":\n                            case 0:\n                                message.reciprocity = 0;\n                                break;\n                            case \"RECIPROCAL\":\n                            case 1:\n                                message.reciprocity = 1;\n                                break;\n                            case \"NON_RECIPROCAL\":\n                            case 2:\n                                message.reciprocity = 2;\n                                break;\n                            }\n                            switch (object.tense) {\n                            case \"TENSE_UNKNOWN\":\n                            case 0:\n                                message.tense = 0;\n                                break;\n                            case \"CONDITIONAL_TENSE\":\n                            case 1:\n                                message.tense = 1;\n                                break;\n                            case \"FUTURE\":\n                            case 2:\n                                message.tense = 2;\n                                break;\n                            case \"PAST\":\n                            case 3:\n                                message.tense = 3;\n                                break;\n                            case \"PRESENT\":\n                            case 4:\n                                message.tense = 4;\n                                break;\n                            case \"IMPERFECT\":\n                            case 5:\n                                message.tense = 5;\n                                break;\n                            case \"PLUPERFECT\":\n                            case 6:\n                                message.tense = 6;\n                                break;\n                            }\n                            switch (object.voice) {\n                            case \"VOICE_UNKNOWN\":\n                            case 0:\n                                message.voice = 0;\n                                break;\n                            case \"ACTIVE\":\n                            case 1:\n                                message.voice = 1;\n                                break;\n                            case \"CAUSATIVE\":\n                            case 2:\n                                message.voice = 2;\n                                break;\n                            case \"PASSIVE\":\n                            case 3:\n                                message.voice = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a PartOfSpeech message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @static\n                         * @param {google.cloud.language.v1.PartOfSpeech} message PartOfSpeech\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        PartOfSpeech.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.tag = options.enums === String ? \"UNKNOWN\" : 0;\n                                object.aspect = options.enums === String ? \"ASPECT_UNKNOWN\" : 0;\n                                object[\"case\"] = options.enums === String ? \"CASE_UNKNOWN\" : 0;\n                                object.form = options.enums === String ? \"FORM_UNKNOWN\" : 0;\n                                object.gender = options.enums === String ? \"GENDER_UNKNOWN\" : 0;\n                                object.mood = options.enums === String ? \"MOOD_UNKNOWN\" : 0;\n                                object.number = options.enums === String ? \"NUMBER_UNKNOWN\" : 0;\n                                object.person = options.enums === String ? \"PERSON_UNKNOWN\" : 0;\n                                object.proper = options.enums === String ? \"PROPER_UNKNOWN\" : 0;\n                                object.reciprocity = options.enums === String ? \"RECIPROCITY_UNKNOWN\" : 0;\n                                object.tense = options.enums === String ? \"TENSE_UNKNOWN\" : 0;\n                                object.voice = options.enums === String ? \"VOICE_UNKNOWN\" : 0;\n                            }\n                            if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                                object.tag = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Tag[message.tag] : message.tag;\n                            if (message.aspect != null && message.hasOwnProperty(\"aspect\"))\n                                object.aspect = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Aspect[message.aspect] : message.aspect;\n                            if (message[\"case\"] != null && message.hasOwnProperty(\"case\"))\n                                object[\"case\"] = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Case[message[\"case\"]] : message[\"case\"];\n                            if (message.form != null && message.hasOwnProperty(\"form\"))\n                                object.form = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Form[message.form] : message.form;\n                            if (message.gender != null && message.hasOwnProperty(\"gender\"))\n                                object.gender = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Gender[message.gender] : message.gender;\n                            if (message.mood != null && message.hasOwnProperty(\"mood\"))\n                                object.mood = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Mood[message.mood] : message.mood;\n                            if (message.number != null && message.hasOwnProperty(\"number\"))\n                                object.number = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Number[message.number] : message.number;\n                            if (message.person != null && message.hasOwnProperty(\"person\"))\n                                object.person = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Person[message.person] : message.person;\n                            if (message.proper != null && message.hasOwnProperty(\"proper\"))\n                                object.proper = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Proper[message.proper] : message.proper;\n                            if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\"))\n                                object.reciprocity = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Reciprocity[message.reciprocity] : message.reciprocity;\n                            if (message.tense != null && message.hasOwnProperty(\"tense\"))\n                                object.tense = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Tense[message.tense] : message.tense;\n                            if (message.voice != null && message.hasOwnProperty(\"voice\"))\n                                object.voice = options.enums === String ? $root.google.cloud.language.v1.PartOfSpeech.Voice[message.voice] : message.voice;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this PartOfSpeech to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.PartOfSpeech\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        PartOfSpeech.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Tag enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Tag\n                         * @enum {string}\n                         * @property {number} UNKNOWN=0 UNKNOWN value\n                         * @property {number} ADJ=1 ADJ value\n                         * @property {number} ADP=2 ADP value\n                         * @property {number} ADV=3 ADV value\n                         * @property {number} CONJ=4 CONJ value\n                         * @property {number} DET=5 DET value\n                         * @property {number} NOUN=6 NOUN value\n                         * @property {number} NUM=7 NUM value\n                         * @property {number} PRON=8 PRON value\n                         * @property {number} PRT=9 PRT value\n                         * @property {number} PUNCT=10 PUNCT value\n                         * @property {number} VERB=11 VERB value\n                         * @property {number} X=12 X value\n                         * @property {number} AFFIX=13 AFFIX value\n                         */\n                        PartOfSpeech.Tag = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ADJ\"] = 1;\n                            values[valuesById[2] = \"ADP\"] = 2;\n                            values[valuesById[3] = \"ADV\"] = 3;\n                            values[valuesById[4] = \"CONJ\"] = 4;\n                            values[valuesById[5] = \"DET\"] = 5;\n                            values[valuesById[6] = \"NOUN\"] = 6;\n                            values[valuesById[7] = \"NUM\"] = 7;\n                            values[valuesById[8] = \"PRON\"] = 8;\n                            values[valuesById[9] = \"PRT\"] = 9;\n                            values[valuesById[10] = \"PUNCT\"] = 10;\n                            values[valuesById[11] = \"VERB\"] = 11;\n                            values[valuesById[12] = \"X\"] = 12;\n                            values[valuesById[13] = \"AFFIX\"] = 13;\n                            return values;\n                        })();\n    \n                        /**\n                         * Aspect enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Aspect\n                         * @enum {string}\n                         * @property {number} ASPECT_UNKNOWN=0 ASPECT_UNKNOWN value\n                         * @property {number} PERFECTIVE=1 PERFECTIVE value\n                         * @property {number} IMPERFECTIVE=2 IMPERFECTIVE value\n                         * @property {number} PROGRESSIVE=3 PROGRESSIVE value\n                         */\n                        PartOfSpeech.Aspect = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"ASPECT_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"PERFECTIVE\"] = 1;\n                            values[valuesById[2] = \"IMPERFECTIVE\"] = 2;\n                            values[valuesById[3] = \"PROGRESSIVE\"] = 3;\n                            return values;\n                        })();\n    \n                        /**\n                         * Case enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Case\n                         * @enum {string}\n                         * @property {number} CASE_UNKNOWN=0 CASE_UNKNOWN value\n                         * @property {number} ACCUSATIVE=1 ACCUSATIVE value\n                         * @property {number} ADVERBIAL=2 ADVERBIAL value\n                         * @property {number} COMPLEMENTIVE=3 COMPLEMENTIVE value\n                         * @property {number} DATIVE=4 DATIVE value\n                         * @property {number} GENITIVE=5 GENITIVE value\n                         * @property {number} INSTRUMENTAL=6 INSTRUMENTAL value\n                         * @property {number} LOCATIVE=7 LOCATIVE value\n                         * @property {number} NOMINATIVE=8 NOMINATIVE value\n                         * @property {number} OBLIQUE=9 OBLIQUE value\n                         * @property {number} PARTITIVE=10 PARTITIVE value\n                         * @property {number} PREPOSITIONAL=11 PREPOSITIONAL value\n                         * @property {number} REFLEXIVE_CASE=12 REFLEXIVE_CASE value\n                         * @property {number} RELATIVE_CASE=13 RELATIVE_CASE value\n                         * @property {number} VOCATIVE=14 VOCATIVE value\n                         */\n                        PartOfSpeech.Case = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"CASE_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ACCUSATIVE\"] = 1;\n                            values[valuesById[2] = \"ADVERBIAL\"] = 2;\n                            values[valuesById[3] = \"COMPLEMENTIVE\"] = 3;\n                            values[valuesById[4] = \"DATIVE\"] = 4;\n                            values[valuesById[5] = \"GENITIVE\"] = 5;\n                            values[valuesById[6] = \"INSTRUMENTAL\"] = 6;\n                            values[valuesById[7] = \"LOCATIVE\"] = 7;\n                            values[valuesById[8] = \"NOMINATIVE\"] = 8;\n                            values[valuesById[9] = \"OBLIQUE\"] = 9;\n                            values[valuesById[10] = \"PARTITIVE\"] = 10;\n                            values[valuesById[11] = \"PREPOSITIONAL\"] = 11;\n                            values[valuesById[12] = \"REFLEXIVE_CASE\"] = 12;\n                            values[valuesById[13] = \"RELATIVE_CASE\"] = 13;\n                            values[valuesById[14] = \"VOCATIVE\"] = 14;\n                            return values;\n                        })();\n    \n                        /**\n                         * Form enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Form\n                         * @enum {string}\n                         * @property {number} FORM_UNKNOWN=0 FORM_UNKNOWN value\n                         * @property {number} ADNOMIAL=1 ADNOMIAL value\n                         * @property {number} AUXILIARY=2 AUXILIARY value\n                         * @property {number} COMPLEMENTIZER=3 COMPLEMENTIZER value\n                         * @property {number} FINAL_ENDING=4 FINAL_ENDING value\n                         * @property {number} GERUND=5 GERUND value\n                         * @property {number} REALIS=6 REALIS value\n                         * @property {number} IRREALIS=7 IRREALIS value\n                         * @property {number} SHORT=8 SHORT value\n                         * @property {number} LONG=9 LONG value\n                         * @property {number} ORDER=10 ORDER value\n                         * @property {number} SPECIFIC=11 SPECIFIC value\n                         */\n                        PartOfSpeech.Form = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"FORM_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ADNOMIAL\"] = 1;\n                            values[valuesById[2] = \"AUXILIARY\"] = 2;\n                            values[valuesById[3] = \"COMPLEMENTIZER\"] = 3;\n                            values[valuesById[4] = \"FINAL_ENDING\"] = 4;\n                            values[valuesById[5] = \"GERUND\"] = 5;\n                            values[valuesById[6] = \"REALIS\"] = 6;\n                            values[valuesById[7] = \"IRREALIS\"] = 7;\n                            values[valuesById[8] = \"SHORT\"] = 8;\n                            values[valuesById[9] = \"LONG\"] = 9;\n                            values[valuesById[10] = \"ORDER\"] = 10;\n                            values[valuesById[11] = \"SPECIFIC\"] = 11;\n                            return values;\n                        })();\n    \n                        /**\n                         * Gender enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Gender\n                         * @enum {string}\n                         * @property {number} GENDER_UNKNOWN=0 GENDER_UNKNOWN value\n                         * @property {number} FEMININE=1 FEMININE value\n                         * @property {number} MASCULINE=2 MASCULINE value\n                         * @property {number} NEUTER=3 NEUTER value\n                         */\n                        PartOfSpeech.Gender = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"GENDER_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"FEMININE\"] = 1;\n                            values[valuesById[2] = \"MASCULINE\"] = 2;\n                            values[valuesById[3] = \"NEUTER\"] = 3;\n                            return values;\n                        })();\n    \n                        /**\n                         * Mood enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Mood\n                         * @enum {string}\n                         * @property {number} MOOD_UNKNOWN=0 MOOD_UNKNOWN value\n                         * @property {number} CONDITIONAL_MOOD=1 CONDITIONAL_MOOD value\n                         * @property {number} IMPERATIVE=2 IMPERATIVE value\n                         * @property {number} INDICATIVE=3 INDICATIVE value\n                         * @property {number} INTERROGATIVE=4 INTERROGATIVE value\n                         * @property {number} JUSSIVE=5 JUSSIVE value\n                         * @property {number} SUBJUNCTIVE=6 SUBJUNCTIVE value\n                         */\n                        PartOfSpeech.Mood = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"MOOD_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"CONDITIONAL_MOOD\"] = 1;\n                            values[valuesById[2] = \"IMPERATIVE\"] = 2;\n                            values[valuesById[3] = \"INDICATIVE\"] = 3;\n                            values[valuesById[4] = \"INTERROGATIVE\"] = 4;\n                            values[valuesById[5] = \"JUSSIVE\"] = 5;\n                            values[valuesById[6] = \"SUBJUNCTIVE\"] = 6;\n                            return values;\n                        })();\n    \n                        /**\n                         * Number enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Number\n                         * @enum {string}\n                         * @property {number} NUMBER_UNKNOWN=0 NUMBER_UNKNOWN value\n                         * @property {number} SINGULAR=1 SINGULAR value\n                         * @property {number} PLURAL=2 PLURAL value\n                         * @property {number} DUAL=3 DUAL value\n                         */\n                        PartOfSpeech.Number = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"NUMBER_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"SINGULAR\"] = 1;\n                            values[valuesById[2] = \"PLURAL\"] = 2;\n                            values[valuesById[3] = \"DUAL\"] = 3;\n                            return values;\n                        })();\n    \n                        /**\n                         * Person enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Person\n                         * @enum {string}\n                         * @property {number} PERSON_UNKNOWN=0 PERSON_UNKNOWN value\n                         * @property {number} FIRST=1 FIRST value\n                         * @property {number} SECOND=2 SECOND value\n                         * @property {number} THIRD=3 THIRD value\n                         * @property {number} REFLEXIVE_PERSON=4 REFLEXIVE_PERSON value\n                         */\n                        PartOfSpeech.Person = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"PERSON_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"FIRST\"] = 1;\n                            values[valuesById[2] = \"SECOND\"] = 2;\n                            values[valuesById[3] = \"THIRD\"] = 3;\n                            values[valuesById[4] = \"REFLEXIVE_PERSON\"] = 4;\n                            return values;\n                        })();\n    \n                        /**\n                         * Proper enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Proper\n                         * @enum {string}\n                         * @property {number} PROPER_UNKNOWN=0 PROPER_UNKNOWN value\n                         * @property {number} PROPER=1 PROPER value\n                         * @property {number} NOT_PROPER=2 NOT_PROPER value\n                         */\n                        PartOfSpeech.Proper = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"PROPER_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"PROPER\"] = 1;\n                            values[valuesById[2] = \"NOT_PROPER\"] = 2;\n                            return values;\n                        })();\n    \n                        /**\n                         * Reciprocity enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Reciprocity\n                         * @enum {string}\n                         * @property {number} RECIPROCITY_UNKNOWN=0 RECIPROCITY_UNKNOWN value\n                         * @property {number} RECIPROCAL=1 RECIPROCAL value\n                         * @property {number} NON_RECIPROCAL=2 NON_RECIPROCAL value\n                         */\n                        PartOfSpeech.Reciprocity = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"RECIPROCITY_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"RECIPROCAL\"] = 1;\n                            values[valuesById[2] = \"NON_RECIPROCAL\"] = 2;\n                            return values;\n                        })();\n    \n                        /**\n                         * Tense enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Tense\n                         * @enum {string}\n                         * @property {number} TENSE_UNKNOWN=0 TENSE_UNKNOWN value\n                         * @property {number} CONDITIONAL_TENSE=1 CONDITIONAL_TENSE value\n                         * @property {number} FUTURE=2 FUTURE value\n                         * @property {number} PAST=3 PAST value\n                         * @property {number} PRESENT=4 PRESENT value\n                         * @property {number} IMPERFECT=5 IMPERFECT value\n                         * @property {number} PLUPERFECT=6 PLUPERFECT value\n                         */\n                        PartOfSpeech.Tense = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"TENSE_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"CONDITIONAL_TENSE\"] = 1;\n                            values[valuesById[2] = \"FUTURE\"] = 2;\n                            values[valuesById[3] = \"PAST\"] = 3;\n                            values[valuesById[4] = \"PRESENT\"] = 4;\n                            values[valuesById[5] = \"IMPERFECT\"] = 5;\n                            values[valuesById[6] = \"PLUPERFECT\"] = 6;\n                            return values;\n                        })();\n    \n                        /**\n                         * Voice enum.\n                         * @name google.cloud.language.v1.PartOfSpeech.Voice\n                         * @enum {string}\n                         * @property {number} VOICE_UNKNOWN=0 VOICE_UNKNOWN value\n                         * @property {number} ACTIVE=1 ACTIVE value\n                         * @property {number} CAUSATIVE=2 CAUSATIVE value\n                         * @property {number} PASSIVE=3 PASSIVE value\n                         */\n                        PartOfSpeech.Voice = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"VOICE_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ACTIVE\"] = 1;\n                            values[valuesById[2] = \"CAUSATIVE\"] = 2;\n                            values[valuesById[3] = \"PASSIVE\"] = 3;\n                            return values;\n                        })();\n    \n                        return PartOfSpeech;\n                    })();\n    \n                    v1.DependencyEdge = (function() {\n    \n                        /**\n                         * Properties of a DependencyEdge.\n                         * @memberof google.cloud.language.v1\n                         * @interface IDependencyEdge\n                         * @property {number|null} [headTokenIndex] DependencyEdge headTokenIndex\n                         * @property {google.cloud.language.v1.DependencyEdge.Label|null} [label] DependencyEdge label\n                         */\n    \n                        /**\n                         * Constructs a new DependencyEdge.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a DependencyEdge.\n                         * @implements IDependencyEdge\n                         * @constructor\n                         * @param {google.cloud.language.v1.IDependencyEdge=} [properties] Properties to set\n                         */\n                        function DependencyEdge(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * DependencyEdge headTokenIndex.\n                         * @member {number} headTokenIndex\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @instance\n                         */\n                        DependencyEdge.prototype.headTokenIndex = 0;\n    \n                        /**\n                         * DependencyEdge label.\n                         * @member {google.cloud.language.v1.DependencyEdge.Label} label\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @instance\n                         */\n                        DependencyEdge.prototype.label = 0;\n    \n                        /**\n                         * Creates a new DependencyEdge instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @static\n                         * @param {google.cloud.language.v1.IDependencyEdge=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.DependencyEdge} DependencyEdge instance\n                         */\n                        DependencyEdge.create = function create(properties) {\n                            return new DependencyEdge(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified DependencyEdge message. Does not implicitly {@link google.cloud.language.v1.DependencyEdge.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @static\n                         * @param {google.cloud.language.v1.IDependencyEdge} message DependencyEdge message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        DependencyEdge.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\"))\n                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.headTokenIndex);\n                            if (message.label != null && message.hasOwnProperty(\"label\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.label);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified DependencyEdge message, length delimited. Does not implicitly {@link google.cloud.language.v1.DependencyEdge.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @static\n                         * @param {google.cloud.language.v1.IDependencyEdge} message DependencyEdge message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        DependencyEdge.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a DependencyEdge message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.DependencyEdge} DependencyEdge\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        DependencyEdge.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.DependencyEdge();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.headTokenIndex = reader.int32();\n                                    break;\n                                case 2:\n                                    message.label = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a DependencyEdge message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.DependencyEdge} DependencyEdge\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        DependencyEdge.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a DependencyEdge message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        DependencyEdge.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\"))\n                                if (!$util.isInteger(message.headTokenIndex))\n                                    return \"headTokenIndex: integer expected\";\n                            if (message.label != null && message.hasOwnProperty(\"label\"))\n                                switch (message.label) {\n                                default:\n                                    return \"label: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 10:\n                                case 11:\n                                case 12:\n                                case 13:\n                                case 14:\n                                case 15:\n                                case 16:\n                                case 17:\n                                case 18:\n                                case 19:\n                                case 20:\n                                case 21:\n                                case 22:\n                                case 23:\n                                case 24:\n                                case 25:\n                                case 26:\n                                case 27:\n                                case 28:\n                                case 29:\n                                case 30:\n                                case 31:\n                                case 32:\n                                case 33:\n                                case 34:\n                                case 35:\n                                case 36:\n                                case 37:\n                                case 38:\n                                case 39:\n                                case 40:\n                                case 41:\n                                case 42:\n                                case 43:\n                                case 44:\n                                case 45:\n                                case 46:\n                                case 47:\n                                case 48:\n                                case 49:\n                                case 50:\n                                case 51:\n                                case 52:\n                                case 53:\n                                case 54:\n                                case 55:\n                                case 56:\n                                case 57:\n                                case 58:\n                                case 59:\n                                case 60:\n                                case 61:\n                                case 62:\n                                case 63:\n                                case 64:\n                                case 65:\n                                case 66:\n                                case 67:\n                                case 68:\n                                case 69:\n                                case 70:\n                                case 71:\n                                case 72:\n                                case 73:\n                                case 74:\n                                case 75:\n                                case 76:\n                                case 77:\n                                case 78:\n                                case 79:\n                                case 80:\n                                case 81:\n                                case 82:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a DependencyEdge message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.DependencyEdge} DependencyEdge\n                         */\n                        DependencyEdge.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.DependencyEdge)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.DependencyEdge();\n                            if (object.headTokenIndex != null)\n                                message.headTokenIndex = object.headTokenIndex | 0;\n                            switch (object.label) {\n                            case \"UNKNOWN\":\n                            case 0:\n                                message.label = 0;\n                                break;\n                            case \"ABBREV\":\n                            case 1:\n                                message.label = 1;\n                                break;\n                            case \"ACOMP\":\n                            case 2:\n                                message.label = 2;\n                                break;\n                            case \"ADVCL\":\n                            case 3:\n                                message.label = 3;\n                                break;\n                            case \"ADVMOD\":\n                            case 4:\n                                message.label = 4;\n                                break;\n                            case \"AMOD\":\n                            case 5:\n                                message.label = 5;\n                                break;\n                            case \"APPOS\":\n                            case 6:\n                                message.label = 6;\n                                break;\n                            case \"ATTR\":\n                            case 7:\n                                message.label = 7;\n                                break;\n                            case \"AUX\":\n                            case 8:\n                                message.label = 8;\n                                break;\n                            case \"AUXPASS\":\n                            case 9:\n                                message.label = 9;\n                                break;\n                            case \"CC\":\n                            case 10:\n                                message.label = 10;\n                                break;\n                            case \"CCOMP\":\n                            case 11:\n                                message.label = 11;\n                                break;\n                            case \"CONJ\":\n                            case 12:\n                                message.label = 12;\n                                break;\n                            case \"CSUBJ\":\n                            case 13:\n                                message.label = 13;\n                                break;\n                            case \"CSUBJPASS\":\n                            case 14:\n                                message.label = 14;\n                                break;\n                            case \"DEP\":\n                            case 15:\n                                message.label = 15;\n                                break;\n                            case \"DET\":\n                            case 16:\n                                message.label = 16;\n                                break;\n                            case \"DISCOURSE\":\n                            case 17:\n                                message.label = 17;\n                                break;\n                            case \"DOBJ\":\n                            case 18:\n                                message.label = 18;\n                                break;\n                            case \"EXPL\":\n                            case 19:\n                                message.label = 19;\n                                break;\n                            case \"GOESWITH\":\n                            case 20:\n                                message.label = 20;\n                                break;\n                            case \"IOBJ\":\n                            case 21:\n                                message.label = 21;\n                                break;\n                            case \"MARK\":\n                            case 22:\n                                message.label = 22;\n                                break;\n                            case \"MWE\":\n                            case 23:\n                                message.label = 23;\n                                break;\n                            case \"MWV\":\n                            case 24:\n                                message.label = 24;\n                                break;\n                            case \"NEG\":\n                            case 25:\n                                message.label = 25;\n                                break;\n                            case \"NN\":\n                            case 26:\n                                message.label = 26;\n                                break;\n                            case \"NPADVMOD\":\n                            case 27:\n                                message.label = 27;\n                                break;\n                            case \"NSUBJ\":\n                            case 28:\n                                message.label = 28;\n                                break;\n                            case \"NSUBJPASS\":\n                            case 29:\n                                message.label = 29;\n                                break;\n                            case \"NUM\":\n                            case 30:\n                                message.label = 30;\n                                break;\n                            case \"NUMBER\":\n                            case 31:\n                                message.label = 31;\n                                break;\n                            case \"P\":\n                            case 32:\n                                message.label = 32;\n                                break;\n                            case \"PARATAXIS\":\n                            case 33:\n                                message.label = 33;\n                                break;\n                            case \"PARTMOD\":\n                            case 34:\n                                message.label = 34;\n                                break;\n                            case \"PCOMP\":\n                            case 35:\n                                message.label = 35;\n                                break;\n                            case \"POBJ\":\n                            case 36:\n                                message.label = 36;\n                                break;\n                            case \"POSS\":\n                            case 37:\n                                message.label = 37;\n                                break;\n                            case \"POSTNEG\":\n                            case 38:\n                                message.label = 38;\n                                break;\n                            case \"PRECOMP\":\n                            case 39:\n                                message.label = 39;\n                                break;\n                            case \"PRECONJ\":\n                            case 40:\n                                message.label = 40;\n                                break;\n                            case \"PREDET\":\n                            case 41:\n                                message.label = 41;\n                                break;\n                            case \"PREF\":\n                            case 42:\n                                message.label = 42;\n                                break;\n                            case \"PREP\":\n                            case 43:\n                                message.label = 43;\n                                break;\n                            case \"PRONL\":\n                            case 44:\n                                message.label = 44;\n                                break;\n                            case \"PRT\":\n                            case 45:\n                                message.label = 45;\n                                break;\n                            case \"PS\":\n                            case 46:\n                                message.label = 46;\n                                break;\n                            case \"QUANTMOD\":\n                            case 47:\n                                message.label = 47;\n                                break;\n                            case \"RCMOD\":\n                            case 48:\n                                message.label = 48;\n                                break;\n                            case \"RCMODREL\":\n                            case 49:\n                                message.label = 49;\n                                break;\n                            case \"RDROP\":\n                            case 50:\n                                message.label = 50;\n                                break;\n                            case \"REF\":\n                            case 51:\n                                message.label = 51;\n                                break;\n                            case \"REMNANT\":\n                            case 52:\n                                message.label = 52;\n                                break;\n                            case \"REPARANDUM\":\n                            case 53:\n                                message.label = 53;\n                                break;\n                            case \"ROOT\":\n                            case 54:\n                                message.label = 54;\n                                break;\n                            case \"SNUM\":\n                            case 55:\n                                message.label = 55;\n                                break;\n                            case \"SUFF\":\n                            case 56:\n                                message.label = 56;\n                                break;\n                            case \"TMOD\":\n                            case 57:\n                                message.label = 57;\n                                break;\n                            case \"TOPIC\":\n                            case 58:\n                                message.label = 58;\n                                break;\n                            case \"VMOD\":\n                            case 59:\n                                message.label = 59;\n                                break;\n                            case \"VOCATIVE\":\n                            case 60:\n                                message.label = 60;\n                                break;\n                            case \"XCOMP\":\n                            case 61:\n                                message.label = 61;\n                                break;\n                            case \"SUFFIX\":\n                            case 62:\n                                message.label = 62;\n                                break;\n                            case \"TITLE\":\n                            case 63:\n                                message.label = 63;\n                                break;\n                            case \"ADVPHMOD\":\n                            case 64:\n                                message.label = 64;\n                                break;\n                            case \"AUXCAUS\":\n                            case 65:\n                                message.label = 65;\n                                break;\n                            case \"AUXVV\":\n                            case 66:\n                                message.label = 66;\n                                break;\n                            case \"DTMOD\":\n                            case 67:\n                                message.label = 67;\n                                break;\n                            case \"FOREIGN\":\n                            case 68:\n                                message.label = 68;\n                                break;\n                            case \"KW\":\n                            case 69:\n                                message.label = 69;\n                                break;\n                            case \"LIST\":\n                            case 70:\n                                message.label = 70;\n                                break;\n                            case \"NOMC\":\n                            case 71:\n                                message.label = 71;\n                                break;\n                            case \"NOMCSUBJ\":\n                            case 72:\n                                message.label = 72;\n                                break;\n                            case \"NOMCSUBJPASS\":\n                            case 73:\n                                message.label = 73;\n                                break;\n                            case \"NUMC\":\n                            case 74:\n                                message.label = 74;\n                                break;\n                            case \"COP\":\n                            case 75:\n                                message.label = 75;\n                                break;\n                            case \"DISLOCATED\":\n                            case 76:\n                                message.label = 76;\n                                break;\n                            case \"ASP\":\n                            case 77:\n                                message.label = 77;\n                                break;\n                            case \"GMOD\":\n                            case 78:\n                                message.label = 78;\n                                break;\n                            case \"GOBJ\":\n                            case 79:\n                                message.label = 79;\n                                break;\n                            case \"INFMOD\":\n                            case 80:\n                                message.label = 80;\n                                break;\n                            case \"MES\":\n                            case 81:\n                                message.label = 81;\n                                break;\n                            case \"NCOMP\":\n                            case 82:\n                                message.label = 82;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a DependencyEdge message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @static\n                         * @param {google.cloud.language.v1.DependencyEdge} message DependencyEdge\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        DependencyEdge.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.headTokenIndex = 0;\n                                object.label = options.enums === String ? \"UNKNOWN\" : 0;\n                            }\n                            if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\"))\n                                object.headTokenIndex = message.headTokenIndex;\n                            if (message.label != null && message.hasOwnProperty(\"label\"))\n                                object.label = options.enums === String ? $root.google.cloud.language.v1.DependencyEdge.Label[message.label] : message.label;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this DependencyEdge to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.DependencyEdge\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        DependencyEdge.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Label enum.\n                         * @name google.cloud.language.v1.DependencyEdge.Label\n                         * @enum {string}\n                         * @property {number} UNKNOWN=0 UNKNOWN value\n                         * @property {number} ABBREV=1 ABBREV value\n                         * @property {number} ACOMP=2 ACOMP value\n                         * @property {number} ADVCL=3 ADVCL value\n                         * @property {number} ADVMOD=4 ADVMOD value\n                         * @property {number} AMOD=5 AMOD value\n                         * @property {number} APPOS=6 APPOS value\n                         * @property {number} ATTR=7 ATTR value\n                         * @property {number} AUX=8 AUX value\n                         * @property {number} AUXPASS=9 AUXPASS value\n                         * @property {number} CC=10 CC value\n                         * @property {number} CCOMP=11 CCOMP value\n                         * @property {number} CONJ=12 CONJ value\n                         * @property {number} CSUBJ=13 CSUBJ value\n                         * @property {number} CSUBJPASS=14 CSUBJPASS value\n                         * @property {number} DEP=15 DEP value\n                         * @property {number} DET=16 DET value\n                         * @property {number} DISCOURSE=17 DISCOURSE value\n                         * @property {number} DOBJ=18 DOBJ value\n                         * @property {number} EXPL=19 EXPL value\n                         * @property {number} GOESWITH=20 GOESWITH value\n                         * @property {number} IOBJ=21 IOBJ value\n                         * @property {number} MARK=22 MARK value\n                         * @property {number} MWE=23 MWE value\n                         * @property {number} MWV=24 MWV value\n                         * @property {number} NEG=25 NEG value\n                         * @property {number} NN=26 NN value\n                         * @property {number} NPADVMOD=27 NPADVMOD value\n                         * @property {number} NSUBJ=28 NSUBJ value\n                         * @property {number} NSUBJPASS=29 NSUBJPASS value\n                         * @property {number} NUM=30 NUM value\n                         * @property {number} NUMBER=31 NUMBER value\n                         * @property {number} P=32 P value\n                         * @property {number} PARATAXIS=33 PARATAXIS value\n                         * @property {number} PARTMOD=34 PARTMOD value\n                         * @property {number} PCOMP=35 PCOMP value\n                         * @property {number} POBJ=36 POBJ value\n                         * @property {number} POSS=37 POSS value\n                         * @property {number} POSTNEG=38 POSTNEG value\n                         * @property {number} PRECOMP=39 PRECOMP value\n                         * @property {number} PRECONJ=40 PRECONJ value\n                         * @property {number} PREDET=41 PREDET value\n                         * @property {number} PREF=42 PREF value\n                         * @property {number} PREP=43 PREP value\n                         * @property {number} PRONL=44 PRONL value\n                         * @property {number} PRT=45 PRT value\n                         * @property {number} PS=46 PS value\n                         * @property {number} QUANTMOD=47 QUANTMOD value\n                         * @property {number} RCMOD=48 RCMOD value\n                         * @property {number} RCMODREL=49 RCMODREL value\n                         * @property {number} RDROP=50 RDROP value\n                         * @property {number} REF=51 REF value\n                         * @property {number} REMNANT=52 REMNANT value\n                         * @property {number} REPARANDUM=53 REPARANDUM value\n                         * @property {number} ROOT=54 ROOT value\n                         * @property {number} SNUM=55 SNUM value\n                         * @property {number} SUFF=56 SUFF value\n                         * @property {number} TMOD=57 TMOD value\n                         * @property {number} TOPIC=58 TOPIC value\n                         * @property {number} VMOD=59 VMOD value\n                         * @property {number} VOCATIVE=60 VOCATIVE value\n                         * @property {number} XCOMP=61 XCOMP value\n                         * @property {number} SUFFIX=62 SUFFIX value\n                         * @property {number} TITLE=63 TITLE value\n                         * @property {number} ADVPHMOD=64 ADVPHMOD value\n                         * @property {number} AUXCAUS=65 AUXCAUS value\n                         * @property {number} AUXVV=66 AUXVV value\n                         * @property {number} DTMOD=67 DTMOD value\n                         * @property {number} FOREIGN=68 FOREIGN value\n                         * @property {number} KW=69 KW value\n                         * @property {number} LIST=70 LIST value\n                         * @property {number} NOMC=71 NOMC value\n                         * @property {number} NOMCSUBJ=72 NOMCSUBJ value\n                         * @property {number} NOMCSUBJPASS=73 NOMCSUBJPASS value\n                         * @property {number} NUMC=74 NUMC value\n                         * @property {number} COP=75 COP value\n                         * @property {number} DISLOCATED=76 DISLOCATED value\n                         * @property {number} ASP=77 ASP value\n                         * @property {number} GMOD=78 GMOD value\n                         * @property {number} GOBJ=79 GOBJ value\n                         * @property {number} INFMOD=80 INFMOD value\n                         * @property {number} MES=81 MES value\n                         * @property {number} NCOMP=82 NCOMP value\n                         */\n                        DependencyEdge.Label = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ABBREV\"] = 1;\n                            values[valuesById[2] = \"ACOMP\"] = 2;\n                            values[valuesById[3] = \"ADVCL\"] = 3;\n                            values[valuesById[4] = \"ADVMOD\"] = 4;\n                            values[valuesById[5] = \"AMOD\"] = 5;\n                            values[valuesById[6] = \"APPOS\"] = 6;\n                            values[valuesById[7] = \"ATTR\"] = 7;\n                            values[valuesById[8] = \"AUX\"] = 8;\n                            values[valuesById[9] = \"AUXPASS\"] = 9;\n                            values[valuesById[10] = \"CC\"] = 10;\n                            values[valuesById[11] = \"CCOMP\"] = 11;\n                            values[valuesById[12] = \"CONJ\"] = 12;\n                            values[valuesById[13] = \"CSUBJ\"] = 13;\n                            values[valuesById[14] = \"CSUBJPASS\"] = 14;\n                            values[valuesById[15] = \"DEP\"] = 15;\n                            values[valuesById[16] = \"DET\"] = 16;\n                            values[valuesById[17] = \"DISCOURSE\"] = 17;\n                            values[valuesById[18] = \"DOBJ\"] = 18;\n                            values[valuesById[19] = \"EXPL\"] = 19;\n                            values[valuesById[20] = \"GOESWITH\"] = 20;\n                            values[valuesById[21] = \"IOBJ\"] = 21;\n                            values[valuesById[22] = \"MARK\"] = 22;\n                            values[valuesById[23] = \"MWE\"] = 23;\n                            values[valuesById[24] = \"MWV\"] = 24;\n                            values[valuesById[25] = \"NEG\"] = 25;\n                            values[valuesById[26] = \"NN\"] = 26;\n                            values[valuesById[27] = \"NPADVMOD\"] = 27;\n                            values[valuesById[28] = \"NSUBJ\"] = 28;\n                            values[valuesById[29] = \"NSUBJPASS\"] = 29;\n                            values[valuesById[30] = \"NUM\"] = 30;\n                            values[valuesById[31] = \"NUMBER\"] = 31;\n                            values[valuesById[32] = \"P\"] = 32;\n                            values[valuesById[33] = \"PARATAXIS\"] = 33;\n                            values[valuesById[34] = \"PARTMOD\"] = 34;\n                            values[valuesById[35] = \"PCOMP\"] = 35;\n                            values[valuesById[36] = \"POBJ\"] = 36;\n                            values[valuesById[37] = \"POSS\"] = 37;\n                            values[valuesById[38] = \"POSTNEG\"] = 38;\n                            values[valuesById[39] = \"PRECOMP\"] = 39;\n                            values[valuesById[40] = \"PRECONJ\"] = 40;\n                            values[valuesById[41] = \"PREDET\"] = 41;\n                            values[valuesById[42] = \"PREF\"] = 42;\n                            values[valuesById[43] = \"PREP\"] = 43;\n                            values[valuesById[44] = \"PRONL\"] = 44;\n                            values[valuesById[45] = \"PRT\"] = 45;\n                            values[valuesById[46] = \"PS\"] = 46;\n                            values[valuesById[47] = \"QUANTMOD\"] = 47;\n                            values[valuesById[48] = \"RCMOD\"] = 48;\n                            values[valuesById[49] = \"RCMODREL\"] = 49;\n                            values[valuesById[50] = \"RDROP\"] = 50;\n                            values[valuesById[51] = \"REF\"] = 51;\n                            values[valuesById[52] = \"REMNANT\"] = 52;\n                            values[valuesById[53] = \"REPARANDUM\"] = 53;\n                            values[valuesById[54] = \"ROOT\"] = 54;\n                            values[valuesById[55] = \"SNUM\"] = 55;\n                            values[valuesById[56] = \"SUFF\"] = 56;\n                            values[valuesById[57] = \"TMOD\"] = 57;\n                            values[valuesById[58] = \"TOPIC\"] = 58;\n                            values[valuesById[59] = \"VMOD\"] = 59;\n                            values[valuesById[60] = \"VOCATIVE\"] = 60;\n                            values[valuesById[61] = \"XCOMP\"] = 61;\n                            values[valuesById[62] = \"SUFFIX\"] = 62;\n                            values[valuesById[63] = \"TITLE\"] = 63;\n                            values[valuesById[64] = \"ADVPHMOD\"] = 64;\n                            values[valuesById[65] = \"AUXCAUS\"] = 65;\n                            values[valuesById[66] = \"AUXVV\"] = 66;\n                            values[valuesById[67] = \"DTMOD\"] = 67;\n                            values[valuesById[68] = \"FOREIGN\"] = 68;\n                            values[valuesById[69] = \"KW\"] = 69;\n                            values[valuesById[70] = \"LIST\"] = 70;\n                            values[valuesById[71] = \"NOMC\"] = 71;\n                            values[valuesById[72] = \"NOMCSUBJ\"] = 72;\n                            values[valuesById[73] = \"NOMCSUBJPASS\"] = 73;\n                            values[valuesById[74] = \"NUMC\"] = 74;\n                            values[valuesById[75] = \"COP\"] = 75;\n                            values[valuesById[76] = \"DISLOCATED\"] = 76;\n                            values[valuesById[77] = \"ASP\"] = 77;\n                            values[valuesById[78] = \"GMOD\"] = 78;\n                            values[valuesById[79] = \"GOBJ\"] = 79;\n                            values[valuesById[80] = \"INFMOD\"] = 80;\n                            values[valuesById[81] = \"MES\"] = 81;\n                            values[valuesById[82] = \"NCOMP\"] = 82;\n                            return values;\n                        })();\n    \n                        return DependencyEdge;\n                    })();\n    \n                    v1.EntityMention = (function() {\n    \n                        /**\n                         * Properties of an EntityMention.\n                         * @memberof google.cloud.language.v1\n                         * @interface IEntityMention\n                         * @property {google.cloud.language.v1.ITextSpan|null} [text] EntityMention text\n                         * @property {google.cloud.language.v1.EntityMention.Type|null} [type] EntityMention type\n                         * @property {google.cloud.language.v1.ISentiment|null} [sentiment] EntityMention sentiment\n                         */\n    \n                        /**\n                         * Constructs a new EntityMention.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an EntityMention.\n                         * @implements IEntityMention\n                         * @constructor\n                         * @param {google.cloud.language.v1.IEntityMention=} [properties] Properties to set\n                         */\n                        function EntityMention(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * EntityMention text.\n                         * @member {google.cloud.language.v1.ITextSpan|null|undefined} text\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @instance\n                         */\n                        EntityMention.prototype.text = null;\n    \n                        /**\n                         * EntityMention type.\n                         * @member {google.cloud.language.v1.EntityMention.Type} type\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @instance\n                         */\n                        EntityMention.prototype.type = 0;\n    \n                        /**\n                         * EntityMention sentiment.\n                         * @member {google.cloud.language.v1.ISentiment|null|undefined} sentiment\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @instance\n                         */\n                        EntityMention.prototype.sentiment = null;\n    \n                        /**\n                         * Creates a new EntityMention instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @static\n                         * @param {google.cloud.language.v1.IEntityMention=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.EntityMention} EntityMention instance\n                         */\n                        EntityMention.create = function create(properties) {\n                            return new EntityMention(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified EntityMention message. Does not implicitly {@link google.cloud.language.v1.EntityMention.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @static\n                         * @param {google.cloud.language.v1.IEntityMention} message EntityMention message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        EntityMention.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                $root.google.cloud.language.v1.TextSpan.encode(message.text, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                $root.google.cloud.language.v1.Sentiment.encode(message.sentiment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified EntityMention message, length delimited. Does not implicitly {@link google.cloud.language.v1.EntityMention.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @static\n                         * @param {google.cloud.language.v1.IEntityMention} message EntityMention message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        EntityMention.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an EntityMention message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.EntityMention} EntityMention\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        EntityMention.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.EntityMention();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.text = $root.google.cloud.language.v1.TextSpan.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.type = reader.int32();\n                                    break;\n                                case 3:\n                                    message.sentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an EntityMention message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.EntityMention} EntityMention\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        EntityMention.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an EntityMention message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        EntityMention.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.text != null && message.hasOwnProperty(\"text\")) {\n                                var error = $root.google.cloud.language.v1.TextSpan.verify(message.text);\n                                if (error)\n                                    return \"text.\" + error;\n                            }\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                switch (message.type) {\n                                default:\n                                    return \"type: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                    break;\n                                }\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                                var error = $root.google.cloud.language.v1.Sentiment.verify(message.sentiment);\n                                if (error)\n                                    return \"sentiment.\" + error;\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an EntityMention message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.EntityMention} EntityMention\n                         */\n                        EntityMention.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.EntityMention)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.EntityMention();\n                            if (object.text != null) {\n                                if (typeof object.text !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.EntityMention.text: object expected\");\n                                message.text = $root.google.cloud.language.v1.TextSpan.fromObject(object.text);\n                            }\n                            switch (object.type) {\n                            case \"TYPE_UNKNOWN\":\n                            case 0:\n                                message.type = 0;\n                                break;\n                            case \"PROPER\":\n                            case 1:\n                                message.type = 1;\n                                break;\n                            case \"COMMON\":\n                            case 2:\n                                message.type = 2;\n                                break;\n                            }\n                            if (object.sentiment != null) {\n                                if (typeof object.sentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.EntityMention.sentiment: object expected\");\n                                message.sentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.sentiment);\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an EntityMention message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @static\n                         * @param {google.cloud.language.v1.EntityMention} message EntityMention\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        EntityMention.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.text = null;\n                                object.type = options.enums === String ? \"TYPE_UNKNOWN\" : 0;\n                                object.sentiment = null;\n                            }\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                object.text = $root.google.cloud.language.v1.TextSpan.toObject(message.text, options);\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                object.type = options.enums === String ? $root.google.cloud.language.v1.EntityMention.Type[message.type] : message.type;\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                object.sentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.sentiment, options);\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this EntityMention to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.EntityMention\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        EntityMention.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Type enum.\n                         * @name google.cloud.language.v1.EntityMention.Type\n                         * @enum {string}\n                         * @property {number} TYPE_UNKNOWN=0 TYPE_UNKNOWN value\n                         * @property {number} PROPER=1 PROPER value\n                         * @property {number} COMMON=2 COMMON value\n                         */\n                        EntityMention.Type = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"TYPE_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"PROPER\"] = 1;\n                            values[valuesById[2] = \"COMMON\"] = 2;\n                            return values;\n                        })();\n    \n                        return EntityMention;\n                    })();\n    \n                    v1.TextSpan = (function() {\n    \n                        /**\n                         * Properties of a TextSpan.\n                         * @memberof google.cloud.language.v1\n                         * @interface ITextSpan\n                         * @property {string|null} [content] TextSpan content\n                         * @property {number|null} [beginOffset] TextSpan beginOffset\n                         */\n    \n                        /**\n                         * Constructs a new TextSpan.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a TextSpan.\n                         * @implements ITextSpan\n                         * @constructor\n                         * @param {google.cloud.language.v1.ITextSpan=} [properties] Properties to set\n                         */\n                        function TextSpan(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * TextSpan content.\n                         * @member {string} content\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @instance\n                         */\n                        TextSpan.prototype.content = \"\";\n    \n                        /**\n                         * TextSpan beginOffset.\n                         * @member {number} beginOffset\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @instance\n                         */\n                        TextSpan.prototype.beginOffset = 0;\n    \n                        /**\n                         * Creates a new TextSpan instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @static\n                         * @param {google.cloud.language.v1.ITextSpan=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.TextSpan} TextSpan instance\n                         */\n                        TextSpan.create = function create(properties) {\n                            return new TextSpan(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified TextSpan message. Does not implicitly {@link google.cloud.language.v1.TextSpan.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @static\n                         * @param {google.cloud.language.v1.ITextSpan} message TextSpan message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        TextSpan.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.content != null && message.hasOwnProperty(\"content\"))\n                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.content);\n                            if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.beginOffset);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified TextSpan message, length delimited. Does not implicitly {@link google.cloud.language.v1.TextSpan.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @static\n                         * @param {google.cloud.language.v1.ITextSpan} message TextSpan message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        TextSpan.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a TextSpan message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.TextSpan} TextSpan\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        TextSpan.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.TextSpan();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.content = reader.string();\n                                    break;\n                                case 2:\n                                    message.beginOffset = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a TextSpan message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.TextSpan} TextSpan\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        TextSpan.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a TextSpan message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        TextSpan.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.content != null && message.hasOwnProperty(\"content\"))\n                                if (!$util.isString(message.content))\n                                    return \"content: string expected\";\n                            if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\"))\n                                if (!$util.isInteger(message.beginOffset))\n                                    return \"beginOffset: integer expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a TextSpan message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.TextSpan} TextSpan\n                         */\n                        TextSpan.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.TextSpan)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.TextSpan();\n                            if (object.content != null)\n                                message.content = String(object.content);\n                            if (object.beginOffset != null)\n                                message.beginOffset = object.beginOffset | 0;\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a TextSpan message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @static\n                         * @param {google.cloud.language.v1.TextSpan} message TextSpan\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        TextSpan.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.content = \"\";\n                                object.beginOffset = 0;\n                            }\n                            if (message.content != null && message.hasOwnProperty(\"content\"))\n                                object.content = message.content;\n                            if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\"))\n                                object.beginOffset = message.beginOffset;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this TextSpan to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.TextSpan\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        TextSpan.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return TextSpan;\n                    })();\n    \n                    v1.ClassificationCategory = (function() {\n    \n                        /**\n                         * Properties of a ClassificationCategory.\n                         * @memberof google.cloud.language.v1\n                         * @interface IClassificationCategory\n                         * @property {string|null} [name] ClassificationCategory name\n                         * @property {number|null} [confidence] ClassificationCategory confidence\n                         */\n    \n                        /**\n                         * Constructs a new ClassificationCategory.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a ClassificationCategory.\n                         * @implements IClassificationCategory\n                         * @constructor\n                         * @param {google.cloud.language.v1.IClassificationCategory=} [properties] Properties to set\n                         */\n                        function ClassificationCategory(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * ClassificationCategory name.\n                         * @member {string} name\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @instance\n                         */\n                        ClassificationCategory.prototype.name = \"\";\n    \n                        /**\n                         * ClassificationCategory confidence.\n                         * @member {number} confidence\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @instance\n                         */\n                        ClassificationCategory.prototype.confidence = 0;\n    \n                        /**\n                         * Creates a new ClassificationCategory instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @static\n                         * @param {google.cloud.language.v1.IClassificationCategory=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.ClassificationCategory} ClassificationCategory instance\n                         */\n                        ClassificationCategory.create = function create(properties) {\n                            return new ClassificationCategory(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified ClassificationCategory message. Does not implicitly {@link google.cloud.language.v1.ClassificationCategory.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @static\n                         * @param {google.cloud.language.v1.IClassificationCategory} message ClassificationCategory message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassificationCategory.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                            if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified ClassificationCategory message, length delimited. Does not implicitly {@link google.cloud.language.v1.ClassificationCategory.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @static\n                         * @param {google.cloud.language.v1.IClassificationCategory} message ClassificationCategory message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassificationCategory.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a ClassificationCategory message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.ClassificationCategory} ClassificationCategory\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassificationCategory.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.ClassificationCategory();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.name = reader.string();\n                                    break;\n                                case 2:\n                                    message.confidence = reader.float();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a ClassificationCategory message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.ClassificationCategory} ClassificationCategory\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassificationCategory.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a ClassificationCategory message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        ClassificationCategory.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                if (!$util.isString(message.name))\n                                    return \"name: string expected\";\n                            if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n                                if (typeof message.confidence !== \"number\")\n                                    return \"confidence: number expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a ClassificationCategory message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.ClassificationCategory} ClassificationCategory\n                         */\n                        ClassificationCategory.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.ClassificationCategory)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.ClassificationCategory();\n                            if (object.name != null)\n                                message.name = String(object.name);\n                            if (object.confidence != null)\n                                message.confidence = Number(object.confidence);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a ClassificationCategory message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @static\n                         * @param {google.cloud.language.v1.ClassificationCategory} message ClassificationCategory\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        ClassificationCategory.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.name = \"\";\n                                object.confidence = 0;\n                            }\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                object.name = message.name;\n                            if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n                                object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this ClassificationCategory to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.ClassificationCategory\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        ClassificationCategory.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return ClassificationCategory;\n                    })();\n    \n                    v1.AnalyzeSentimentRequest = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeSentimentRequest.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnalyzeSentimentRequest\n                         * @property {google.cloud.language.v1.IDocument|null} [document] AnalyzeSentimentRequest document\n                         * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnalyzeSentimentRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeSentimentRequest.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnalyzeSentimentRequest.\n                         * @implements IAnalyzeSentimentRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentRequest=} [properties] Properties to set\n                         */\n                        function AnalyzeSentimentRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeSentimentRequest document.\n                         * @member {google.cloud.language.v1.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @instance\n                         */\n                        AnalyzeSentimentRequest.prototype.document = null;\n    \n                        /**\n                         * AnalyzeSentimentRequest encodingType.\n                         * @member {google.cloud.language.v1.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @instance\n                         */\n                        AnalyzeSentimentRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnalyzeSentimentRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnalyzeSentimentRequest} AnalyzeSentimentRequest instance\n                         */\n                        AnalyzeSentimentRequest.create = function create(properties) {\n                            return new AnalyzeSentimentRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSentimentRequest message. Does not implicitly {@link google.cloud.language.v1.AnalyzeSentimentRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentRequest} message AnalyzeSentimentRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSentimentRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSentimentRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeSentimentRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentRequest} message AnalyzeSentimentRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSentimentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSentimentRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSentimentRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnalyzeSentimentRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSentimentRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSentimentRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeSentimentRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeSentimentRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeSentimentRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n                         */\n                        AnalyzeSentimentRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnalyzeSentimentRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnalyzeSentimentRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeSentimentRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeSentimentRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1.AnalyzeSentimentRequest} message AnalyzeSentimentRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeSentimentRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeSentimentRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeSentimentRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeSentimentRequest;\n                    })();\n    \n                    v1.AnalyzeSentimentResponse = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeSentimentResponse.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnalyzeSentimentResponse\n                         * @property {google.cloud.language.v1.ISentiment|null} [documentSentiment] AnalyzeSentimentResponse documentSentiment\n                         * @property {string|null} [language] AnalyzeSentimentResponse language\n                         * @property {Array.<google.cloud.language.v1.ISentence>|null} [sentences] AnalyzeSentimentResponse sentences\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeSentimentResponse.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnalyzeSentimentResponse.\n                         * @implements IAnalyzeSentimentResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentResponse=} [properties] Properties to set\n                         */\n                        function AnalyzeSentimentResponse(properties) {\n                            this.sentences = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeSentimentResponse documentSentiment.\n                         * @member {google.cloud.language.v1.ISentiment|null|undefined} documentSentiment\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @instance\n                         */\n                        AnalyzeSentimentResponse.prototype.documentSentiment = null;\n    \n                        /**\n                         * AnalyzeSentimentResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @instance\n                         */\n                        AnalyzeSentimentResponse.prototype.language = \"\";\n    \n                        /**\n                         * AnalyzeSentimentResponse sentences.\n                         * @member {Array.<google.cloud.language.v1.ISentence>} sentences\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @instance\n                         */\n                        AnalyzeSentimentResponse.prototype.sentences = $util.emptyArray;\n    \n                        /**\n                         * Creates a new AnalyzeSentimentResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnalyzeSentimentResponse} AnalyzeSentimentResponse instance\n                         */\n                        AnalyzeSentimentResponse.create = function create(properties) {\n                            return new AnalyzeSentimentResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSentimentResponse message. Does not implicitly {@link google.cloud.language.v1.AnalyzeSentimentResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentResponse} message AnalyzeSentimentResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSentimentResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\"))\n                                $root.google.cloud.language.v1.Sentiment.encode(message.documentSentiment, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.language);\n                            if (message.sentences != null && message.sentences.length)\n                                for (var i = 0; i < message.sentences.length; ++i)\n                                    $root.google.cloud.language.v1.Sentence.encode(message.sentences[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSentimentResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeSentimentResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSentimentResponse} message AnalyzeSentimentResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSentimentResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSentimentResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSentimentResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnalyzeSentimentResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.documentSentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.language = reader.string();\n                                    break;\n                                case 3:\n                                    if (!(message.sentences && message.sentences.length))\n                                        message.sentences = [];\n                                    message.sentences.push($root.google.cloud.language.v1.Sentence.decode(reader, reader.uint32()));\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSentimentResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSentimentResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeSentimentResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeSentimentResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) {\n                                var error = $root.google.cloud.language.v1.Sentiment.verify(message.documentSentiment);\n                                if (error)\n                                    return \"documentSentiment.\" + error;\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                                if (!Array.isArray(message.sentences))\n                                    return \"sentences: array expected\";\n                                for (var i = 0; i < message.sentences.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.Sentence.verify(message.sentences[i]);\n                                    if (error)\n                                        return \"sentences.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeSentimentResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n                         */\n                        AnalyzeSentimentResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnalyzeSentimentResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnalyzeSentimentResponse();\n                            if (object.documentSentiment != null) {\n                                if (typeof object.documentSentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeSentimentResponse.documentSentiment: object expected\");\n                                message.documentSentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.documentSentiment);\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            if (object.sentences) {\n                                if (!Array.isArray(object.sentences))\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeSentimentResponse.sentences: array expected\");\n                                message.sentences = [];\n                                for (var i = 0; i < object.sentences.length; ++i) {\n                                    if (typeof object.sentences[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnalyzeSentimentResponse.sentences: object expected\");\n                                    message.sentences[i] = $root.google.cloud.language.v1.Sentence.fromObject(object.sentences[i]);\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeSentimentResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1.AnalyzeSentimentResponse} message AnalyzeSentimentResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeSentimentResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.sentences = [];\n                            if (options.defaults) {\n                                object.documentSentiment = null;\n                                object.language = \"\";\n                            }\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\"))\n                                object.documentSentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.documentSentiment, options);\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            if (message.sentences && message.sentences.length) {\n                                object.sentences = [];\n                                for (var j = 0; j < message.sentences.length; ++j)\n                                    object.sentences[j] = $root.google.cloud.language.v1.Sentence.toObject(message.sentences[j], options);\n                            }\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeSentimentResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnalyzeSentimentResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeSentimentResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeSentimentResponse;\n                    })();\n    \n                    v1.AnalyzeEntitySentimentRequest = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeEntitySentimentRequest.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnalyzeEntitySentimentRequest\n                         * @property {google.cloud.language.v1.IDocument|null} [document] AnalyzeEntitySentimentRequest document\n                         * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnalyzeEntitySentimentRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeEntitySentimentRequest.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnalyzeEntitySentimentRequest.\n                         * @implements IAnalyzeEntitySentimentRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest=} [properties] Properties to set\n                         */\n                        function AnalyzeEntitySentimentRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeEntitySentimentRequest document.\n                         * @member {google.cloud.language.v1.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @instance\n                         */\n                        AnalyzeEntitySentimentRequest.prototype.document = null;\n    \n                        /**\n                         * AnalyzeEntitySentimentRequest encodingType.\n                         * @member {google.cloud.language.v1.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @instance\n                         */\n                        AnalyzeEntitySentimentRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnalyzeEntitySentimentRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest instance\n                         */\n                        AnalyzeEntitySentimentRequest.create = function create(properties) {\n                            return new AnalyzeEntitySentimentRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitySentimentRequest message. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitySentimentRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitySentimentRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitySentimentRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitySentimentRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitySentimentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitySentimentRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitySentimentRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnalyzeEntitySentimentRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitySentimentRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitySentimentRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeEntitySentimentRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeEntitySentimentRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeEntitySentimentRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n                         */\n                        AnalyzeEntitySentimentRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnalyzeEntitySentimentRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnalyzeEntitySentimentRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeEntitySentimentRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeEntitySentimentRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1.AnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeEntitySentimentRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeEntitySentimentRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeEntitySentimentRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeEntitySentimentRequest;\n                    })();\n    \n                    v1.AnalyzeEntitySentimentResponse = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeEntitySentimentResponse.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnalyzeEntitySentimentResponse\n                         * @property {Array.<google.cloud.language.v1.IEntity>|null} [entities] AnalyzeEntitySentimentResponse entities\n                         * @property {string|null} [language] AnalyzeEntitySentimentResponse language\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeEntitySentimentResponse.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnalyzeEntitySentimentResponse.\n                         * @implements IAnalyzeEntitySentimentResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentResponse=} [properties] Properties to set\n                         */\n                        function AnalyzeEntitySentimentResponse(properties) {\n                            this.entities = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeEntitySentimentResponse entities.\n                         * @member {Array.<google.cloud.language.v1.IEntity>} entities\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @instance\n                         */\n                        AnalyzeEntitySentimentResponse.prototype.entities = $util.emptyArray;\n    \n                        /**\n                         * AnalyzeEntitySentimentResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @instance\n                         */\n                        AnalyzeEntitySentimentResponse.prototype.language = \"\";\n    \n                        /**\n                         * Creates a new AnalyzeEntitySentimentResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse instance\n                         */\n                        AnalyzeEntitySentimentResponse.create = function create(properties) {\n                            return new AnalyzeEntitySentimentResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitySentimentResponse message. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitySentimentResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitySentimentResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.entities != null && message.entities.length)\n                                for (var i = 0; i < message.entities.length; ++i)\n                                    $root.google.cloud.language.v1.Entity.encode(message.entities[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.language);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitySentimentResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitySentimentResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitySentimentResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitySentimentResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitySentimentResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnalyzeEntitySentimentResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.entities && message.entities.length))\n                                        message.entities = [];\n                                    message.entities.push($root.google.cloud.language.v1.Entity.decode(reader, reader.uint32()));\n                                    break;\n                                case 2:\n                                    message.language = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitySentimentResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitySentimentResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeEntitySentimentResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeEntitySentimentResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                                if (!Array.isArray(message.entities))\n                                    return \"entities: array expected\";\n                                for (var i = 0; i < message.entities.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.Entity.verify(message.entities[i]);\n                                    if (error)\n                                        return \"entities.\" + error;\n                                }\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeEntitySentimentResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n                         */\n                        AnalyzeEntitySentimentResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnalyzeEntitySentimentResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnalyzeEntitySentimentResponse();\n                            if (object.entities) {\n                                if (!Array.isArray(object.entities))\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeEntitySentimentResponse.entities: array expected\");\n                                message.entities = [];\n                                for (var i = 0; i < object.entities.length; ++i) {\n                                    if (typeof object.entities[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnalyzeEntitySentimentResponse.entities: object expected\");\n                                    message.entities[i] = $root.google.cloud.language.v1.Entity.fromObject(object.entities[i]);\n                                }\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeEntitySentimentResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1.AnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeEntitySentimentResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.entities = [];\n                            if (options.defaults)\n                                object.language = \"\";\n                            if (message.entities && message.entities.length) {\n                                object.entities = [];\n                                for (var j = 0; j < message.entities.length; ++j)\n                                    object.entities[j] = $root.google.cloud.language.v1.Entity.toObject(message.entities[j], options);\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeEntitySentimentResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnalyzeEntitySentimentResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeEntitySentimentResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeEntitySentimentResponse;\n                    })();\n    \n                    v1.AnalyzeEntitiesRequest = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeEntitiesRequest.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnalyzeEntitiesRequest\n                         * @property {google.cloud.language.v1.IDocument|null} [document] AnalyzeEntitiesRequest document\n                         * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnalyzeEntitiesRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeEntitiesRequest.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnalyzeEntitiesRequest.\n                         * @implements IAnalyzeEntitiesRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest=} [properties] Properties to set\n                         */\n                        function AnalyzeEntitiesRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeEntitiesRequest document.\n                         * @member {google.cloud.language.v1.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @instance\n                         */\n                        AnalyzeEntitiesRequest.prototype.document = null;\n    \n                        /**\n                         * AnalyzeEntitiesRequest encodingType.\n                         * @member {google.cloud.language.v1.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @instance\n                         */\n                        AnalyzeEntitiesRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnalyzeEntitiesRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest instance\n                         */\n                        AnalyzeEntitiesRequest.create = function create(properties) {\n                            return new AnalyzeEntitiesRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitiesRequest message. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitiesRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest} message AnalyzeEntitiesRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitiesRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitiesRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitiesRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesRequest} message AnalyzeEntitiesRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitiesRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitiesRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitiesRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnalyzeEntitiesRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitiesRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitiesRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeEntitiesRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeEntitiesRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeEntitiesRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n                         */\n                        AnalyzeEntitiesRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnalyzeEntitiesRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnalyzeEntitiesRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeEntitiesRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeEntitiesRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {google.cloud.language.v1.AnalyzeEntitiesRequest} message AnalyzeEntitiesRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeEntitiesRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeEntitiesRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeEntitiesRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeEntitiesRequest;\n                    })();\n    \n                    v1.AnalyzeEntitiesResponse = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeEntitiesResponse.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnalyzeEntitiesResponse\n                         * @property {Array.<google.cloud.language.v1.IEntity>|null} [entities] AnalyzeEntitiesResponse entities\n                         * @property {string|null} [language] AnalyzeEntitiesResponse language\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeEntitiesResponse.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnalyzeEntitiesResponse.\n                         * @implements IAnalyzeEntitiesResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesResponse=} [properties] Properties to set\n                         */\n                        function AnalyzeEntitiesResponse(properties) {\n                            this.entities = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeEntitiesResponse entities.\n                         * @member {Array.<google.cloud.language.v1.IEntity>} entities\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @instance\n                         */\n                        AnalyzeEntitiesResponse.prototype.entities = $util.emptyArray;\n    \n                        /**\n                         * AnalyzeEntitiesResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @instance\n                         */\n                        AnalyzeEntitiesResponse.prototype.language = \"\";\n    \n                        /**\n                         * Creates a new AnalyzeEntitiesResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse instance\n                         */\n                        AnalyzeEntitiesResponse.create = function create(properties) {\n                            return new AnalyzeEntitiesResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitiesResponse message. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitiesResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesResponse} message AnalyzeEntitiesResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitiesResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.entities != null && message.entities.length)\n                                for (var i = 0; i < message.entities.length; ++i)\n                                    $root.google.cloud.language.v1.Entity.encode(message.entities[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.language);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitiesResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeEntitiesResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeEntitiesResponse} message AnalyzeEntitiesResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitiesResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitiesResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitiesResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnalyzeEntitiesResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.entities && message.entities.length))\n                                        message.entities = [];\n                                    message.entities.push($root.google.cloud.language.v1.Entity.decode(reader, reader.uint32()));\n                                    break;\n                                case 2:\n                                    message.language = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitiesResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitiesResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeEntitiesResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeEntitiesResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                                if (!Array.isArray(message.entities))\n                                    return \"entities: array expected\";\n                                for (var i = 0; i < message.entities.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.Entity.verify(message.entities[i]);\n                                    if (error)\n                                        return \"entities.\" + error;\n                                }\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeEntitiesResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n                         */\n                        AnalyzeEntitiesResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnalyzeEntitiesResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnalyzeEntitiesResponse();\n                            if (object.entities) {\n                                if (!Array.isArray(object.entities))\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeEntitiesResponse.entities: array expected\");\n                                message.entities = [];\n                                for (var i = 0; i < object.entities.length; ++i) {\n                                    if (typeof object.entities[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnalyzeEntitiesResponse.entities: object expected\");\n                                    message.entities[i] = $root.google.cloud.language.v1.Entity.fromObject(object.entities[i]);\n                                }\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeEntitiesResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {google.cloud.language.v1.AnalyzeEntitiesResponse} message AnalyzeEntitiesResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeEntitiesResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.entities = [];\n                            if (options.defaults)\n                                object.language = \"\";\n                            if (message.entities && message.entities.length) {\n                                object.entities = [];\n                                for (var j = 0; j < message.entities.length; ++j)\n                                    object.entities[j] = $root.google.cloud.language.v1.Entity.toObject(message.entities[j], options);\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeEntitiesResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnalyzeEntitiesResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeEntitiesResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeEntitiesResponse;\n                    })();\n    \n                    v1.AnalyzeSyntaxRequest = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeSyntaxRequest.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnalyzeSyntaxRequest\n                         * @property {google.cloud.language.v1.IDocument|null} [document] AnalyzeSyntaxRequest document\n                         * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnalyzeSyntaxRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeSyntaxRequest.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnalyzeSyntaxRequest.\n                         * @implements IAnalyzeSyntaxRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest=} [properties] Properties to set\n                         */\n                        function AnalyzeSyntaxRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeSyntaxRequest document.\n                         * @member {google.cloud.language.v1.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @instance\n                         */\n                        AnalyzeSyntaxRequest.prototype.document = null;\n    \n                        /**\n                         * AnalyzeSyntaxRequest encodingType.\n                         * @member {google.cloud.language.v1.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @instance\n                         */\n                        AnalyzeSyntaxRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnalyzeSyntaxRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest instance\n                         */\n                        AnalyzeSyntaxRequest.create = function create(properties) {\n                            return new AnalyzeSyntaxRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSyntaxRequest message. Does not implicitly {@link google.cloud.language.v1.AnalyzeSyntaxRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest} message AnalyzeSyntaxRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSyntaxRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSyntaxRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeSyntaxRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxRequest} message AnalyzeSyntaxRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSyntaxRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSyntaxRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSyntaxRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnalyzeSyntaxRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSyntaxRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSyntaxRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeSyntaxRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeSyntaxRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeSyntaxRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n                         */\n                        AnalyzeSyntaxRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnalyzeSyntaxRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnalyzeSyntaxRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeSyntaxRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {google.cloud.language.v1.AnalyzeSyntaxRequest} message AnalyzeSyntaxRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeSyntaxRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeSyntaxRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeSyntaxRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeSyntaxRequest;\n                    })();\n    \n                    v1.AnalyzeSyntaxResponse = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeSyntaxResponse.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnalyzeSyntaxResponse\n                         * @property {Array.<google.cloud.language.v1.ISentence>|null} [sentences] AnalyzeSyntaxResponse sentences\n                         * @property {Array.<google.cloud.language.v1.IToken>|null} [tokens] AnalyzeSyntaxResponse tokens\n                         * @property {string|null} [language] AnalyzeSyntaxResponse language\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeSyntaxResponse.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnalyzeSyntaxResponse.\n                         * @implements IAnalyzeSyntaxResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxResponse=} [properties] Properties to set\n                         */\n                        function AnalyzeSyntaxResponse(properties) {\n                            this.sentences = [];\n                            this.tokens = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeSyntaxResponse sentences.\n                         * @member {Array.<google.cloud.language.v1.ISentence>} sentences\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @instance\n                         */\n                        AnalyzeSyntaxResponse.prototype.sentences = $util.emptyArray;\n    \n                        /**\n                         * AnalyzeSyntaxResponse tokens.\n                         * @member {Array.<google.cloud.language.v1.IToken>} tokens\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @instance\n                         */\n                        AnalyzeSyntaxResponse.prototype.tokens = $util.emptyArray;\n    \n                        /**\n                         * AnalyzeSyntaxResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @instance\n                         */\n                        AnalyzeSyntaxResponse.prototype.language = \"\";\n    \n                        /**\n                         * Creates a new AnalyzeSyntaxResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse instance\n                         */\n                        AnalyzeSyntaxResponse.create = function create(properties) {\n                            return new AnalyzeSyntaxResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSyntaxResponse message. Does not implicitly {@link google.cloud.language.v1.AnalyzeSyntaxResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxResponse} message AnalyzeSyntaxResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSyntaxResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.sentences != null && message.sentences.length)\n                                for (var i = 0; i < message.sentences.length; ++i)\n                                    $root.google.cloud.language.v1.Sentence.encode(message.sentences[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.tokens != null && message.tokens.length)\n                                for (var i = 0; i < message.tokens.length; ++i)\n                                    $root.google.cloud.language.v1.Token.encode(message.tokens[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.language);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSyntaxResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnalyzeSyntaxResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnalyzeSyntaxResponse} message AnalyzeSyntaxResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSyntaxResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSyntaxResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSyntaxResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnalyzeSyntaxResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.sentences && message.sentences.length))\n                                        message.sentences = [];\n                                    message.sentences.push($root.google.cloud.language.v1.Sentence.decode(reader, reader.uint32()));\n                                    break;\n                                case 2:\n                                    if (!(message.tokens && message.tokens.length))\n                                        message.tokens = [];\n                                    message.tokens.push($root.google.cloud.language.v1.Token.decode(reader, reader.uint32()));\n                                    break;\n                                case 3:\n                                    message.language = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSyntaxResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSyntaxResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeSyntaxResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeSyntaxResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                                if (!Array.isArray(message.sentences))\n                                    return \"sentences: array expected\";\n                                for (var i = 0; i < message.sentences.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.Sentence.verify(message.sentences[i]);\n                                    if (error)\n                                        return \"sentences.\" + error;\n                                }\n                            }\n                            if (message.tokens != null && message.hasOwnProperty(\"tokens\")) {\n                                if (!Array.isArray(message.tokens))\n                                    return \"tokens: array expected\";\n                                for (var i = 0; i < message.tokens.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.Token.verify(message.tokens[i]);\n                                    if (error)\n                                        return \"tokens.\" + error;\n                                }\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeSyntaxResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n                         */\n                        AnalyzeSyntaxResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnalyzeSyntaxResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnalyzeSyntaxResponse();\n                            if (object.sentences) {\n                                if (!Array.isArray(object.sentences))\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxResponse.sentences: array expected\");\n                                message.sentences = [];\n                                for (var i = 0; i < object.sentences.length; ++i) {\n                                    if (typeof object.sentences[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxResponse.sentences: object expected\");\n                                    message.sentences[i] = $root.google.cloud.language.v1.Sentence.fromObject(object.sentences[i]);\n                                }\n                            }\n                            if (object.tokens) {\n                                if (!Array.isArray(object.tokens))\n                                    throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxResponse.tokens: array expected\");\n                                message.tokens = [];\n                                for (var i = 0; i < object.tokens.length; ++i) {\n                                    if (typeof object.tokens[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnalyzeSyntaxResponse.tokens: object expected\");\n                                    message.tokens[i] = $root.google.cloud.language.v1.Token.fromObject(object.tokens[i]);\n                                }\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeSyntaxResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {google.cloud.language.v1.AnalyzeSyntaxResponse} message AnalyzeSyntaxResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeSyntaxResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults) {\n                                object.sentences = [];\n                                object.tokens = [];\n                            }\n                            if (options.defaults)\n                                object.language = \"\";\n                            if (message.sentences && message.sentences.length) {\n                                object.sentences = [];\n                                for (var j = 0; j < message.sentences.length; ++j)\n                                    object.sentences[j] = $root.google.cloud.language.v1.Sentence.toObject(message.sentences[j], options);\n                            }\n                            if (message.tokens && message.tokens.length) {\n                                object.tokens = [];\n                                for (var j = 0; j < message.tokens.length; ++j)\n                                    object.tokens[j] = $root.google.cloud.language.v1.Token.toObject(message.tokens[j], options);\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeSyntaxResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnalyzeSyntaxResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeSyntaxResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeSyntaxResponse;\n                    })();\n    \n                    v1.ClassifyTextRequest = (function() {\n    \n                        /**\n                         * Properties of a ClassifyTextRequest.\n                         * @memberof google.cloud.language.v1\n                         * @interface IClassifyTextRequest\n                         * @property {google.cloud.language.v1.IDocument|null} [document] ClassifyTextRequest document\n                         */\n    \n                        /**\n                         * Constructs a new ClassifyTextRequest.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a ClassifyTextRequest.\n                         * @implements IClassifyTextRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1.IClassifyTextRequest=} [properties] Properties to set\n                         */\n                        function ClassifyTextRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * ClassifyTextRequest document.\n                         * @member {google.cloud.language.v1.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @instance\n                         */\n                        ClassifyTextRequest.prototype.document = null;\n    \n                        /**\n                         * Creates a new ClassifyTextRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IClassifyTextRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.ClassifyTextRequest} ClassifyTextRequest instance\n                         */\n                        ClassifyTextRequest.create = function create(properties) {\n                            return new ClassifyTextRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified ClassifyTextRequest message. Does not implicitly {@link google.cloud.language.v1.ClassifyTextRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IClassifyTextRequest} message ClassifyTextRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassifyTextRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified ClassifyTextRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.ClassifyTextRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IClassifyTextRequest} message ClassifyTextRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassifyTextRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a ClassifyTextRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.ClassifyTextRequest} ClassifyTextRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassifyTextRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.ClassifyTextRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a ClassifyTextRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.ClassifyTextRequest} ClassifyTextRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassifyTextRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a ClassifyTextRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        ClassifyTextRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a ClassifyTextRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.ClassifyTextRequest} ClassifyTextRequest\n                         */\n                        ClassifyTextRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.ClassifyTextRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.ClassifyTextRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.ClassifyTextRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a ClassifyTextRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1.ClassifyTextRequest} message ClassifyTextRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        ClassifyTextRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults)\n                                object.document = null;\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this ClassifyTextRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.ClassifyTextRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        ClassifyTextRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return ClassifyTextRequest;\n                    })();\n    \n                    v1.ClassifyTextResponse = (function() {\n    \n                        /**\n                         * Properties of a ClassifyTextResponse.\n                         * @memberof google.cloud.language.v1\n                         * @interface IClassifyTextResponse\n                         * @property {Array.<google.cloud.language.v1.IClassificationCategory>|null} [categories] ClassifyTextResponse categories\n                         */\n    \n                        /**\n                         * Constructs a new ClassifyTextResponse.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents a ClassifyTextResponse.\n                         * @implements IClassifyTextResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1.IClassifyTextResponse=} [properties] Properties to set\n                         */\n                        function ClassifyTextResponse(properties) {\n                            this.categories = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * ClassifyTextResponse categories.\n                         * @member {Array.<google.cloud.language.v1.IClassificationCategory>} categories\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @instance\n                         */\n                        ClassifyTextResponse.prototype.categories = $util.emptyArray;\n    \n                        /**\n                         * Creates a new ClassifyTextResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IClassifyTextResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.ClassifyTextResponse} ClassifyTextResponse instance\n                         */\n                        ClassifyTextResponse.create = function create(properties) {\n                            return new ClassifyTextResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified ClassifyTextResponse message. Does not implicitly {@link google.cloud.language.v1.ClassifyTextResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IClassifyTextResponse} message ClassifyTextResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassifyTextResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.categories != null && message.categories.length)\n                                for (var i = 0; i < message.categories.length; ++i)\n                                    $root.google.cloud.language.v1.ClassificationCategory.encode(message.categories[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified ClassifyTextResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.ClassifyTextResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IClassifyTextResponse} message ClassifyTextResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassifyTextResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a ClassifyTextResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.ClassifyTextResponse} ClassifyTextResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassifyTextResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.ClassifyTextResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.categories && message.categories.length))\n                                        message.categories = [];\n                                    message.categories.push($root.google.cloud.language.v1.ClassificationCategory.decode(reader, reader.uint32()));\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a ClassifyTextResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.ClassifyTextResponse} ClassifyTextResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassifyTextResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a ClassifyTextResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        ClassifyTextResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.categories != null && message.hasOwnProperty(\"categories\")) {\n                                if (!Array.isArray(message.categories))\n                                    return \"categories: array expected\";\n                                for (var i = 0; i < message.categories.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.ClassificationCategory.verify(message.categories[i]);\n                                    if (error)\n                                        return \"categories.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a ClassifyTextResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.ClassifyTextResponse} ClassifyTextResponse\n                         */\n                        ClassifyTextResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.ClassifyTextResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.ClassifyTextResponse();\n                            if (object.categories) {\n                                if (!Array.isArray(object.categories))\n                                    throw TypeError(\".google.cloud.language.v1.ClassifyTextResponse.categories: array expected\");\n                                message.categories = [];\n                                for (var i = 0; i < object.categories.length; ++i) {\n                                    if (typeof object.categories[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.ClassifyTextResponse.categories: object expected\");\n                                    message.categories[i] = $root.google.cloud.language.v1.ClassificationCategory.fromObject(object.categories[i]);\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a ClassifyTextResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1.ClassifyTextResponse} message ClassifyTextResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        ClassifyTextResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.categories = [];\n                            if (message.categories && message.categories.length) {\n                                object.categories = [];\n                                for (var j = 0; j < message.categories.length; ++j)\n                                    object.categories[j] = $root.google.cloud.language.v1.ClassificationCategory.toObject(message.categories[j], options);\n                            }\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this ClassifyTextResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.ClassifyTextResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        ClassifyTextResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return ClassifyTextResponse;\n                    })();\n    \n                    v1.AnnotateTextRequest = (function() {\n    \n                        /**\n                         * Properties of an AnnotateTextRequest.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnnotateTextRequest\n                         * @property {google.cloud.language.v1.IDocument|null} [document] AnnotateTextRequest document\n                         * @property {google.cloud.language.v1.AnnotateTextRequest.IFeatures|null} [features] AnnotateTextRequest features\n                         * @property {google.cloud.language.v1.EncodingType|null} [encodingType] AnnotateTextRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnnotateTextRequest.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnnotateTextRequest.\n                         * @implements IAnnotateTextRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnnotateTextRequest=} [properties] Properties to set\n                         */\n                        function AnnotateTextRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnnotateTextRequest document.\n                         * @member {google.cloud.language.v1.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @instance\n                         */\n                        AnnotateTextRequest.prototype.document = null;\n    \n                        /**\n                         * AnnotateTextRequest features.\n                         * @member {google.cloud.language.v1.AnnotateTextRequest.IFeatures|null|undefined} features\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @instance\n                         */\n                        AnnotateTextRequest.prototype.features = null;\n    \n                        /**\n                         * AnnotateTextRequest encodingType.\n                         * @member {google.cloud.language.v1.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @instance\n                         */\n                        AnnotateTextRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnnotateTextRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnnotateTextRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnnotateTextRequest} AnnotateTextRequest instance\n                         */\n                        AnnotateTextRequest.create = function create(properties) {\n                            return new AnnotateTextRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnnotateTextRequest message. Does not implicitly {@link google.cloud.language.v1.AnnotateTextRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnnotateTextRequest} message AnnotateTextRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnnotateTextRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.features != null && message.hasOwnProperty(\"features\"))\n                                $root.google.cloud.language.v1.AnnotateTextRequest.Features.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnnotateTextRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnnotateTextRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1.IAnnotateTextRequest} message AnnotateTextRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnnotateTextRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnnotateTextRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnnotateTextRequest} AnnotateTextRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnnotateTextRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnnotateTextRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.features = $root.google.cloud.language.v1.AnnotateTextRequest.Features.decode(reader, reader.uint32());\n                                    break;\n                                case 3:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnnotateTextRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnnotateTextRequest} AnnotateTextRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnnotateTextRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnnotateTextRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnnotateTextRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.features != null && message.hasOwnProperty(\"features\")) {\n                                var error = $root.google.cloud.language.v1.AnnotateTextRequest.Features.verify(message.features);\n                                if (error)\n                                    return \"features.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnnotateTextRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnnotateTextRequest} AnnotateTextRequest\n                         */\n                        AnnotateTextRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnnotateTextRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnnotateTextRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.AnnotateTextRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1.Document.fromObject(object.document);\n                            }\n                            if (object.features != null) {\n                                if (typeof object.features !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.AnnotateTextRequest.features: object expected\");\n                                message.features = $root.google.cloud.language.v1.AnnotateTextRequest.Features.fromObject(object.features);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnnotateTextRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1.AnnotateTextRequest} message AnnotateTextRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnnotateTextRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.features = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1.Document.toObject(message.document, options);\n                            if (message.features != null && message.hasOwnProperty(\"features\"))\n                                object.features = $root.google.cloud.language.v1.AnnotateTextRequest.Features.toObject(message.features, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnnotateTextRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnnotateTextRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnnotateTextRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        AnnotateTextRequest.Features = (function() {\n    \n                            /**\n                             * Properties of a Features.\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest\n                             * @interface IFeatures\n                             * @property {boolean|null} [extractSyntax] Features extractSyntax\n                             * @property {boolean|null} [extractEntities] Features extractEntities\n                             * @property {boolean|null} [extractDocumentSentiment] Features extractDocumentSentiment\n                             * @property {boolean|null} [extractEntitySentiment] Features extractEntitySentiment\n                             * @property {boolean|null} [classifyText] Features classifyText\n                             */\n    \n                            /**\n                             * Constructs a new Features.\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest\n                             * @classdesc Represents a Features.\n                             * @implements IFeatures\n                             * @constructor\n                             * @param {google.cloud.language.v1.AnnotateTextRequest.IFeatures=} [properties] Properties to set\n                             */\n                            function Features(properties) {\n                                if (properties)\n                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                        if (properties[keys[i]] != null)\n                                            this[keys[i]] = properties[keys[i]];\n                            }\n    \n                            /**\n                             * Features extractSyntax.\n                             * @member {boolean} extractSyntax\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.extractSyntax = false;\n    \n                            /**\n                             * Features extractEntities.\n                             * @member {boolean} extractEntities\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.extractEntities = false;\n    \n                            /**\n                             * Features extractDocumentSentiment.\n                             * @member {boolean} extractDocumentSentiment\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.extractDocumentSentiment = false;\n    \n                            /**\n                             * Features extractEntitySentiment.\n                             * @member {boolean} extractEntitySentiment\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.extractEntitySentiment = false;\n    \n                            /**\n                             * Features classifyText.\n                             * @member {boolean} classifyText\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.classifyText = false;\n    \n                            /**\n                             * Creates a new Features instance using the specified properties.\n                             * @function create\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @static\n                             * @param {google.cloud.language.v1.AnnotateTextRequest.IFeatures=} [properties] Properties to set\n                             * @returns {google.cloud.language.v1.AnnotateTextRequest.Features} Features instance\n                             */\n                            Features.create = function create(properties) {\n                                return new Features(properties);\n                            };\n    \n                            /**\n                             * Encodes the specified Features message. Does not implicitly {@link google.cloud.language.v1.AnnotateTextRequest.Features.verify|verify} messages.\n                             * @function encode\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @static\n                             * @param {google.cloud.language.v1.AnnotateTextRequest.IFeatures} message Features message or plain object to encode\n                             * @param {$protobuf.Writer} [writer] Writer to encode to\n                             * @returns {$protobuf.Writer} Writer\n                             */\n                            Features.encode = function encode(message, writer) {\n                                if (!writer)\n                                    writer = $Writer.create();\n                                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\"))\n                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.extractSyntax);\n                                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\"))\n                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.extractEntities);\n                                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\"))\n                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.extractDocumentSentiment);\n                                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\"))\n                                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.extractEntitySentiment);\n                                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\"))\n                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.classifyText);\n                                return writer;\n                            };\n    \n                            /**\n                             * Encodes the specified Features message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnnotateTextRequest.Features.verify|verify} messages.\n                             * @function encodeDelimited\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @static\n                             * @param {google.cloud.language.v1.AnnotateTextRequest.IFeatures} message Features message or plain object to encode\n                             * @param {$protobuf.Writer} [writer] Writer to encode to\n                             * @returns {$protobuf.Writer} Writer\n                             */\n                            Features.encodeDelimited = function encodeDelimited(message, writer) {\n                                return this.encode(message, writer).ldelim();\n                            };\n    \n                            /**\n                             * Decodes a Features message from the specified reader or buffer.\n                             * @function decode\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @static\n                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                             * @param {number} [length] Message length if known beforehand\n                             * @returns {google.cloud.language.v1.AnnotateTextRequest.Features} Features\n                             * @throws {Error} If the payload is not a reader or valid buffer\n                             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                             */\n                            Features.decode = function decode(reader, length) {\n                                if (!(reader instanceof $Reader))\n                                    reader = $Reader.create(reader);\n                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnnotateTextRequest.Features();\n                                while (reader.pos < end) {\n                                    var tag = reader.uint32();\n                                    switch (tag >>> 3) {\n                                    case 1:\n                                        message.extractSyntax = reader.bool();\n                                        break;\n                                    case 2:\n                                        message.extractEntities = reader.bool();\n                                        break;\n                                    case 3:\n                                        message.extractDocumentSentiment = reader.bool();\n                                        break;\n                                    case 4:\n                                        message.extractEntitySentiment = reader.bool();\n                                        break;\n                                    case 6:\n                                        message.classifyText = reader.bool();\n                                        break;\n                                    default:\n                                        reader.skipType(tag & 7);\n                                        break;\n                                    }\n                                }\n                                return message;\n                            };\n    \n                            /**\n                             * Decodes a Features message from the specified reader or buffer, length delimited.\n                             * @function decodeDelimited\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @static\n                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                             * @returns {google.cloud.language.v1.AnnotateTextRequest.Features} Features\n                             * @throws {Error} If the payload is not a reader or valid buffer\n                             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                             */\n                            Features.decodeDelimited = function decodeDelimited(reader) {\n                                if (!(reader instanceof $Reader))\n                                    reader = new $Reader(reader);\n                                return this.decode(reader, reader.uint32());\n                            };\n    \n                            /**\n                             * Verifies a Features message.\n                             * @function verify\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @static\n                             * @param {Object.<string,*>} message Plain object to verify\n                             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                             */\n                            Features.verify = function verify(message) {\n                                if (typeof message !== \"object\" || message === null)\n                                    return \"object expected\";\n                                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\"))\n                                    if (typeof message.extractSyntax !== \"boolean\")\n                                        return \"extractSyntax: boolean expected\";\n                                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\"))\n                                    if (typeof message.extractEntities !== \"boolean\")\n                                        return \"extractEntities: boolean expected\";\n                                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\"))\n                                    if (typeof message.extractDocumentSentiment !== \"boolean\")\n                                        return \"extractDocumentSentiment: boolean expected\";\n                                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\"))\n                                    if (typeof message.extractEntitySentiment !== \"boolean\")\n                                        return \"extractEntitySentiment: boolean expected\";\n                                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\"))\n                                    if (typeof message.classifyText !== \"boolean\")\n                                        return \"classifyText: boolean expected\";\n                                return null;\n                            };\n    \n                            /**\n                             * Creates a Features message from a plain object. Also converts values to their respective internal types.\n                             * @function fromObject\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @static\n                             * @param {Object.<string,*>} object Plain object\n                             * @returns {google.cloud.language.v1.AnnotateTextRequest.Features} Features\n                             */\n                            Features.fromObject = function fromObject(object) {\n                                if (object instanceof $root.google.cloud.language.v1.AnnotateTextRequest.Features)\n                                    return object;\n                                var message = new $root.google.cloud.language.v1.AnnotateTextRequest.Features();\n                                if (object.extractSyntax != null)\n                                    message.extractSyntax = Boolean(object.extractSyntax);\n                                if (object.extractEntities != null)\n                                    message.extractEntities = Boolean(object.extractEntities);\n                                if (object.extractDocumentSentiment != null)\n                                    message.extractDocumentSentiment = Boolean(object.extractDocumentSentiment);\n                                if (object.extractEntitySentiment != null)\n                                    message.extractEntitySentiment = Boolean(object.extractEntitySentiment);\n                                if (object.classifyText != null)\n                                    message.classifyText = Boolean(object.classifyText);\n                                return message;\n                            };\n    \n                            /**\n                             * Creates a plain object from a Features message. Also converts values to other types if specified.\n                             * @function toObject\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @static\n                             * @param {google.cloud.language.v1.AnnotateTextRequest.Features} message Features\n                             * @param {$protobuf.IConversionOptions} [options] Conversion options\n                             * @returns {Object.<string,*>} Plain object\n                             */\n                            Features.toObject = function toObject(message, options) {\n                                if (!options)\n                                    options = {};\n                                var object = {};\n                                if (options.defaults) {\n                                    object.extractSyntax = false;\n                                    object.extractEntities = false;\n                                    object.extractDocumentSentiment = false;\n                                    object.extractEntitySentiment = false;\n                                    object.classifyText = false;\n                                }\n                                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\"))\n                                    object.extractSyntax = message.extractSyntax;\n                                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\"))\n                                    object.extractEntities = message.extractEntities;\n                                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\"))\n                                    object.extractDocumentSentiment = message.extractDocumentSentiment;\n                                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\"))\n                                    object.extractEntitySentiment = message.extractEntitySentiment;\n                                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\"))\n                                    object.classifyText = message.classifyText;\n                                return object;\n                            };\n    \n                            /**\n                             * Converts this Features to JSON.\n                             * @function toJSON\n                             * @memberof google.cloud.language.v1.AnnotateTextRequest.Features\n                             * @instance\n                             * @returns {Object.<string,*>} JSON object\n                             */\n                            Features.prototype.toJSON = function toJSON() {\n                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                            };\n    \n                            return Features;\n                        })();\n    \n                        return AnnotateTextRequest;\n                    })();\n    \n                    v1.AnnotateTextResponse = (function() {\n    \n                        /**\n                         * Properties of an AnnotateTextResponse.\n                         * @memberof google.cloud.language.v1\n                         * @interface IAnnotateTextResponse\n                         * @property {Array.<google.cloud.language.v1.ISentence>|null} [sentences] AnnotateTextResponse sentences\n                         * @property {Array.<google.cloud.language.v1.IToken>|null} [tokens] AnnotateTextResponse tokens\n                         * @property {Array.<google.cloud.language.v1.IEntity>|null} [entities] AnnotateTextResponse entities\n                         * @property {google.cloud.language.v1.ISentiment|null} [documentSentiment] AnnotateTextResponse documentSentiment\n                         * @property {string|null} [language] AnnotateTextResponse language\n                         * @property {Array.<google.cloud.language.v1.IClassificationCategory>|null} [categories] AnnotateTextResponse categories\n                         */\n    \n                        /**\n                         * Constructs a new AnnotateTextResponse.\n                         * @memberof google.cloud.language.v1\n                         * @classdesc Represents an AnnotateTextResponse.\n                         * @implements IAnnotateTextResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1.IAnnotateTextResponse=} [properties] Properties to set\n                         */\n                        function AnnotateTextResponse(properties) {\n                            this.sentences = [];\n                            this.tokens = [];\n                            this.entities = [];\n                            this.categories = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnnotateTextResponse sentences.\n                         * @member {Array.<google.cloud.language.v1.ISentence>} sentences\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.sentences = $util.emptyArray;\n    \n                        /**\n                         * AnnotateTextResponse tokens.\n                         * @member {Array.<google.cloud.language.v1.IToken>} tokens\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.tokens = $util.emptyArray;\n    \n                        /**\n                         * AnnotateTextResponse entities.\n                         * @member {Array.<google.cloud.language.v1.IEntity>} entities\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.entities = $util.emptyArray;\n    \n                        /**\n                         * AnnotateTextResponse documentSentiment.\n                         * @member {google.cloud.language.v1.ISentiment|null|undefined} documentSentiment\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.documentSentiment = null;\n    \n                        /**\n                         * AnnotateTextResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.language = \"\";\n    \n                        /**\n                         * AnnotateTextResponse categories.\n                         * @member {Array.<google.cloud.language.v1.IClassificationCategory>} categories\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.categories = $util.emptyArray;\n    \n                        /**\n                         * Creates a new AnnotateTextResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnnotateTextResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1.AnnotateTextResponse} AnnotateTextResponse instance\n                         */\n                        AnnotateTextResponse.create = function create(properties) {\n                            return new AnnotateTextResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnnotateTextResponse message. Does not implicitly {@link google.cloud.language.v1.AnnotateTextResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnnotateTextResponse} message AnnotateTextResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnnotateTextResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.sentences != null && message.sentences.length)\n                                for (var i = 0; i < message.sentences.length; ++i)\n                                    $root.google.cloud.language.v1.Sentence.encode(message.sentences[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.tokens != null && message.tokens.length)\n                                for (var i = 0; i < message.tokens.length; ++i)\n                                    $root.google.cloud.language.v1.Token.encode(message.tokens[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.entities != null && message.entities.length)\n                                for (var i = 0; i < message.entities.length; ++i)\n                                    $root.google.cloud.language.v1.Entity.encode(message.entities[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\"))\n                                $root.google.cloud.language.v1.Sentiment.encode(message.documentSentiment, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.language);\n                            if (message.categories != null && message.categories.length)\n                                for (var i = 0; i < message.categories.length; ++i)\n                                    $root.google.cloud.language.v1.ClassificationCategory.encode(message.categories[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnnotateTextResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1.AnnotateTextResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1.IAnnotateTextResponse} message AnnotateTextResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnnotateTextResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnnotateTextResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1.AnnotateTextResponse} AnnotateTextResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnnotateTextResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1.AnnotateTextResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.sentences && message.sentences.length))\n                                        message.sentences = [];\n                                    message.sentences.push($root.google.cloud.language.v1.Sentence.decode(reader, reader.uint32()));\n                                    break;\n                                case 2:\n                                    if (!(message.tokens && message.tokens.length))\n                                        message.tokens = [];\n                                    message.tokens.push($root.google.cloud.language.v1.Token.decode(reader, reader.uint32()));\n                                    break;\n                                case 3:\n                                    if (!(message.entities && message.entities.length))\n                                        message.entities = [];\n                                    message.entities.push($root.google.cloud.language.v1.Entity.decode(reader, reader.uint32()));\n                                    break;\n                                case 4:\n                                    message.documentSentiment = $root.google.cloud.language.v1.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                case 5:\n                                    message.language = reader.string();\n                                    break;\n                                case 6:\n                                    if (!(message.categories && message.categories.length))\n                                        message.categories = [];\n                                    message.categories.push($root.google.cloud.language.v1.ClassificationCategory.decode(reader, reader.uint32()));\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnnotateTextResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1.AnnotateTextResponse} AnnotateTextResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnnotateTextResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnnotateTextResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnnotateTextResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                                if (!Array.isArray(message.sentences))\n                                    return \"sentences: array expected\";\n                                for (var i = 0; i < message.sentences.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.Sentence.verify(message.sentences[i]);\n                                    if (error)\n                                        return \"sentences.\" + error;\n                                }\n                            }\n                            if (message.tokens != null && message.hasOwnProperty(\"tokens\")) {\n                                if (!Array.isArray(message.tokens))\n                                    return \"tokens: array expected\";\n                                for (var i = 0; i < message.tokens.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.Token.verify(message.tokens[i]);\n                                    if (error)\n                                        return \"tokens.\" + error;\n                                }\n                            }\n                            if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                                if (!Array.isArray(message.entities))\n                                    return \"entities: array expected\";\n                                for (var i = 0; i < message.entities.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.Entity.verify(message.entities[i]);\n                                    if (error)\n                                        return \"entities.\" + error;\n                                }\n                            }\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) {\n                                var error = $root.google.cloud.language.v1.Sentiment.verify(message.documentSentiment);\n                                if (error)\n                                    return \"documentSentiment.\" + error;\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            if (message.categories != null && message.hasOwnProperty(\"categories\")) {\n                                if (!Array.isArray(message.categories))\n                                    return \"categories: array expected\";\n                                for (var i = 0; i < message.categories.length; ++i) {\n                                    var error = $root.google.cloud.language.v1.ClassificationCategory.verify(message.categories[i]);\n                                    if (error)\n                                        return \"categories.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnnotateTextResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1.AnnotateTextResponse} AnnotateTextResponse\n                         */\n                        AnnotateTextResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1.AnnotateTextResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1.AnnotateTextResponse();\n                            if (object.sentences) {\n                                if (!Array.isArray(object.sentences))\n                                    throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.sentences: array expected\");\n                                message.sentences = [];\n                                for (var i = 0; i < object.sentences.length; ++i) {\n                                    if (typeof object.sentences[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.sentences: object expected\");\n                                    message.sentences[i] = $root.google.cloud.language.v1.Sentence.fromObject(object.sentences[i]);\n                                }\n                            }\n                            if (object.tokens) {\n                                if (!Array.isArray(object.tokens))\n                                    throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.tokens: array expected\");\n                                message.tokens = [];\n                                for (var i = 0; i < object.tokens.length; ++i) {\n                                    if (typeof object.tokens[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.tokens: object expected\");\n                                    message.tokens[i] = $root.google.cloud.language.v1.Token.fromObject(object.tokens[i]);\n                                }\n                            }\n                            if (object.entities) {\n                                if (!Array.isArray(object.entities))\n                                    throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.entities: array expected\");\n                                message.entities = [];\n                                for (var i = 0; i < object.entities.length; ++i) {\n                                    if (typeof object.entities[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.entities: object expected\");\n                                    message.entities[i] = $root.google.cloud.language.v1.Entity.fromObject(object.entities[i]);\n                                }\n                            }\n                            if (object.documentSentiment != null) {\n                                if (typeof object.documentSentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.documentSentiment: object expected\");\n                                message.documentSentiment = $root.google.cloud.language.v1.Sentiment.fromObject(object.documentSentiment);\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            if (object.categories) {\n                                if (!Array.isArray(object.categories))\n                                    throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.categories: array expected\");\n                                message.categories = [];\n                                for (var i = 0; i < object.categories.length; ++i) {\n                                    if (typeof object.categories[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1.AnnotateTextResponse.categories: object expected\");\n                                    message.categories[i] = $root.google.cloud.language.v1.ClassificationCategory.fromObject(object.categories[i]);\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnnotateTextResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1.AnnotateTextResponse} message AnnotateTextResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnnotateTextResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults) {\n                                object.sentences = [];\n                                object.tokens = [];\n                                object.entities = [];\n                                object.categories = [];\n                            }\n                            if (options.defaults) {\n                                object.documentSentiment = null;\n                                object.language = \"\";\n                            }\n                            if (message.sentences && message.sentences.length) {\n                                object.sentences = [];\n                                for (var j = 0; j < message.sentences.length; ++j)\n                                    object.sentences[j] = $root.google.cloud.language.v1.Sentence.toObject(message.sentences[j], options);\n                            }\n                            if (message.tokens && message.tokens.length) {\n                                object.tokens = [];\n                                for (var j = 0; j < message.tokens.length; ++j)\n                                    object.tokens[j] = $root.google.cloud.language.v1.Token.toObject(message.tokens[j], options);\n                            }\n                            if (message.entities && message.entities.length) {\n                                object.entities = [];\n                                for (var j = 0; j < message.entities.length; ++j)\n                                    object.entities[j] = $root.google.cloud.language.v1.Entity.toObject(message.entities[j], options);\n                            }\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\"))\n                                object.documentSentiment = $root.google.cloud.language.v1.Sentiment.toObject(message.documentSentiment, options);\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            if (message.categories && message.categories.length) {\n                                object.categories = [];\n                                for (var j = 0; j < message.categories.length; ++j)\n                                    object.categories[j] = $root.google.cloud.language.v1.ClassificationCategory.toObject(message.categories[j], options);\n                            }\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnnotateTextResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1.AnnotateTextResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnnotateTextResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnnotateTextResponse;\n                    })();\n    \n                    return v1;\n                })();\n    \n                language.v1beta2 = (function() {\n    \n                    /**\n                     * Namespace v1beta2.\n                     * @memberof google.cloud.language\n                     * @namespace\n                     */\n                    var v1beta2 = {};\n    \n                    v1beta2.LanguageService = (function() {\n    \n                        /**\n                         * Constructs a new LanguageService service.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a LanguageService\n                         * @extends $protobuf.rpc.Service\n                         * @constructor\n                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n                         */\n                        function LanguageService(rpcImpl, requestDelimited, responseDelimited) {\n                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n                        }\n    \n                        (LanguageService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = LanguageService;\n    \n                        /**\n                         * Creates new LanguageService service using the specified rpc implementation.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @static\n                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n                         * @returns {LanguageService} RPC service. Useful where requests and/or responses are streamed.\n                         */\n                        LanguageService.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n                            return new this(rpcImpl, requestDelimited, responseDelimited);\n                        };\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#analyzeSentiment}.\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @typedef AnalyzeSentimentCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1beta2.AnalyzeSentimentResponse} [response] AnalyzeSentimentResponse\n                         */\n    \n                        /**\n                         * Calls AnalyzeSentiment.\n                         * @function analyzeSentiment\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest} request AnalyzeSentimentRequest message or plain object\n                         * @param {google.cloud.language.v1beta2.LanguageService.AnalyzeSentimentCallback} callback Node-style callback called with the error, if any, and AnalyzeSentimentResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.analyzeSentiment = function analyzeSentiment(request, callback) {\n                            return this.rpcCall(analyzeSentiment, $root.google.cloud.language.v1beta2.AnalyzeSentimentRequest, $root.google.cloud.language.v1beta2.AnalyzeSentimentResponse, request, callback);\n                        }, \"name\", { value: \"AnalyzeSentiment\" });\n    \n                        /**\n                         * Calls AnalyzeSentiment.\n                         * @function analyzeSentiment\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest} request AnalyzeSentimentRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1beta2.AnalyzeSentimentResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#analyzeEntities}.\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @typedef AnalyzeEntitiesCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} [response] AnalyzeEntitiesResponse\n                         */\n    \n                        /**\n                         * Calls AnalyzeEntities.\n                         * @function analyzeEntities\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest} request AnalyzeEntitiesRequest message or plain object\n                         * @param {google.cloud.language.v1beta2.LanguageService.AnalyzeEntitiesCallback} callback Node-style callback called with the error, if any, and AnalyzeEntitiesResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.analyzeEntities = function analyzeEntities(request, callback) {\n                            return this.rpcCall(analyzeEntities, $root.google.cloud.language.v1beta2.AnalyzeEntitiesRequest, $root.google.cloud.language.v1beta2.AnalyzeEntitiesResponse, request, callback);\n                        }, \"name\", { value: \"AnalyzeEntities\" });\n    \n                        /**\n                         * Calls AnalyzeEntities.\n                         * @function analyzeEntities\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest} request AnalyzeEntitiesRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1beta2.AnalyzeEntitiesResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#analyzeEntitySentiment}.\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @typedef AnalyzeEntitySentimentCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} [response] AnalyzeEntitySentimentResponse\n                         */\n    \n                        /**\n                         * Calls AnalyzeEntitySentiment.\n                         * @function analyzeEntitySentiment\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest} request AnalyzeEntitySentimentRequest message or plain object\n                         * @param {google.cloud.language.v1beta2.LanguageService.AnalyzeEntitySentimentCallback} callback Node-style callback called with the error, if any, and AnalyzeEntitySentimentResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.analyzeEntitySentiment = function analyzeEntitySentiment(request, callback) {\n                            return this.rpcCall(analyzeEntitySentiment, $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest, $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse, request, callback);\n                        }, \"name\", { value: \"AnalyzeEntitySentiment\" });\n    \n                        /**\n                         * Calls AnalyzeEntitySentiment.\n                         * @function analyzeEntitySentiment\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest} request AnalyzeEntitySentimentRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#analyzeSyntax}.\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @typedef AnalyzeSyntaxCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} [response] AnalyzeSyntaxResponse\n                         */\n    \n                        /**\n                         * Calls AnalyzeSyntax.\n                         * @function analyzeSyntax\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest} request AnalyzeSyntaxRequest message or plain object\n                         * @param {google.cloud.language.v1beta2.LanguageService.AnalyzeSyntaxCallback} callback Node-style callback called with the error, if any, and AnalyzeSyntaxResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.analyzeSyntax = function analyzeSyntax(request, callback) {\n                            return this.rpcCall(analyzeSyntax, $root.google.cloud.language.v1beta2.AnalyzeSyntaxRequest, $root.google.cloud.language.v1beta2.AnalyzeSyntaxResponse, request, callback);\n                        }, \"name\", { value: \"AnalyzeSyntax\" });\n    \n                        /**\n                         * Calls AnalyzeSyntax.\n                         * @function analyzeSyntax\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest} request AnalyzeSyntaxRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1beta2.AnalyzeSyntaxResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#classifyText}.\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @typedef ClassifyTextCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1beta2.ClassifyTextResponse} [response] ClassifyTextResponse\n                         */\n    \n                        /**\n                         * Calls ClassifyText.\n                         * @function classifyText\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IClassifyTextRequest} request ClassifyTextRequest message or plain object\n                         * @param {google.cloud.language.v1beta2.LanguageService.ClassifyTextCallback} callback Node-style callback called with the error, if any, and ClassifyTextResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.classifyText = function classifyText(request, callback) {\n                            return this.rpcCall(classifyText, $root.google.cloud.language.v1beta2.ClassifyTextRequest, $root.google.cloud.language.v1beta2.ClassifyTextResponse, request, callback);\n                        }, \"name\", { value: \"ClassifyText\" });\n    \n                        /**\n                         * Calls ClassifyText.\n                         * @function classifyText\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IClassifyTextRequest} request ClassifyTextRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1beta2.ClassifyTextResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        /**\n                         * Callback as used by {@link google.cloud.language.v1beta2.LanguageService#annotateText}.\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @typedef AnnotateTextCallback\n                         * @type {function}\n                         * @param {Error|null} error Error, if any\n                         * @param {google.cloud.language.v1beta2.AnnotateTextResponse} [response] AnnotateTextResponse\n                         */\n    \n                        /**\n                         * Calls AnnotateText.\n                         * @function annotateText\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextRequest} request AnnotateTextRequest message or plain object\n                         * @param {google.cloud.language.v1beta2.LanguageService.AnnotateTextCallback} callback Node-style callback called with the error, if any, and AnnotateTextResponse\n                         * @returns {undefined}\n                         * @variation 1\n                         */\n                        Object.defineProperty(LanguageService.prototype.annotateText = function annotateText(request, callback) {\n                            return this.rpcCall(annotateText, $root.google.cloud.language.v1beta2.AnnotateTextRequest, $root.google.cloud.language.v1beta2.AnnotateTextResponse, request, callback);\n                        }, \"name\", { value: \"AnnotateText\" });\n    \n                        /**\n                         * Calls AnnotateText.\n                         * @function annotateText\n                         * @memberof google.cloud.language.v1beta2.LanguageService\n                         * @instance\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextRequest} request AnnotateTextRequest message or plain object\n                         * @returns {Promise<google.cloud.language.v1beta2.AnnotateTextResponse>} Promise\n                         * @variation 2\n                         */\n    \n                        return LanguageService;\n                    })();\n    \n                    v1beta2.Document = (function() {\n    \n                        /**\n                         * Properties of a Document.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IDocument\n                         * @property {google.cloud.language.v1beta2.Document.Type|null} [type] Document type\n                         * @property {string|null} [content] Document content\n                         * @property {string|null} [gcsContentUri] Document gcsContentUri\n                         * @property {string|null} [language] Document language\n                         */\n    \n                        /**\n                         * Constructs a new Document.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a Document.\n                         * @implements IDocument\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IDocument=} [properties] Properties to set\n                         */\n                        function Document(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Document type.\n                         * @member {google.cloud.language.v1beta2.Document.Type} type\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @instance\n                         */\n                        Document.prototype.type = 0;\n    \n                        /**\n                         * Document content.\n                         * @member {string} content\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @instance\n                         */\n                        Document.prototype.content = \"\";\n    \n                        /**\n                         * Document gcsContentUri.\n                         * @member {string} gcsContentUri\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @instance\n                         */\n                        Document.prototype.gcsContentUri = \"\";\n    \n                        /**\n                         * Document language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @instance\n                         */\n                        Document.prototype.language = \"\";\n    \n                        // OneOf field names bound to virtual getters and setters\n                        var $oneOfFields;\n    \n                        /**\n                         * Document source.\n                         * @member {\"content\"|\"gcsContentUri\"|undefined} source\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @instance\n                         */\n                        Object.defineProperty(Document.prototype, \"source\", {\n                            get: $util.oneOfGetter($oneOfFields = [\"content\", \"gcsContentUri\"]),\n                            set: $util.oneOfSetter($oneOfFields)\n                        });\n    \n                        /**\n                         * Creates a new Document instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IDocument=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.Document} Document instance\n                         */\n                        Document.create = function create(properties) {\n                            return new Document(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Document message. Does not implicitly {@link google.cloud.language.v1beta2.Document.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IDocument} message Document message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Document.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n                            if (message.content != null && message.hasOwnProperty(\"content\"))\n                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);\n                            if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\"))\n                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.gcsContentUri);\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.language);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Document.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IDocument} message Document message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Document.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a Document message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.Document} Document\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Document.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.Document();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.type = reader.int32();\n                                    break;\n                                case 2:\n                                    message.content = reader.string();\n                                    break;\n                                case 3:\n                                    message.gcsContentUri = reader.string();\n                                    break;\n                                case 4:\n                                    message.language = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a Document message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.Document} Document\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Document.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a Document message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Document.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            var properties = {};\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                switch (message.type) {\n                                default:\n                                    return \"type: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                    break;\n                                }\n                            if (message.content != null && message.hasOwnProperty(\"content\")) {\n                                properties.source = 1;\n                                if (!$util.isString(message.content))\n                                    return \"content: string expected\";\n                            }\n                            if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) {\n                                if (properties.source === 1)\n                                    return \"source: multiple values\";\n                                properties.source = 1;\n                                if (!$util.isString(message.gcsContentUri))\n                                    return \"gcsContentUri: string expected\";\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a Document message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.Document} Document\n                         */\n                        Document.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.Document)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.Document();\n                            switch (object.type) {\n                            case \"TYPE_UNSPECIFIED\":\n                            case 0:\n                                message.type = 0;\n                                break;\n                            case \"PLAIN_TEXT\":\n                            case 1:\n                                message.type = 1;\n                                break;\n                            case \"HTML\":\n                            case 2:\n                                message.type = 2;\n                                break;\n                            }\n                            if (object.content != null)\n                                message.content = String(object.content);\n                            if (object.gcsContentUri != null)\n                                message.gcsContentUri = String(object.gcsContentUri);\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a Document message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @static\n                         * @param {google.cloud.language.v1beta2.Document} message Document\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Document.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.type = options.enums === String ? \"TYPE_UNSPECIFIED\" : 0;\n                                object.language = \"\";\n                            }\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                object.type = options.enums === String ? $root.google.cloud.language.v1beta2.Document.Type[message.type] : message.type;\n                            if (message.content != null && message.hasOwnProperty(\"content\")) {\n                                object.content = message.content;\n                                if (options.oneofs)\n                                    object.source = \"content\";\n                            }\n                            if (message.gcsContentUri != null && message.hasOwnProperty(\"gcsContentUri\")) {\n                                object.gcsContentUri = message.gcsContentUri;\n                                if (options.oneofs)\n                                    object.source = \"gcsContentUri\";\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Document to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.Document\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Document.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Type enum.\n                         * @name google.cloud.language.v1beta2.Document.Type\n                         * @enum {string}\n                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value\n                         * @property {number} PLAIN_TEXT=1 PLAIN_TEXT value\n                         * @property {number} HTML=2 HTML value\n                         */\n                        Document.Type = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"TYPE_UNSPECIFIED\"] = 0;\n                            values[valuesById[1] = \"PLAIN_TEXT\"] = 1;\n                            values[valuesById[2] = \"HTML\"] = 2;\n                            return values;\n                        })();\n    \n                        return Document;\n                    })();\n    \n                    v1beta2.Sentence = (function() {\n    \n                        /**\n                         * Properties of a Sentence.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface ISentence\n                         * @property {google.cloud.language.v1beta2.ITextSpan|null} [text] Sentence text\n                         * @property {google.cloud.language.v1beta2.ISentiment|null} [sentiment] Sentence sentiment\n                         */\n    \n                        /**\n                         * Constructs a new Sentence.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a Sentence.\n                         * @implements ISentence\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.ISentence=} [properties] Properties to set\n                         */\n                        function Sentence(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Sentence text.\n                         * @member {google.cloud.language.v1beta2.ITextSpan|null|undefined} text\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @instance\n                         */\n                        Sentence.prototype.text = null;\n    \n                        /**\n                         * Sentence sentiment.\n                         * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} sentiment\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @instance\n                         */\n                        Sentence.prototype.sentiment = null;\n    \n                        /**\n                         * Creates a new Sentence instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ISentence=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.Sentence} Sentence instance\n                         */\n                        Sentence.create = function create(properties) {\n                            return new Sentence(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Sentence message. Does not implicitly {@link google.cloud.language.v1beta2.Sentence.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ISentence} message Sentence message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Sentence.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                $root.google.cloud.language.v1beta2.TextSpan.encode(message.text, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                $root.google.cloud.language.v1beta2.Sentiment.encode(message.sentiment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Sentence message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Sentence.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ISentence} message Sentence message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Sentence.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a Sentence message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.Sentence} Sentence\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Sentence.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.Sentence();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.text = $root.google.cloud.language.v1beta2.TextSpan.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a Sentence message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.Sentence} Sentence\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Sentence.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a Sentence message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Sentence.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.text != null && message.hasOwnProperty(\"text\")) {\n                                var error = $root.google.cloud.language.v1beta2.TextSpan.verify(message.text);\n                                if (error)\n                                    return \"text.\" + error;\n                            }\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.sentiment);\n                                if (error)\n                                    return \"sentiment.\" + error;\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a Sentence message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.Sentence} Sentence\n                         */\n                        Sentence.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.Sentence)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.Sentence();\n                            if (object.text != null) {\n                                if (typeof object.text !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.Sentence.text: object expected\");\n                                message.text = $root.google.cloud.language.v1beta2.TextSpan.fromObject(object.text);\n                            }\n                            if (object.sentiment != null) {\n                                if (typeof object.sentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.Sentence.sentiment: object expected\");\n                                message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.sentiment);\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a Sentence message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @static\n                         * @param {google.cloud.language.v1beta2.Sentence} message Sentence\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Sentence.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.text = null;\n                                object.sentiment = null;\n                            }\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                object.text = $root.google.cloud.language.v1beta2.TextSpan.toObject(message.text, options);\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                object.sentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.sentiment, options);\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Sentence to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.Sentence\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Sentence.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return Sentence;\n                    })();\n    \n                    v1beta2.Entity = (function() {\n    \n                        /**\n                         * Properties of an Entity.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IEntity\n                         * @property {string|null} [name] Entity name\n                         * @property {google.cloud.language.v1beta2.Entity.Type|null} [type] Entity type\n                         * @property {Object.<string,string>|null} [metadata] Entity metadata\n                         * @property {number|null} [salience] Entity salience\n                         * @property {Array.<google.cloud.language.v1beta2.IEntityMention>|null} [mentions] Entity mentions\n                         * @property {google.cloud.language.v1beta2.ISentiment|null} [sentiment] Entity sentiment\n                         */\n    \n                        /**\n                         * Constructs a new Entity.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an Entity.\n                         * @implements IEntity\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IEntity=} [properties] Properties to set\n                         */\n                        function Entity(properties) {\n                            this.metadata = {};\n                            this.mentions = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Entity name.\n                         * @member {string} name\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @instance\n                         */\n                        Entity.prototype.name = \"\";\n    \n                        /**\n                         * Entity type.\n                         * @member {google.cloud.language.v1beta2.Entity.Type} type\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @instance\n                         */\n                        Entity.prototype.type = 0;\n    \n                        /**\n                         * Entity metadata.\n                         * @member {Object.<string,string>} metadata\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @instance\n                         */\n                        Entity.prototype.metadata = $util.emptyObject;\n    \n                        /**\n                         * Entity salience.\n                         * @member {number} salience\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @instance\n                         */\n                        Entity.prototype.salience = 0;\n    \n                        /**\n                         * Entity mentions.\n                         * @member {Array.<google.cloud.language.v1beta2.IEntityMention>} mentions\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @instance\n                         */\n                        Entity.prototype.mentions = $util.emptyArray;\n    \n                        /**\n                         * Entity sentiment.\n                         * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} sentiment\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @instance\n                         */\n                        Entity.prototype.sentiment = null;\n    \n                        /**\n                         * Creates a new Entity instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IEntity=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.Entity} Entity instance\n                         */\n                        Entity.create = function create(properties) {\n                            return new Entity(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Entity message. Does not implicitly {@link google.cloud.language.v1beta2.Entity.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IEntity} message Entity message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Entity.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n                            if (message.metadata != null && message.hasOwnProperty(\"metadata\"))\n                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)\n                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();\n                            if (message.salience != null && message.hasOwnProperty(\"salience\"))\n                                writer.uint32(/* id 4, wireType 5 =*/37).float(message.salience);\n                            if (message.mentions != null && message.mentions.length)\n                                for (var i = 0; i < message.mentions.length; ++i)\n                                    $root.google.cloud.language.v1beta2.EntityMention.encode(message.mentions[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                $root.google.cloud.language.v1beta2.Sentiment.encode(message.sentiment, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Entity message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Entity.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IEntity} message Entity message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Entity.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an Entity message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.Entity} Entity\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Entity.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.Entity(), key;\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.name = reader.string();\n                                    break;\n                                case 2:\n                                    message.type = reader.int32();\n                                    break;\n                                case 3:\n                                    reader.skip().pos++;\n                                    if (message.metadata === $util.emptyObject)\n                                        message.metadata = {};\n                                    key = reader.string();\n                                    reader.pos++;\n                                    message.metadata[key] = reader.string();\n                                    break;\n                                case 4:\n                                    message.salience = reader.float();\n                                    break;\n                                case 5:\n                                    if (!(message.mentions && message.mentions.length))\n                                        message.mentions = [];\n                                    message.mentions.push($root.google.cloud.language.v1beta2.EntityMention.decode(reader, reader.uint32()));\n                                    break;\n                                case 6:\n                                    message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an Entity message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.Entity} Entity\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Entity.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an Entity message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Entity.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                if (!$util.isString(message.name))\n                                    return \"name: string expected\";\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                switch (message.type) {\n                                default:\n                                    return \"type: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 9:\n                                case 10:\n                                case 11:\n                                case 12:\n                                case 13:\n                                    break;\n                                }\n                            if (message.metadata != null && message.hasOwnProperty(\"metadata\")) {\n                                if (!$util.isObject(message.metadata))\n                                    return \"metadata: object expected\";\n                                var key = Object.keys(message.metadata);\n                                for (var i = 0; i < key.length; ++i)\n                                    if (!$util.isString(message.metadata[key[i]]))\n                                        return \"metadata: string{k:string} expected\";\n                            }\n                            if (message.salience != null && message.hasOwnProperty(\"salience\"))\n                                if (typeof message.salience !== \"number\")\n                                    return \"salience: number expected\";\n                            if (message.mentions != null && message.hasOwnProperty(\"mentions\")) {\n                                if (!Array.isArray(message.mentions))\n                                    return \"mentions: array expected\";\n                                for (var i = 0; i < message.mentions.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.EntityMention.verify(message.mentions[i]);\n                                    if (error)\n                                        return \"mentions.\" + error;\n                                }\n                            }\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.sentiment);\n                                if (error)\n                                    return \"sentiment.\" + error;\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an Entity message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.Entity} Entity\n                         */\n                        Entity.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.Entity)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.Entity();\n                            if (object.name != null)\n                                message.name = String(object.name);\n                            switch (object.type) {\n                            case \"UNKNOWN\":\n                            case 0:\n                                message.type = 0;\n                                break;\n                            case \"PERSON\":\n                            case 1:\n                                message.type = 1;\n                                break;\n                            case \"LOCATION\":\n                            case 2:\n                                message.type = 2;\n                                break;\n                            case \"ORGANIZATION\":\n                            case 3:\n                                message.type = 3;\n                                break;\n                            case \"EVENT\":\n                            case 4:\n                                message.type = 4;\n                                break;\n                            case \"WORK_OF_ART\":\n                            case 5:\n                                message.type = 5;\n                                break;\n                            case \"CONSUMER_GOOD\":\n                            case 6:\n                                message.type = 6;\n                                break;\n                            case \"OTHER\":\n                            case 7:\n                                message.type = 7;\n                                break;\n                            case \"PHONE_NUMBER\":\n                            case 9:\n                                message.type = 9;\n                                break;\n                            case \"ADDRESS\":\n                            case 10:\n                                message.type = 10;\n                                break;\n                            case \"DATE\":\n                            case 11:\n                                message.type = 11;\n                                break;\n                            case \"NUMBER\":\n                            case 12:\n                                message.type = 12;\n                                break;\n                            case \"PRICE\":\n                            case 13:\n                                message.type = 13;\n                                break;\n                            }\n                            if (object.metadata) {\n                                if (typeof object.metadata !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.Entity.metadata: object expected\");\n                                message.metadata = {};\n                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)\n                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);\n                            }\n                            if (object.salience != null)\n                                message.salience = Number(object.salience);\n                            if (object.mentions) {\n                                if (!Array.isArray(object.mentions))\n                                    throw TypeError(\".google.cloud.language.v1beta2.Entity.mentions: array expected\");\n                                message.mentions = [];\n                                for (var i = 0; i < object.mentions.length; ++i) {\n                                    if (typeof object.mentions[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.Entity.mentions: object expected\");\n                                    message.mentions[i] = $root.google.cloud.language.v1beta2.EntityMention.fromObject(object.mentions[i]);\n                                }\n                            }\n                            if (object.sentiment != null) {\n                                if (typeof object.sentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.Entity.sentiment: object expected\");\n                                message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.sentiment);\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an Entity message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @static\n                         * @param {google.cloud.language.v1beta2.Entity} message Entity\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Entity.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.mentions = [];\n                            if (options.objects || options.defaults)\n                                object.metadata = {};\n                            if (options.defaults) {\n                                object.name = \"\";\n                                object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                                object.salience = 0;\n                                object.sentiment = null;\n                            }\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                object.name = message.name;\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                object.type = options.enums === String ? $root.google.cloud.language.v1beta2.Entity.Type[message.type] : message.type;\n                            var keys2;\n                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {\n                                object.metadata = {};\n                                for (var j = 0; j < keys2.length; ++j)\n                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];\n                            }\n                            if (message.salience != null && message.hasOwnProperty(\"salience\"))\n                                object.salience = options.json && !isFinite(message.salience) ? String(message.salience) : message.salience;\n                            if (message.mentions && message.mentions.length) {\n                                object.mentions = [];\n                                for (var j = 0; j < message.mentions.length; ++j)\n                                    object.mentions[j] = $root.google.cloud.language.v1beta2.EntityMention.toObject(message.mentions[j], options);\n                            }\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                object.sentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.sentiment, options);\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Entity to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.Entity\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Entity.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Type enum.\n                         * @name google.cloud.language.v1beta2.Entity.Type\n                         * @enum {string}\n                         * @property {number} UNKNOWN=0 UNKNOWN value\n                         * @property {number} PERSON=1 PERSON value\n                         * @property {number} LOCATION=2 LOCATION value\n                         * @property {number} ORGANIZATION=3 ORGANIZATION value\n                         * @property {number} EVENT=4 EVENT value\n                         * @property {number} WORK_OF_ART=5 WORK_OF_ART value\n                         * @property {number} CONSUMER_GOOD=6 CONSUMER_GOOD value\n                         * @property {number} OTHER=7 OTHER value\n                         * @property {number} PHONE_NUMBER=9 PHONE_NUMBER value\n                         * @property {number} ADDRESS=10 ADDRESS value\n                         * @property {number} DATE=11 DATE value\n                         * @property {number} NUMBER=12 NUMBER value\n                         * @property {number} PRICE=13 PRICE value\n                         */\n                        Entity.Type = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"PERSON\"] = 1;\n                            values[valuesById[2] = \"LOCATION\"] = 2;\n                            values[valuesById[3] = \"ORGANIZATION\"] = 3;\n                            values[valuesById[4] = \"EVENT\"] = 4;\n                            values[valuesById[5] = \"WORK_OF_ART\"] = 5;\n                            values[valuesById[6] = \"CONSUMER_GOOD\"] = 6;\n                            values[valuesById[7] = \"OTHER\"] = 7;\n                            values[valuesById[9] = \"PHONE_NUMBER\"] = 9;\n                            values[valuesById[10] = \"ADDRESS\"] = 10;\n                            values[valuesById[11] = \"DATE\"] = 11;\n                            values[valuesById[12] = \"NUMBER\"] = 12;\n                            values[valuesById[13] = \"PRICE\"] = 13;\n                            return values;\n                        })();\n    \n                        return Entity;\n                    })();\n    \n                    v1beta2.Token = (function() {\n    \n                        /**\n                         * Properties of a Token.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IToken\n                         * @property {google.cloud.language.v1beta2.ITextSpan|null} [text] Token text\n                         * @property {google.cloud.language.v1beta2.IPartOfSpeech|null} [partOfSpeech] Token partOfSpeech\n                         * @property {google.cloud.language.v1beta2.IDependencyEdge|null} [dependencyEdge] Token dependencyEdge\n                         * @property {string|null} [lemma] Token lemma\n                         */\n    \n                        /**\n                         * Constructs a new Token.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a Token.\n                         * @implements IToken\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IToken=} [properties] Properties to set\n                         */\n                        function Token(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Token text.\n                         * @member {google.cloud.language.v1beta2.ITextSpan|null|undefined} text\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @instance\n                         */\n                        Token.prototype.text = null;\n    \n                        /**\n                         * Token partOfSpeech.\n                         * @member {google.cloud.language.v1beta2.IPartOfSpeech|null|undefined} partOfSpeech\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @instance\n                         */\n                        Token.prototype.partOfSpeech = null;\n    \n                        /**\n                         * Token dependencyEdge.\n                         * @member {google.cloud.language.v1beta2.IDependencyEdge|null|undefined} dependencyEdge\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @instance\n                         */\n                        Token.prototype.dependencyEdge = null;\n    \n                        /**\n                         * Token lemma.\n                         * @member {string} lemma\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @instance\n                         */\n                        Token.prototype.lemma = \"\";\n    \n                        /**\n                         * Creates a new Token instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IToken=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.Token} Token instance\n                         */\n                        Token.create = function create(properties) {\n                            return new Token(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Token message. Does not implicitly {@link google.cloud.language.v1beta2.Token.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IToken} message Token message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Token.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                $root.google.cloud.language.v1beta2.TextSpan.encode(message.text, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\"))\n                                $root.google.cloud.language.v1beta2.PartOfSpeech.encode(message.partOfSpeech, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\"))\n                                $root.google.cloud.language.v1beta2.DependencyEdge.encode(message.dependencyEdge, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            if (message.lemma != null && message.hasOwnProperty(\"lemma\"))\n                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.lemma);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Token message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Token.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IToken} message Token message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Token.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a Token message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.Token} Token\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Token.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.Token();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.text = $root.google.cloud.language.v1beta2.TextSpan.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.partOfSpeech = $root.google.cloud.language.v1beta2.PartOfSpeech.decode(reader, reader.uint32());\n                                    break;\n                                case 3:\n                                    message.dependencyEdge = $root.google.cloud.language.v1beta2.DependencyEdge.decode(reader, reader.uint32());\n                                    break;\n                                case 4:\n                                    message.lemma = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a Token message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.Token} Token\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Token.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a Token message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Token.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.text != null && message.hasOwnProperty(\"text\")) {\n                                var error = $root.google.cloud.language.v1beta2.TextSpan.verify(message.text);\n                                if (error)\n                                    return \"text.\" + error;\n                            }\n                            if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\")) {\n                                var error = $root.google.cloud.language.v1beta2.PartOfSpeech.verify(message.partOfSpeech);\n                                if (error)\n                                    return \"partOfSpeech.\" + error;\n                            }\n                            if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\")) {\n                                var error = $root.google.cloud.language.v1beta2.DependencyEdge.verify(message.dependencyEdge);\n                                if (error)\n                                    return \"dependencyEdge.\" + error;\n                            }\n                            if (message.lemma != null && message.hasOwnProperty(\"lemma\"))\n                                if (!$util.isString(message.lemma))\n                                    return \"lemma: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a Token message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.Token} Token\n                         */\n                        Token.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.Token)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.Token();\n                            if (object.text != null) {\n                                if (typeof object.text !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.Token.text: object expected\");\n                                message.text = $root.google.cloud.language.v1beta2.TextSpan.fromObject(object.text);\n                            }\n                            if (object.partOfSpeech != null) {\n                                if (typeof object.partOfSpeech !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.Token.partOfSpeech: object expected\");\n                                message.partOfSpeech = $root.google.cloud.language.v1beta2.PartOfSpeech.fromObject(object.partOfSpeech);\n                            }\n                            if (object.dependencyEdge != null) {\n                                if (typeof object.dependencyEdge !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.Token.dependencyEdge: object expected\");\n                                message.dependencyEdge = $root.google.cloud.language.v1beta2.DependencyEdge.fromObject(object.dependencyEdge);\n                            }\n                            if (object.lemma != null)\n                                message.lemma = String(object.lemma);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a Token message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @static\n                         * @param {google.cloud.language.v1beta2.Token} message Token\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Token.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.text = null;\n                                object.partOfSpeech = null;\n                                object.dependencyEdge = null;\n                                object.lemma = \"\";\n                            }\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                object.text = $root.google.cloud.language.v1beta2.TextSpan.toObject(message.text, options);\n                            if (message.partOfSpeech != null && message.hasOwnProperty(\"partOfSpeech\"))\n                                object.partOfSpeech = $root.google.cloud.language.v1beta2.PartOfSpeech.toObject(message.partOfSpeech, options);\n                            if (message.dependencyEdge != null && message.hasOwnProperty(\"dependencyEdge\"))\n                                object.dependencyEdge = $root.google.cloud.language.v1beta2.DependencyEdge.toObject(message.dependencyEdge, options);\n                            if (message.lemma != null && message.hasOwnProperty(\"lemma\"))\n                                object.lemma = message.lemma;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Token to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.Token\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Token.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return Token;\n                    })();\n    \n                    /**\n                     * EncodingType enum.\n                     * @name google.cloud.language.v1beta2.EncodingType\n                     * @enum {string}\n                     * @property {number} NONE=0 NONE value\n                     * @property {number} UTF8=1 UTF8 value\n                     * @property {number} UTF16=2 UTF16 value\n                     * @property {number} UTF32=3 UTF32 value\n                     */\n                    v1beta2.EncodingType = (function() {\n                        var valuesById = {}, values = Object.create(valuesById);\n                        values[valuesById[0] = \"NONE\"] = 0;\n                        values[valuesById[1] = \"UTF8\"] = 1;\n                        values[valuesById[2] = \"UTF16\"] = 2;\n                        values[valuesById[3] = \"UTF32\"] = 3;\n                        return values;\n                    })();\n    \n                    v1beta2.Sentiment = (function() {\n    \n                        /**\n                         * Properties of a Sentiment.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface ISentiment\n                         * @property {number|null} [magnitude] Sentiment magnitude\n                         * @property {number|null} [score] Sentiment score\n                         */\n    \n                        /**\n                         * Constructs a new Sentiment.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a Sentiment.\n                         * @implements ISentiment\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.ISentiment=} [properties] Properties to set\n                         */\n                        function Sentiment(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * Sentiment magnitude.\n                         * @member {number} magnitude\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @instance\n                         */\n                        Sentiment.prototype.magnitude = 0;\n    \n                        /**\n                         * Sentiment score.\n                         * @member {number} score\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @instance\n                         */\n                        Sentiment.prototype.score = 0;\n    \n                        /**\n                         * Creates a new Sentiment instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ISentiment=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.Sentiment} Sentiment instance\n                         */\n                        Sentiment.create = function create(properties) {\n                            return new Sentiment(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified Sentiment message. Does not implicitly {@link google.cloud.language.v1beta2.Sentiment.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ISentiment} message Sentiment message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Sentiment.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.magnitude != null && message.hasOwnProperty(\"magnitude\"))\n                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.magnitude);\n                            if (message.score != null && message.hasOwnProperty(\"score\"))\n                                writer.uint32(/* id 3, wireType 5 =*/29).float(message.score);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified Sentiment message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.Sentiment.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ISentiment} message Sentiment message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        Sentiment.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a Sentiment message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.Sentiment} Sentiment\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Sentiment.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.Sentiment();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 2:\n                                    message.magnitude = reader.float();\n                                    break;\n                                case 3:\n                                    message.score = reader.float();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a Sentiment message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.Sentiment} Sentiment\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        Sentiment.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a Sentiment message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        Sentiment.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.magnitude != null && message.hasOwnProperty(\"magnitude\"))\n                                if (typeof message.magnitude !== \"number\")\n                                    return \"magnitude: number expected\";\n                            if (message.score != null && message.hasOwnProperty(\"score\"))\n                                if (typeof message.score !== \"number\")\n                                    return \"score: number expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a Sentiment message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.Sentiment} Sentiment\n                         */\n                        Sentiment.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.Sentiment)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.Sentiment();\n                            if (object.magnitude != null)\n                                message.magnitude = Number(object.magnitude);\n                            if (object.score != null)\n                                message.score = Number(object.score);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a Sentiment message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @static\n                         * @param {google.cloud.language.v1beta2.Sentiment} message Sentiment\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        Sentiment.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.magnitude = 0;\n                                object.score = 0;\n                            }\n                            if (message.magnitude != null && message.hasOwnProperty(\"magnitude\"))\n                                object.magnitude = options.json && !isFinite(message.magnitude) ? String(message.magnitude) : message.magnitude;\n                            if (message.score != null && message.hasOwnProperty(\"score\"))\n                                object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this Sentiment to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.Sentiment\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        Sentiment.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return Sentiment;\n                    })();\n    \n                    v1beta2.PartOfSpeech = (function() {\n    \n                        /**\n                         * Properties of a PartOfSpeech.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IPartOfSpeech\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Tag|null} [tag] PartOfSpeech tag\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Aspect|null} [aspect] PartOfSpeech aspect\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Case|null} [\"case\"] PartOfSpeech case\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Form|null} [form] PartOfSpeech form\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Gender|null} [gender] PartOfSpeech gender\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Mood|null} [mood] PartOfSpeech mood\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Number|null} [number] PartOfSpeech number\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Person|null} [person] PartOfSpeech person\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Proper|null} [proper] PartOfSpeech proper\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Reciprocity|null} [reciprocity] PartOfSpeech reciprocity\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Tense|null} [tense] PartOfSpeech tense\n                         * @property {google.cloud.language.v1beta2.PartOfSpeech.Voice|null} [voice] PartOfSpeech voice\n                         */\n    \n                        /**\n                         * Constructs a new PartOfSpeech.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a PartOfSpeech.\n                         * @implements IPartOfSpeech\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IPartOfSpeech=} [properties] Properties to set\n                         */\n                        function PartOfSpeech(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * PartOfSpeech tag.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Tag} tag\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.tag = 0;\n    \n                        /**\n                         * PartOfSpeech aspect.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Aspect} aspect\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.aspect = 0;\n    \n                        /**\n                         * PartOfSpeech case.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Case} case\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype[\"case\"] = 0;\n    \n                        /**\n                         * PartOfSpeech form.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Form} form\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.form = 0;\n    \n                        /**\n                         * PartOfSpeech gender.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Gender} gender\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.gender = 0;\n    \n                        /**\n                         * PartOfSpeech mood.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Mood} mood\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.mood = 0;\n    \n                        /**\n                         * PartOfSpeech number.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Number} number\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.number = 0;\n    \n                        /**\n                         * PartOfSpeech person.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Person} person\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.person = 0;\n    \n                        /**\n                         * PartOfSpeech proper.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Proper} proper\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.proper = 0;\n    \n                        /**\n                         * PartOfSpeech reciprocity.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Reciprocity} reciprocity\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.reciprocity = 0;\n    \n                        /**\n                         * PartOfSpeech tense.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Tense} tense\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.tense = 0;\n    \n                        /**\n                         * PartOfSpeech voice.\n                         * @member {google.cloud.language.v1beta2.PartOfSpeech.Voice} voice\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         */\n                        PartOfSpeech.prototype.voice = 0;\n    \n                        /**\n                         * Creates a new PartOfSpeech instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IPartOfSpeech=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.PartOfSpeech} PartOfSpeech instance\n                         */\n                        PartOfSpeech.create = function create(properties) {\n                            return new PartOfSpeech(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified PartOfSpeech message. Does not implicitly {@link google.cloud.language.v1beta2.PartOfSpeech.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IPartOfSpeech} message PartOfSpeech message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        PartOfSpeech.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tag);\n                            if (message.aspect != null && message.hasOwnProperty(\"aspect\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.aspect);\n                            if (message[\"case\"] != null && message.hasOwnProperty(\"case\"))\n                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message[\"case\"]);\n                            if (message.form != null && message.hasOwnProperty(\"form\"))\n                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.form);\n                            if (message.gender != null && message.hasOwnProperty(\"gender\"))\n                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.gender);\n                            if (message.mood != null && message.hasOwnProperty(\"mood\"))\n                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.mood);\n                            if (message.number != null && message.hasOwnProperty(\"number\"))\n                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.number);\n                            if (message.person != null && message.hasOwnProperty(\"person\"))\n                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.person);\n                            if (message.proper != null && message.hasOwnProperty(\"proper\"))\n                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.proper);\n                            if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\"))\n                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.reciprocity);\n                            if (message.tense != null && message.hasOwnProperty(\"tense\"))\n                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.tense);\n                            if (message.voice != null && message.hasOwnProperty(\"voice\"))\n                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.voice);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified PartOfSpeech message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.PartOfSpeech.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IPartOfSpeech} message PartOfSpeech message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        PartOfSpeech.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a PartOfSpeech message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.PartOfSpeech} PartOfSpeech\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        PartOfSpeech.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.PartOfSpeech();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.tag = reader.int32();\n                                    break;\n                                case 2:\n                                    message.aspect = reader.int32();\n                                    break;\n                                case 3:\n                                    message[\"case\"] = reader.int32();\n                                    break;\n                                case 4:\n                                    message.form = reader.int32();\n                                    break;\n                                case 5:\n                                    message.gender = reader.int32();\n                                    break;\n                                case 6:\n                                    message.mood = reader.int32();\n                                    break;\n                                case 7:\n                                    message.number = reader.int32();\n                                    break;\n                                case 8:\n                                    message.person = reader.int32();\n                                    break;\n                                case 9:\n                                    message.proper = reader.int32();\n                                    break;\n                                case 10:\n                                    message.reciprocity = reader.int32();\n                                    break;\n                                case 11:\n                                    message.tense = reader.int32();\n                                    break;\n                                case 12:\n                                    message.voice = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a PartOfSpeech message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.PartOfSpeech} PartOfSpeech\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        PartOfSpeech.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a PartOfSpeech message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        PartOfSpeech.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                                switch (message.tag) {\n                                default:\n                                    return \"tag: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 10:\n                                case 11:\n                                case 12:\n                                case 13:\n                                    break;\n                                }\n                            if (message.aspect != null && message.hasOwnProperty(\"aspect\"))\n                                switch (message.aspect) {\n                                default:\n                                    return \"aspect: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            if (message[\"case\"] != null && message.hasOwnProperty(\"case\"))\n                                switch (message[\"case\"]) {\n                                default:\n                                    return \"case: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 10:\n                                case 11:\n                                case 12:\n                                case 13:\n                                case 14:\n                                    break;\n                                }\n                            if (message.form != null && message.hasOwnProperty(\"form\"))\n                                switch (message.form) {\n                                default:\n                                    return \"form: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 10:\n                                case 11:\n                                    break;\n                                }\n                            if (message.gender != null && message.hasOwnProperty(\"gender\"))\n                                switch (message.gender) {\n                                default:\n                                    return \"gender: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            if (message.mood != null && message.hasOwnProperty(\"mood\"))\n                                switch (message.mood) {\n                                default:\n                                    return \"mood: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                    break;\n                                }\n                            if (message.number != null && message.hasOwnProperty(\"number\"))\n                                switch (message.number) {\n                                default:\n                                    return \"number: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            if (message.person != null && message.hasOwnProperty(\"person\"))\n                                switch (message.person) {\n                                default:\n                                    return \"person: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                    break;\n                                }\n                            if (message.proper != null && message.hasOwnProperty(\"proper\"))\n                                switch (message.proper) {\n                                default:\n                                    return \"proper: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                    break;\n                                }\n                            if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\"))\n                                switch (message.reciprocity) {\n                                default:\n                                    return \"reciprocity: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                    break;\n                                }\n                            if (message.tense != null && message.hasOwnProperty(\"tense\"))\n                                switch (message.tense) {\n                                default:\n                                    return \"tense: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                    break;\n                                }\n                            if (message.voice != null && message.hasOwnProperty(\"voice\"))\n                                switch (message.voice) {\n                                default:\n                                    return \"voice: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a PartOfSpeech message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.PartOfSpeech} PartOfSpeech\n                         */\n                        PartOfSpeech.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.PartOfSpeech)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.PartOfSpeech();\n                            switch (object.tag) {\n                            case \"UNKNOWN\":\n                            case 0:\n                                message.tag = 0;\n                                break;\n                            case \"ADJ\":\n                            case 1:\n                                message.tag = 1;\n                                break;\n                            case \"ADP\":\n                            case 2:\n                                message.tag = 2;\n                                break;\n                            case \"ADV\":\n                            case 3:\n                                message.tag = 3;\n                                break;\n                            case \"CONJ\":\n                            case 4:\n                                message.tag = 4;\n                                break;\n                            case \"DET\":\n                            case 5:\n                                message.tag = 5;\n                                break;\n                            case \"NOUN\":\n                            case 6:\n                                message.tag = 6;\n                                break;\n                            case \"NUM\":\n                            case 7:\n                                message.tag = 7;\n                                break;\n                            case \"PRON\":\n                            case 8:\n                                message.tag = 8;\n                                break;\n                            case \"PRT\":\n                            case 9:\n                                message.tag = 9;\n                                break;\n                            case \"PUNCT\":\n                            case 10:\n                                message.tag = 10;\n                                break;\n                            case \"VERB\":\n                            case 11:\n                                message.tag = 11;\n                                break;\n                            case \"X\":\n                            case 12:\n                                message.tag = 12;\n                                break;\n                            case \"AFFIX\":\n                            case 13:\n                                message.tag = 13;\n                                break;\n                            }\n                            switch (object.aspect) {\n                            case \"ASPECT_UNKNOWN\":\n                            case 0:\n                                message.aspect = 0;\n                                break;\n                            case \"PERFECTIVE\":\n                            case 1:\n                                message.aspect = 1;\n                                break;\n                            case \"IMPERFECTIVE\":\n                            case 2:\n                                message.aspect = 2;\n                                break;\n                            case \"PROGRESSIVE\":\n                            case 3:\n                                message.aspect = 3;\n                                break;\n                            }\n                            switch (object[\"case\"]) {\n                            case \"CASE_UNKNOWN\":\n                            case 0:\n                                message[\"case\"] = 0;\n                                break;\n                            case \"ACCUSATIVE\":\n                            case 1:\n                                message[\"case\"] = 1;\n                                break;\n                            case \"ADVERBIAL\":\n                            case 2:\n                                message[\"case\"] = 2;\n                                break;\n                            case \"COMPLEMENTIVE\":\n                            case 3:\n                                message[\"case\"] = 3;\n                                break;\n                            case \"DATIVE\":\n                            case 4:\n                                message[\"case\"] = 4;\n                                break;\n                            case \"GENITIVE\":\n                            case 5:\n                                message[\"case\"] = 5;\n                                break;\n                            case \"INSTRUMENTAL\":\n                            case 6:\n                                message[\"case\"] = 6;\n                                break;\n                            case \"LOCATIVE\":\n                            case 7:\n                                message[\"case\"] = 7;\n                                break;\n                            case \"NOMINATIVE\":\n                            case 8:\n                                message[\"case\"] = 8;\n                                break;\n                            case \"OBLIQUE\":\n                            case 9:\n                                message[\"case\"] = 9;\n                                break;\n                            case \"PARTITIVE\":\n                            case 10:\n                                message[\"case\"] = 10;\n                                break;\n                            case \"PREPOSITIONAL\":\n                            case 11:\n                                message[\"case\"] = 11;\n                                break;\n                            case \"REFLEXIVE_CASE\":\n                            case 12:\n                                message[\"case\"] = 12;\n                                break;\n                            case \"RELATIVE_CASE\":\n                            case 13:\n                                message[\"case\"] = 13;\n                                break;\n                            case \"VOCATIVE\":\n                            case 14:\n                                message[\"case\"] = 14;\n                                break;\n                            }\n                            switch (object.form) {\n                            case \"FORM_UNKNOWN\":\n                            case 0:\n                                message.form = 0;\n                                break;\n                            case \"ADNOMIAL\":\n                            case 1:\n                                message.form = 1;\n                                break;\n                            case \"AUXILIARY\":\n                            case 2:\n                                message.form = 2;\n                                break;\n                            case \"COMPLEMENTIZER\":\n                            case 3:\n                                message.form = 3;\n                                break;\n                            case \"FINAL_ENDING\":\n                            case 4:\n                                message.form = 4;\n                                break;\n                            case \"GERUND\":\n                            case 5:\n                                message.form = 5;\n                                break;\n                            case \"REALIS\":\n                            case 6:\n                                message.form = 6;\n                                break;\n                            case \"IRREALIS\":\n                            case 7:\n                                message.form = 7;\n                                break;\n                            case \"SHORT\":\n                            case 8:\n                                message.form = 8;\n                                break;\n                            case \"LONG\":\n                            case 9:\n                                message.form = 9;\n                                break;\n                            case \"ORDER\":\n                            case 10:\n                                message.form = 10;\n                                break;\n                            case \"SPECIFIC\":\n                            case 11:\n                                message.form = 11;\n                                break;\n                            }\n                            switch (object.gender) {\n                            case \"GENDER_UNKNOWN\":\n                            case 0:\n                                message.gender = 0;\n                                break;\n                            case \"FEMININE\":\n                            case 1:\n                                message.gender = 1;\n                                break;\n                            case \"MASCULINE\":\n                            case 2:\n                                message.gender = 2;\n                                break;\n                            case \"NEUTER\":\n                            case 3:\n                                message.gender = 3;\n                                break;\n                            }\n                            switch (object.mood) {\n                            case \"MOOD_UNKNOWN\":\n                            case 0:\n                                message.mood = 0;\n                                break;\n                            case \"CONDITIONAL_MOOD\":\n                            case 1:\n                                message.mood = 1;\n                                break;\n                            case \"IMPERATIVE\":\n                            case 2:\n                                message.mood = 2;\n                                break;\n                            case \"INDICATIVE\":\n                            case 3:\n                                message.mood = 3;\n                                break;\n                            case \"INTERROGATIVE\":\n                            case 4:\n                                message.mood = 4;\n                                break;\n                            case \"JUSSIVE\":\n                            case 5:\n                                message.mood = 5;\n                                break;\n                            case \"SUBJUNCTIVE\":\n                            case 6:\n                                message.mood = 6;\n                                break;\n                            }\n                            switch (object.number) {\n                            case \"NUMBER_UNKNOWN\":\n                            case 0:\n                                message.number = 0;\n                                break;\n                            case \"SINGULAR\":\n                            case 1:\n                                message.number = 1;\n                                break;\n                            case \"PLURAL\":\n                            case 2:\n                                message.number = 2;\n                                break;\n                            case \"DUAL\":\n                            case 3:\n                                message.number = 3;\n                                break;\n                            }\n                            switch (object.person) {\n                            case \"PERSON_UNKNOWN\":\n                            case 0:\n                                message.person = 0;\n                                break;\n                            case \"FIRST\":\n                            case 1:\n                                message.person = 1;\n                                break;\n                            case \"SECOND\":\n                            case 2:\n                                message.person = 2;\n                                break;\n                            case \"THIRD\":\n                            case 3:\n                                message.person = 3;\n                                break;\n                            case \"REFLEXIVE_PERSON\":\n                            case 4:\n                                message.person = 4;\n                                break;\n                            }\n                            switch (object.proper) {\n                            case \"PROPER_UNKNOWN\":\n                            case 0:\n                                message.proper = 0;\n                                break;\n                            case \"PROPER\":\n                            case 1:\n                                message.proper = 1;\n                                break;\n                            case \"NOT_PROPER\":\n                            case 2:\n                                message.proper = 2;\n                                break;\n                            }\n                            switch (object.reciprocity) {\n                            case \"RECIPROCITY_UNKNOWN\":\n                            case 0:\n                                message.reciprocity = 0;\n                                break;\n                            case \"RECIPROCAL\":\n                            case 1:\n                                message.reciprocity = 1;\n                                break;\n                            case \"NON_RECIPROCAL\":\n                            case 2:\n                                message.reciprocity = 2;\n                                break;\n                            }\n                            switch (object.tense) {\n                            case \"TENSE_UNKNOWN\":\n                            case 0:\n                                message.tense = 0;\n                                break;\n                            case \"CONDITIONAL_TENSE\":\n                            case 1:\n                                message.tense = 1;\n                                break;\n                            case \"FUTURE\":\n                            case 2:\n                                message.tense = 2;\n                                break;\n                            case \"PAST\":\n                            case 3:\n                                message.tense = 3;\n                                break;\n                            case \"PRESENT\":\n                            case 4:\n                                message.tense = 4;\n                                break;\n                            case \"IMPERFECT\":\n                            case 5:\n                                message.tense = 5;\n                                break;\n                            case \"PLUPERFECT\":\n                            case 6:\n                                message.tense = 6;\n                                break;\n                            }\n                            switch (object.voice) {\n                            case \"VOICE_UNKNOWN\":\n                            case 0:\n                                message.voice = 0;\n                                break;\n                            case \"ACTIVE\":\n                            case 1:\n                                message.voice = 1;\n                                break;\n                            case \"CAUSATIVE\":\n                            case 2:\n                                message.voice = 2;\n                                break;\n                            case \"PASSIVE\":\n                            case 3:\n                                message.voice = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a PartOfSpeech message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @static\n                         * @param {google.cloud.language.v1beta2.PartOfSpeech} message PartOfSpeech\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        PartOfSpeech.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.tag = options.enums === String ? \"UNKNOWN\" : 0;\n                                object.aspect = options.enums === String ? \"ASPECT_UNKNOWN\" : 0;\n                                object[\"case\"] = options.enums === String ? \"CASE_UNKNOWN\" : 0;\n                                object.form = options.enums === String ? \"FORM_UNKNOWN\" : 0;\n                                object.gender = options.enums === String ? \"GENDER_UNKNOWN\" : 0;\n                                object.mood = options.enums === String ? \"MOOD_UNKNOWN\" : 0;\n                                object.number = options.enums === String ? \"NUMBER_UNKNOWN\" : 0;\n                                object.person = options.enums === String ? \"PERSON_UNKNOWN\" : 0;\n                                object.proper = options.enums === String ? \"PROPER_UNKNOWN\" : 0;\n                                object.reciprocity = options.enums === String ? \"RECIPROCITY_UNKNOWN\" : 0;\n                                object.tense = options.enums === String ? \"TENSE_UNKNOWN\" : 0;\n                                object.voice = options.enums === String ? \"VOICE_UNKNOWN\" : 0;\n                            }\n                            if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                                object.tag = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Tag[message.tag] : message.tag;\n                            if (message.aspect != null && message.hasOwnProperty(\"aspect\"))\n                                object.aspect = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Aspect[message.aspect] : message.aspect;\n                            if (message[\"case\"] != null && message.hasOwnProperty(\"case\"))\n                                object[\"case\"] = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Case[message[\"case\"]] : message[\"case\"];\n                            if (message.form != null && message.hasOwnProperty(\"form\"))\n                                object.form = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Form[message.form] : message.form;\n                            if (message.gender != null && message.hasOwnProperty(\"gender\"))\n                                object.gender = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Gender[message.gender] : message.gender;\n                            if (message.mood != null && message.hasOwnProperty(\"mood\"))\n                                object.mood = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Mood[message.mood] : message.mood;\n                            if (message.number != null && message.hasOwnProperty(\"number\"))\n                                object.number = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Number[message.number] : message.number;\n                            if (message.person != null && message.hasOwnProperty(\"person\"))\n                                object.person = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Person[message.person] : message.person;\n                            if (message.proper != null && message.hasOwnProperty(\"proper\"))\n                                object.proper = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Proper[message.proper] : message.proper;\n                            if (message.reciprocity != null && message.hasOwnProperty(\"reciprocity\"))\n                                object.reciprocity = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Reciprocity[message.reciprocity] : message.reciprocity;\n                            if (message.tense != null && message.hasOwnProperty(\"tense\"))\n                                object.tense = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Tense[message.tense] : message.tense;\n                            if (message.voice != null && message.hasOwnProperty(\"voice\"))\n                                object.voice = options.enums === String ? $root.google.cloud.language.v1beta2.PartOfSpeech.Voice[message.voice] : message.voice;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this PartOfSpeech to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.PartOfSpeech\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        PartOfSpeech.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Tag enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Tag\n                         * @enum {string}\n                         * @property {number} UNKNOWN=0 UNKNOWN value\n                         * @property {number} ADJ=1 ADJ value\n                         * @property {number} ADP=2 ADP value\n                         * @property {number} ADV=3 ADV value\n                         * @property {number} CONJ=4 CONJ value\n                         * @property {number} DET=5 DET value\n                         * @property {number} NOUN=6 NOUN value\n                         * @property {number} NUM=7 NUM value\n                         * @property {number} PRON=8 PRON value\n                         * @property {number} PRT=9 PRT value\n                         * @property {number} PUNCT=10 PUNCT value\n                         * @property {number} VERB=11 VERB value\n                         * @property {number} X=12 X value\n                         * @property {number} AFFIX=13 AFFIX value\n                         */\n                        PartOfSpeech.Tag = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ADJ\"] = 1;\n                            values[valuesById[2] = \"ADP\"] = 2;\n                            values[valuesById[3] = \"ADV\"] = 3;\n                            values[valuesById[4] = \"CONJ\"] = 4;\n                            values[valuesById[5] = \"DET\"] = 5;\n                            values[valuesById[6] = \"NOUN\"] = 6;\n                            values[valuesById[7] = \"NUM\"] = 7;\n                            values[valuesById[8] = \"PRON\"] = 8;\n                            values[valuesById[9] = \"PRT\"] = 9;\n                            values[valuesById[10] = \"PUNCT\"] = 10;\n                            values[valuesById[11] = \"VERB\"] = 11;\n                            values[valuesById[12] = \"X\"] = 12;\n                            values[valuesById[13] = \"AFFIX\"] = 13;\n                            return values;\n                        })();\n    \n                        /**\n                         * Aspect enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Aspect\n                         * @enum {string}\n                         * @property {number} ASPECT_UNKNOWN=0 ASPECT_UNKNOWN value\n                         * @property {number} PERFECTIVE=1 PERFECTIVE value\n                         * @property {number} IMPERFECTIVE=2 IMPERFECTIVE value\n                         * @property {number} PROGRESSIVE=3 PROGRESSIVE value\n                         */\n                        PartOfSpeech.Aspect = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"ASPECT_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"PERFECTIVE\"] = 1;\n                            values[valuesById[2] = \"IMPERFECTIVE\"] = 2;\n                            values[valuesById[3] = \"PROGRESSIVE\"] = 3;\n                            return values;\n                        })();\n    \n                        /**\n                         * Case enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Case\n                         * @enum {string}\n                         * @property {number} CASE_UNKNOWN=0 CASE_UNKNOWN value\n                         * @property {number} ACCUSATIVE=1 ACCUSATIVE value\n                         * @property {number} ADVERBIAL=2 ADVERBIAL value\n                         * @property {number} COMPLEMENTIVE=3 COMPLEMENTIVE value\n                         * @property {number} DATIVE=4 DATIVE value\n                         * @property {number} GENITIVE=5 GENITIVE value\n                         * @property {number} INSTRUMENTAL=6 INSTRUMENTAL value\n                         * @property {number} LOCATIVE=7 LOCATIVE value\n                         * @property {number} NOMINATIVE=8 NOMINATIVE value\n                         * @property {number} OBLIQUE=9 OBLIQUE value\n                         * @property {number} PARTITIVE=10 PARTITIVE value\n                         * @property {number} PREPOSITIONAL=11 PREPOSITIONAL value\n                         * @property {number} REFLEXIVE_CASE=12 REFLEXIVE_CASE value\n                         * @property {number} RELATIVE_CASE=13 RELATIVE_CASE value\n                         * @property {number} VOCATIVE=14 VOCATIVE value\n                         */\n                        PartOfSpeech.Case = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"CASE_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ACCUSATIVE\"] = 1;\n                            values[valuesById[2] = \"ADVERBIAL\"] = 2;\n                            values[valuesById[3] = \"COMPLEMENTIVE\"] = 3;\n                            values[valuesById[4] = \"DATIVE\"] = 4;\n                            values[valuesById[5] = \"GENITIVE\"] = 5;\n                            values[valuesById[6] = \"INSTRUMENTAL\"] = 6;\n                            values[valuesById[7] = \"LOCATIVE\"] = 7;\n                            values[valuesById[8] = \"NOMINATIVE\"] = 8;\n                            values[valuesById[9] = \"OBLIQUE\"] = 9;\n                            values[valuesById[10] = \"PARTITIVE\"] = 10;\n                            values[valuesById[11] = \"PREPOSITIONAL\"] = 11;\n                            values[valuesById[12] = \"REFLEXIVE_CASE\"] = 12;\n                            values[valuesById[13] = \"RELATIVE_CASE\"] = 13;\n                            values[valuesById[14] = \"VOCATIVE\"] = 14;\n                            return values;\n                        })();\n    \n                        /**\n                         * Form enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Form\n                         * @enum {string}\n                         * @property {number} FORM_UNKNOWN=0 FORM_UNKNOWN value\n                         * @property {number} ADNOMIAL=1 ADNOMIAL value\n                         * @property {number} AUXILIARY=2 AUXILIARY value\n                         * @property {number} COMPLEMENTIZER=3 COMPLEMENTIZER value\n                         * @property {number} FINAL_ENDING=4 FINAL_ENDING value\n                         * @property {number} GERUND=5 GERUND value\n                         * @property {number} REALIS=6 REALIS value\n                         * @property {number} IRREALIS=7 IRREALIS value\n                         * @property {number} SHORT=8 SHORT value\n                         * @property {number} LONG=9 LONG value\n                         * @property {number} ORDER=10 ORDER value\n                         * @property {number} SPECIFIC=11 SPECIFIC value\n                         */\n                        PartOfSpeech.Form = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"FORM_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ADNOMIAL\"] = 1;\n                            values[valuesById[2] = \"AUXILIARY\"] = 2;\n                            values[valuesById[3] = \"COMPLEMENTIZER\"] = 3;\n                            values[valuesById[4] = \"FINAL_ENDING\"] = 4;\n                            values[valuesById[5] = \"GERUND\"] = 5;\n                            values[valuesById[6] = \"REALIS\"] = 6;\n                            values[valuesById[7] = \"IRREALIS\"] = 7;\n                            values[valuesById[8] = \"SHORT\"] = 8;\n                            values[valuesById[9] = \"LONG\"] = 9;\n                            values[valuesById[10] = \"ORDER\"] = 10;\n                            values[valuesById[11] = \"SPECIFIC\"] = 11;\n                            return values;\n                        })();\n    \n                        /**\n                         * Gender enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Gender\n                         * @enum {string}\n                         * @property {number} GENDER_UNKNOWN=0 GENDER_UNKNOWN value\n                         * @property {number} FEMININE=1 FEMININE value\n                         * @property {number} MASCULINE=2 MASCULINE value\n                         * @property {number} NEUTER=3 NEUTER value\n                         */\n                        PartOfSpeech.Gender = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"GENDER_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"FEMININE\"] = 1;\n                            values[valuesById[2] = \"MASCULINE\"] = 2;\n                            values[valuesById[3] = \"NEUTER\"] = 3;\n                            return values;\n                        })();\n    \n                        /**\n                         * Mood enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Mood\n                         * @enum {string}\n                         * @property {number} MOOD_UNKNOWN=0 MOOD_UNKNOWN value\n                         * @property {number} CONDITIONAL_MOOD=1 CONDITIONAL_MOOD value\n                         * @property {number} IMPERATIVE=2 IMPERATIVE value\n                         * @property {number} INDICATIVE=3 INDICATIVE value\n                         * @property {number} INTERROGATIVE=4 INTERROGATIVE value\n                         * @property {number} JUSSIVE=5 JUSSIVE value\n                         * @property {number} SUBJUNCTIVE=6 SUBJUNCTIVE value\n                         */\n                        PartOfSpeech.Mood = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"MOOD_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"CONDITIONAL_MOOD\"] = 1;\n                            values[valuesById[2] = \"IMPERATIVE\"] = 2;\n                            values[valuesById[3] = \"INDICATIVE\"] = 3;\n                            values[valuesById[4] = \"INTERROGATIVE\"] = 4;\n                            values[valuesById[5] = \"JUSSIVE\"] = 5;\n                            values[valuesById[6] = \"SUBJUNCTIVE\"] = 6;\n                            return values;\n                        })();\n    \n                        /**\n                         * Number enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Number\n                         * @enum {string}\n                         * @property {number} NUMBER_UNKNOWN=0 NUMBER_UNKNOWN value\n                         * @property {number} SINGULAR=1 SINGULAR value\n                         * @property {number} PLURAL=2 PLURAL value\n                         * @property {number} DUAL=3 DUAL value\n                         */\n                        PartOfSpeech.Number = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"NUMBER_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"SINGULAR\"] = 1;\n                            values[valuesById[2] = \"PLURAL\"] = 2;\n                            values[valuesById[3] = \"DUAL\"] = 3;\n                            return values;\n                        })();\n    \n                        /**\n                         * Person enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Person\n                         * @enum {string}\n                         * @property {number} PERSON_UNKNOWN=0 PERSON_UNKNOWN value\n                         * @property {number} FIRST=1 FIRST value\n                         * @property {number} SECOND=2 SECOND value\n                         * @property {number} THIRD=3 THIRD value\n                         * @property {number} REFLEXIVE_PERSON=4 REFLEXIVE_PERSON value\n                         */\n                        PartOfSpeech.Person = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"PERSON_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"FIRST\"] = 1;\n                            values[valuesById[2] = \"SECOND\"] = 2;\n                            values[valuesById[3] = \"THIRD\"] = 3;\n                            values[valuesById[4] = \"REFLEXIVE_PERSON\"] = 4;\n                            return values;\n                        })();\n    \n                        /**\n                         * Proper enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Proper\n                         * @enum {string}\n                         * @property {number} PROPER_UNKNOWN=0 PROPER_UNKNOWN value\n                         * @property {number} PROPER=1 PROPER value\n                         * @property {number} NOT_PROPER=2 NOT_PROPER value\n                         */\n                        PartOfSpeech.Proper = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"PROPER_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"PROPER\"] = 1;\n                            values[valuesById[2] = \"NOT_PROPER\"] = 2;\n                            return values;\n                        })();\n    \n                        /**\n                         * Reciprocity enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Reciprocity\n                         * @enum {string}\n                         * @property {number} RECIPROCITY_UNKNOWN=0 RECIPROCITY_UNKNOWN value\n                         * @property {number} RECIPROCAL=1 RECIPROCAL value\n                         * @property {number} NON_RECIPROCAL=2 NON_RECIPROCAL value\n                         */\n                        PartOfSpeech.Reciprocity = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"RECIPROCITY_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"RECIPROCAL\"] = 1;\n                            values[valuesById[2] = \"NON_RECIPROCAL\"] = 2;\n                            return values;\n                        })();\n    \n                        /**\n                         * Tense enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Tense\n                         * @enum {string}\n                         * @property {number} TENSE_UNKNOWN=0 TENSE_UNKNOWN value\n                         * @property {number} CONDITIONAL_TENSE=1 CONDITIONAL_TENSE value\n                         * @property {number} FUTURE=2 FUTURE value\n                         * @property {number} PAST=3 PAST value\n                         * @property {number} PRESENT=4 PRESENT value\n                         * @property {number} IMPERFECT=5 IMPERFECT value\n                         * @property {number} PLUPERFECT=6 PLUPERFECT value\n                         */\n                        PartOfSpeech.Tense = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"TENSE_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"CONDITIONAL_TENSE\"] = 1;\n                            values[valuesById[2] = \"FUTURE\"] = 2;\n                            values[valuesById[3] = \"PAST\"] = 3;\n                            values[valuesById[4] = \"PRESENT\"] = 4;\n                            values[valuesById[5] = \"IMPERFECT\"] = 5;\n                            values[valuesById[6] = \"PLUPERFECT\"] = 6;\n                            return values;\n                        })();\n    \n                        /**\n                         * Voice enum.\n                         * @name google.cloud.language.v1beta2.PartOfSpeech.Voice\n                         * @enum {string}\n                         * @property {number} VOICE_UNKNOWN=0 VOICE_UNKNOWN value\n                         * @property {number} ACTIVE=1 ACTIVE value\n                         * @property {number} CAUSATIVE=2 CAUSATIVE value\n                         * @property {number} PASSIVE=3 PASSIVE value\n                         */\n                        PartOfSpeech.Voice = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"VOICE_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ACTIVE\"] = 1;\n                            values[valuesById[2] = \"CAUSATIVE\"] = 2;\n                            values[valuesById[3] = \"PASSIVE\"] = 3;\n                            return values;\n                        })();\n    \n                        return PartOfSpeech;\n                    })();\n    \n                    v1beta2.DependencyEdge = (function() {\n    \n                        /**\n                         * Properties of a DependencyEdge.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IDependencyEdge\n                         * @property {number|null} [headTokenIndex] DependencyEdge headTokenIndex\n                         * @property {google.cloud.language.v1beta2.DependencyEdge.Label|null} [label] DependencyEdge label\n                         */\n    \n                        /**\n                         * Constructs a new DependencyEdge.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a DependencyEdge.\n                         * @implements IDependencyEdge\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IDependencyEdge=} [properties] Properties to set\n                         */\n                        function DependencyEdge(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * DependencyEdge headTokenIndex.\n                         * @member {number} headTokenIndex\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @instance\n                         */\n                        DependencyEdge.prototype.headTokenIndex = 0;\n    \n                        /**\n                         * DependencyEdge label.\n                         * @member {google.cloud.language.v1beta2.DependencyEdge.Label} label\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @instance\n                         */\n                        DependencyEdge.prototype.label = 0;\n    \n                        /**\n                         * Creates a new DependencyEdge instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IDependencyEdge=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.DependencyEdge} DependencyEdge instance\n                         */\n                        DependencyEdge.create = function create(properties) {\n                            return new DependencyEdge(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified DependencyEdge message. Does not implicitly {@link google.cloud.language.v1beta2.DependencyEdge.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IDependencyEdge} message DependencyEdge message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        DependencyEdge.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\"))\n                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.headTokenIndex);\n                            if (message.label != null && message.hasOwnProperty(\"label\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.label);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified DependencyEdge message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.DependencyEdge.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IDependencyEdge} message DependencyEdge message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        DependencyEdge.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a DependencyEdge message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.DependencyEdge} DependencyEdge\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        DependencyEdge.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.DependencyEdge();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.headTokenIndex = reader.int32();\n                                    break;\n                                case 2:\n                                    message.label = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a DependencyEdge message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.DependencyEdge} DependencyEdge\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        DependencyEdge.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a DependencyEdge message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        DependencyEdge.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\"))\n                                if (!$util.isInteger(message.headTokenIndex))\n                                    return \"headTokenIndex: integer expected\";\n                            if (message.label != null && message.hasOwnProperty(\"label\"))\n                                switch (message.label) {\n                                default:\n                                    return \"label: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                case 4:\n                                case 5:\n                                case 6:\n                                case 7:\n                                case 8:\n                                case 9:\n                                case 10:\n                                case 11:\n                                case 12:\n                                case 13:\n                                case 14:\n                                case 15:\n                                case 16:\n                                case 17:\n                                case 18:\n                                case 19:\n                                case 20:\n                                case 21:\n                                case 22:\n                                case 23:\n                                case 24:\n                                case 25:\n                                case 26:\n                                case 27:\n                                case 28:\n                                case 29:\n                                case 30:\n                                case 31:\n                                case 32:\n                                case 33:\n                                case 34:\n                                case 35:\n                                case 36:\n                                case 37:\n                                case 38:\n                                case 39:\n                                case 40:\n                                case 41:\n                                case 42:\n                                case 43:\n                                case 44:\n                                case 45:\n                                case 46:\n                                case 47:\n                                case 48:\n                                case 49:\n                                case 50:\n                                case 51:\n                                case 52:\n                                case 53:\n                                case 54:\n                                case 55:\n                                case 56:\n                                case 57:\n                                case 58:\n                                case 59:\n                                case 60:\n                                case 61:\n                                case 62:\n                                case 63:\n                                case 64:\n                                case 65:\n                                case 66:\n                                case 67:\n                                case 68:\n                                case 69:\n                                case 70:\n                                case 71:\n                                case 72:\n                                case 73:\n                                case 74:\n                                case 75:\n                                case 76:\n                                case 77:\n                                case 78:\n                                case 79:\n                                case 80:\n                                case 81:\n                                case 82:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a DependencyEdge message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.DependencyEdge} DependencyEdge\n                         */\n                        DependencyEdge.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.DependencyEdge)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.DependencyEdge();\n                            if (object.headTokenIndex != null)\n                                message.headTokenIndex = object.headTokenIndex | 0;\n                            switch (object.label) {\n                            case \"UNKNOWN\":\n                            case 0:\n                                message.label = 0;\n                                break;\n                            case \"ABBREV\":\n                            case 1:\n                                message.label = 1;\n                                break;\n                            case \"ACOMP\":\n                            case 2:\n                                message.label = 2;\n                                break;\n                            case \"ADVCL\":\n                            case 3:\n                                message.label = 3;\n                                break;\n                            case \"ADVMOD\":\n                            case 4:\n                                message.label = 4;\n                                break;\n                            case \"AMOD\":\n                            case 5:\n                                message.label = 5;\n                                break;\n                            case \"APPOS\":\n                            case 6:\n                                message.label = 6;\n                                break;\n                            case \"ATTR\":\n                            case 7:\n                                message.label = 7;\n                                break;\n                            case \"AUX\":\n                            case 8:\n                                message.label = 8;\n                                break;\n                            case \"AUXPASS\":\n                            case 9:\n                                message.label = 9;\n                                break;\n                            case \"CC\":\n                            case 10:\n                                message.label = 10;\n                                break;\n                            case \"CCOMP\":\n                            case 11:\n                                message.label = 11;\n                                break;\n                            case \"CONJ\":\n                            case 12:\n                                message.label = 12;\n                                break;\n                            case \"CSUBJ\":\n                            case 13:\n                                message.label = 13;\n                                break;\n                            case \"CSUBJPASS\":\n                            case 14:\n                                message.label = 14;\n                                break;\n                            case \"DEP\":\n                            case 15:\n                                message.label = 15;\n                                break;\n                            case \"DET\":\n                            case 16:\n                                message.label = 16;\n                                break;\n                            case \"DISCOURSE\":\n                            case 17:\n                                message.label = 17;\n                                break;\n                            case \"DOBJ\":\n                            case 18:\n                                message.label = 18;\n                                break;\n                            case \"EXPL\":\n                            case 19:\n                                message.label = 19;\n                                break;\n                            case \"GOESWITH\":\n                            case 20:\n                                message.label = 20;\n                                break;\n                            case \"IOBJ\":\n                            case 21:\n                                message.label = 21;\n                                break;\n                            case \"MARK\":\n                            case 22:\n                                message.label = 22;\n                                break;\n                            case \"MWE\":\n                            case 23:\n                                message.label = 23;\n                                break;\n                            case \"MWV\":\n                            case 24:\n                                message.label = 24;\n                                break;\n                            case \"NEG\":\n                            case 25:\n                                message.label = 25;\n                                break;\n                            case \"NN\":\n                            case 26:\n                                message.label = 26;\n                                break;\n                            case \"NPADVMOD\":\n                            case 27:\n                                message.label = 27;\n                                break;\n                            case \"NSUBJ\":\n                            case 28:\n                                message.label = 28;\n                                break;\n                            case \"NSUBJPASS\":\n                            case 29:\n                                message.label = 29;\n                                break;\n                            case \"NUM\":\n                            case 30:\n                                message.label = 30;\n                                break;\n                            case \"NUMBER\":\n                            case 31:\n                                message.label = 31;\n                                break;\n                            case \"P\":\n                            case 32:\n                                message.label = 32;\n                                break;\n                            case \"PARATAXIS\":\n                            case 33:\n                                message.label = 33;\n                                break;\n                            case \"PARTMOD\":\n                            case 34:\n                                message.label = 34;\n                                break;\n                            case \"PCOMP\":\n                            case 35:\n                                message.label = 35;\n                                break;\n                            case \"POBJ\":\n                            case 36:\n                                message.label = 36;\n                                break;\n                            case \"POSS\":\n                            case 37:\n                                message.label = 37;\n                                break;\n                            case \"POSTNEG\":\n                            case 38:\n                                message.label = 38;\n                                break;\n                            case \"PRECOMP\":\n                            case 39:\n                                message.label = 39;\n                                break;\n                            case \"PRECONJ\":\n                            case 40:\n                                message.label = 40;\n                                break;\n                            case \"PREDET\":\n                            case 41:\n                                message.label = 41;\n                                break;\n                            case \"PREF\":\n                            case 42:\n                                message.label = 42;\n                                break;\n                            case \"PREP\":\n                            case 43:\n                                message.label = 43;\n                                break;\n                            case \"PRONL\":\n                            case 44:\n                                message.label = 44;\n                                break;\n                            case \"PRT\":\n                            case 45:\n                                message.label = 45;\n                                break;\n                            case \"PS\":\n                            case 46:\n                                message.label = 46;\n                                break;\n                            case \"QUANTMOD\":\n                            case 47:\n                                message.label = 47;\n                                break;\n                            case \"RCMOD\":\n                            case 48:\n                                message.label = 48;\n                                break;\n                            case \"RCMODREL\":\n                            case 49:\n                                message.label = 49;\n                                break;\n                            case \"RDROP\":\n                            case 50:\n                                message.label = 50;\n                                break;\n                            case \"REF\":\n                            case 51:\n                                message.label = 51;\n                                break;\n                            case \"REMNANT\":\n                            case 52:\n                                message.label = 52;\n                                break;\n                            case \"REPARANDUM\":\n                            case 53:\n                                message.label = 53;\n                                break;\n                            case \"ROOT\":\n                            case 54:\n                                message.label = 54;\n                                break;\n                            case \"SNUM\":\n                            case 55:\n                                message.label = 55;\n                                break;\n                            case \"SUFF\":\n                            case 56:\n                                message.label = 56;\n                                break;\n                            case \"TMOD\":\n                            case 57:\n                                message.label = 57;\n                                break;\n                            case \"TOPIC\":\n                            case 58:\n                                message.label = 58;\n                                break;\n                            case \"VMOD\":\n                            case 59:\n                                message.label = 59;\n                                break;\n                            case \"VOCATIVE\":\n                            case 60:\n                                message.label = 60;\n                                break;\n                            case \"XCOMP\":\n                            case 61:\n                                message.label = 61;\n                                break;\n                            case \"SUFFIX\":\n                            case 62:\n                                message.label = 62;\n                                break;\n                            case \"TITLE\":\n                            case 63:\n                                message.label = 63;\n                                break;\n                            case \"ADVPHMOD\":\n                            case 64:\n                                message.label = 64;\n                                break;\n                            case \"AUXCAUS\":\n                            case 65:\n                                message.label = 65;\n                                break;\n                            case \"AUXVV\":\n                            case 66:\n                                message.label = 66;\n                                break;\n                            case \"DTMOD\":\n                            case 67:\n                                message.label = 67;\n                                break;\n                            case \"FOREIGN\":\n                            case 68:\n                                message.label = 68;\n                                break;\n                            case \"KW\":\n                            case 69:\n                                message.label = 69;\n                                break;\n                            case \"LIST\":\n                            case 70:\n                                message.label = 70;\n                                break;\n                            case \"NOMC\":\n                            case 71:\n                                message.label = 71;\n                                break;\n                            case \"NOMCSUBJ\":\n                            case 72:\n                                message.label = 72;\n                                break;\n                            case \"NOMCSUBJPASS\":\n                            case 73:\n                                message.label = 73;\n                                break;\n                            case \"NUMC\":\n                            case 74:\n                                message.label = 74;\n                                break;\n                            case \"COP\":\n                            case 75:\n                                message.label = 75;\n                                break;\n                            case \"DISLOCATED\":\n                            case 76:\n                                message.label = 76;\n                                break;\n                            case \"ASP\":\n                            case 77:\n                                message.label = 77;\n                                break;\n                            case \"GMOD\":\n                            case 78:\n                                message.label = 78;\n                                break;\n                            case \"GOBJ\":\n                            case 79:\n                                message.label = 79;\n                                break;\n                            case \"INFMOD\":\n                            case 80:\n                                message.label = 80;\n                                break;\n                            case \"MES\":\n                            case 81:\n                                message.label = 81;\n                                break;\n                            case \"NCOMP\":\n                            case 82:\n                                message.label = 82;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a DependencyEdge message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @static\n                         * @param {google.cloud.language.v1beta2.DependencyEdge} message DependencyEdge\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        DependencyEdge.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.headTokenIndex = 0;\n                                object.label = options.enums === String ? \"UNKNOWN\" : 0;\n                            }\n                            if (message.headTokenIndex != null && message.hasOwnProperty(\"headTokenIndex\"))\n                                object.headTokenIndex = message.headTokenIndex;\n                            if (message.label != null && message.hasOwnProperty(\"label\"))\n                                object.label = options.enums === String ? $root.google.cloud.language.v1beta2.DependencyEdge.Label[message.label] : message.label;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this DependencyEdge to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.DependencyEdge\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        DependencyEdge.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Label enum.\n                         * @name google.cloud.language.v1beta2.DependencyEdge.Label\n                         * @enum {string}\n                         * @property {number} UNKNOWN=0 UNKNOWN value\n                         * @property {number} ABBREV=1 ABBREV value\n                         * @property {number} ACOMP=2 ACOMP value\n                         * @property {number} ADVCL=3 ADVCL value\n                         * @property {number} ADVMOD=4 ADVMOD value\n                         * @property {number} AMOD=5 AMOD value\n                         * @property {number} APPOS=6 APPOS value\n                         * @property {number} ATTR=7 ATTR value\n                         * @property {number} AUX=8 AUX value\n                         * @property {number} AUXPASS=9 AUXPASS value\n                         * @property {number} CC=10 CC value\n                         * @property {number} CCOMP=11 CCOMP value\n                         * @property {number} CONJ=12 CONJ value\n                         * @property {number} CSUBJ=13 CSUBJ value\n                         * @property {number} CSUBJPASS=14 CSUBJPASS value\n                         * @property {number} DEP=15 DEP value\n                         * @property {number} DET=16 DET value\n                         * @property {number} DISCOURSE=17 DISCOURSE value\n                         * @property {number} DOBJ=18 DOBJ value\n                         * @property {number} EXPL=19 EXPL value\n                         * @property {number} GOESWITH=20 GOESWITH value\n                         * @property {number} IOBJ=21 IOBJ value\n                         * @property {number} MARK=22 MARK value\n                         * @property {number} MWE=23 MWE value\n                         * @property {number} MWV=24 MWV value\n                         * @property {number} NEG=25 NEG value\n                         * @property {number} NN=26 NN value\n                         * @property {number} NPADVMOD=27 NPADVMOD value\n                         * @property {number} NSUBJ=28 NSUBJ value\n                         * @property {number} NSUBJPASS=29 NSUBJPASS value\n                         * @property {number} NUM=30 NUM value\n                         * @property {number} NUMBER=31 NUMBER value\n                         * @property {number} P=32 P value\n                         * @property {number} PARATAXIS=33 PARATAXIS value\n                         * @property {number} PARTMOD=34 PARTMOD value\n                         * @property {number} PCOMP=35 PCOMP value\n                         * @property {number} POBJ=36 POBJ value\n                         * @property {number} POSS=37 POSS value\n                         * @property {number} POSTNEG=38 POSTNEG value\n                         * @property {number} PRECOMP=39 PRECOMP value\n                         * @property {number} PRECONJ=40 PRECONJ value\n                         * @property {number} PREDET=41 PREDET value\n                         * @property {number} PREF=42 PREF value\n                         * @property {number} PREP=43 PREP value\n                         * @property {number} PRONL=44 PRONL value\n                         * @property {number} PRT=45 PRT value\n                         * @property {number} PS=46 PS value\n                         * @property {number} QUANTMOD=47 QUANTMOD value\n                         * @property {number} RCMOD=48 RCMOD value\n                         * @property {number} RCMODREL=49 RCMODREL value\n                         * @property {number} RDROP=50 RDROP value\n                         * @property {number} REF=51 REF value\n                         * @property {number} REMNANT=52 REMNANT value\n                         * @property {number} REPARANDUM=53 REPARANDUM value\n                         * @property {number} ROOT=54 ROOT value\n                         * @property {number} SNUM=55 SNUM value\n                         * @property {number} SUFF=56 SUFF value\n                         * @property {number} TMOD=57 TMOD value\n                         * @property {number} TOPIC=58 TOPIC value\n                         * @property {number} VMOD=59 VMOD value\n                         * @property {number} VOCATIVE=60 VOCATIVE value\n                         * @property {number} XCOMP=61 XCOMP value\n                         * @property {number} SUFFIX=62 SUFFIX value\n                         * @property {number} TITLE=63 TITLE value\n                         * @property {number} ADVPHMOD=64 ADVPHMOD value\n                         * @property {number} AUXCAUS=65 AUXCAUS value\n                         * @property {number} AUXVV=66 AUXVV value\n                         * @property {number} DTMOD=67 DTMOD value\n                         * @property {number} FOREIGN=68 FOREIGN value\n                         * @property {number} KW=69 KW value\n                         * @property {number} LIST=70 LIST value\n                         * @property {number} NOMC=71 NOMC value\n                         * @property {number} NOMCSUBJ=72 NOMCSUBJ value\n                         * @property {number} NOMCSUBJPASS=73 NOMCSUBJPASS value\n                         * @property {number} NUMC=74 NUMC value\n                         * @property {number} COP=75 COP value\n                         * @property {number} DISLOCATED=76 DISLOCATED value\n                         * @property {number} ASP=77 ASP value\n                         * @property {number} GMOD=78 GMOD value\n                         * @property {number} GOBJ=79 GOBJ value\n                         * @property {number} INFMOD=80 INFMOD value\n                         * @property {number} MES=81 MES value\n                         * @property {number} NCOMP=82 NCOMP value\n                         */\n                        DependencyEdge.Label = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"ABBREV\"] = 1;\n                            values[valuesById[2] = \"ACOMP\"] = 2;\n                            values[valuesById[3] = \"ADVCL\"] = 3;\n                            values[valuesById[4] = \"ADVMOD\"] = 4;\n                            values[valuesById[5] = \"AMOD\"] = 5;\n                            values[valuesById[6] = \"APPOS\"] = 6;\n                            values[valuesById[7] = \"ATTR\"] = 7;\n                            values[valuesById[8] = \"AUX\"] = 8;\n                            values[valuesById[9] = \"AUXPASS\"] = 9;\n                            values[valuesById[10] = \"CC\"] = 10;\n                            values[valuesById[11] = \"CCOMP\"] = 11;\n                            values[valuesById[12] = \"CONJ\"] = 12;\n                            values[valuesById[13] = \"CSUBJ\"] = 13;\n                            values[valuesById[14] = \"CSUBJPASS\"] = 14;\n                            values[valuesById[15] = \"DEP\"] = 15;\n                            values[valuesById[16] = \"DET\"] = 16;\n                            values[valuesById[17] = \"DISCOURSE\"] = 17;\n                            values[valuesById[18] = \"DOBJ\"] = 18;\n                            values[valuesById[19] = \"EXPL\"] = 19;\n                            values[valuesById[20] = \"GOESWITH\"] = 20;\n                            values[valuesById[21] = \"IOBJ\"] = 21;\n                            values[valuesById[22] = \"MARK\"] = 22;\n                            values[valuesById[23] = \"MWE\"] = 23;\n                            values[valuesById[24] = \"MWV\"] = 24;\n                            values[valuesById[25] = \"NEG\"] = 25;\n                            values[valuesById[26] = \"NN\"] = 26;\n                            values[valuesById[27] = \"NPADVMOD\"] = 27;\n                            values[valuesById[28] = \"NSUBJ\"] = 28;\n                            values[valuesById[29] = \"NSUBJPASS\"] = 29;\n                            values[valuesById[30] = \"NUM\"] = 30;\n                            values[valuesById[31] = \"NUMBER\"] = 31;\n                            values[valuesById[32] = \"P\"] = 32;\n                            values[valuesById[33] = \"PARATAXIS\"] = 33;\n                            values[valuesById[34] = \"PARTMOD\"] = 34;\n                            values[valuesById[35] = \"PCOMP\"] = 35;\n                            values[valuesById[36] = \"POBJ\"] = 36;\n                            values[valuesById[37] = \"POSS\"] = 37;\n                            values[valuesById[38] = \"POSTNEG\"] = 38;\n                            values[valuesById[39] = \"PRECOMP\"] = 39;\n                            values[valuesById[40] = \"PRECONJ\"] = 40;\n                            values[valuesById[41] = \"PREDET\"] = 41;\n                            values[valuesById[42] = \"PREF\"] = 42;\n                            values[valuesById[43] = \"PREP\"] = 43;\n                            values[valuesById[44] = \"PRONL\"] = 44;\n                            values[valuesById[45] = \"PRT\"] = 45;\n                            values[valuesById[46] = \"PS\"] = 46;\n                            values[valuesById[47] = \"QUANTMOD\"] = 47;\n                            values[valuesById[48] = \"RCMOD\"] = 48;\n                            values[valuesById[49] = \"RCMODREL\"] = 49;\n                            values[valuesById[50] = \"RDROP\"] = 50;\n                            values[valuesById[51] = \"REF\"] = 51;\n                            values[valuesById[52] = \"REMNANT\"] = 52;\n                            values[valuesById[53] = \"REPARANDUM\"] = 53;\n                            values[valuesById[54] = \"ROOT\"] = 54;\n                            values[valuesById[55] = \"SNUM\"] = 55;\n                            values[valuesById[56] = \"SUFF\"] = 56;\n                            values[valuesById[57] = \"TMOD\"] = 57;\n                            values[valuesById[58] = \"TOPIC\"] = 58;\n                            values[valuesById[59] = \"VMOD\"] = 59;\n                            values[valuesById[60] = \"VOCATIVE\"] = 60;\n                            values[valuesById[61] = \"XCOMP\"] = 61;\n                            values[valuesById[62] = \"SUFFIX\"] = 62;\n                            values[valuesById[63] = \"TITLE\"] = 63;\n                            values[valuesById[64] = \"ADVPHMOD\"] = 64;\n                            values[valuesById[65] = \"AUXCAUS\"] = 65;\n                            values[valuesById[66] = \"AUXVV\"] = 66;\n                            values[valuesById[67] = \"DTMOD\"] = 67;\n                            values[valuesById[68] = \"FOREIGN\"] = 68;\n                            values[valuesById[69] = \"KW\"] = 69;\n                            values[valuesById[70] = \"LIST\"] = 70;\n                            values[valuesById[71] = \"NOMC\"] = 71;\n                            values[valuesById[72] = \"NOMCSUBJ\"] = 72;\n                            values[valuesById[73] = \"NOMCSUBJPASS\"] = 73;\n                            values[valuesById[74] = \"NUMC\"] = 74;\n                            values[valuesById[75] = \"COP\"] = 75;\n                            values[valuesById[76] = \"DISLOCATED\"] = 76;\n                            values[valuesById[77] = \"ASP\"] = 77;\n                            values[valuesById[78] = \"GMOD\"] = 78;\n                            values[valuesById[79] = \"GOBJ\"] = 79;\n                            values[valuesById[80] = \"INFMOD\"] = 80;\n                            values[valuesById[81] = \"MES\"] = 81;\n                            values[valuesById[82] = \"NCOMP\"] = 82;\n                            return values;\n                        })();\n    \n                        return DependencyEdge;\n                    })();\n    \n                    v1beta2.EntityMention = (function() {\n    \n                        /**\n                         * Properties of an EntityMention.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IEntityMention\n                         * @property {google.cloud.language.v1beta2.ITextSpan|null} [text] EntityMention text\n                         * @property {google.cloud.language.v1beta2.EntityMention.Type|null} [type] EntityMention type\n                         * @property {google.cloud.language.v1beta2.ISentiment|null} [sentiment] EntityMention sentiment\n                         */\n    \n                        /**\n                         * Constructs a new EntityMention.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an EntityMention.\n                         * @implements IEntityMention\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IEntityMention=} [properties] Properties to set\n                         */\n                        function EntityMention(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * EntityMention text.\n                         * @member {google.cloud.language.v1beta2.ITextSpan|null|undefined} text\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @instance\n                         */\n                        EntityMention.prototype.text = null;\n    \n                        /**\n                         * EntityMention type.\n                         * @member {google.cloud.language.v1beta2.EntityMention.Type} type\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @instance\n                         */\n                        EntityMention.prototype.type = 0;\n    \n                        /**\n                         * EntityMention sentiment.\n                         * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} sentiment\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @instance\n                         */\n                        EntityMention.prototype.sentiment = null;\n    \n                        /**\n                         * Creates a new EntityMention instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IEntityMention=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.EntityMention} EntityMention instance\n                         */\n                        EntityMention.create = function create(properties) {\n                            return new EntityMention(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified EntityMention message. Does not implicitly {@link google.cloud.language.v1beta2.EntityMention.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IEntityMention} message EntityMention message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        EntityMention.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                $root.google.cloud.language.v1beta2.TextSpan.encode(message.text, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                $root.google.cloud.language.v1beta2.Sentiment.encode(message.sentiment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified EntityMention message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.EntityMention.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IEntityMention} message EntityMention message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        EntityMention.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an EntityMention message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.EntityMention} EntityMention\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        EntityMention.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.EntityMention();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.text = $root.google.cloud.language.v1beta2.TextSpan.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.type = reader.int32();\n                                    break;\n                                case 3:\n                                    message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an EntityMention message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.EntityMention} EntityMention\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        EntityMention.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an EntityMention message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        EntityMention.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.text != null && message.hasOwnProperty(\"text\")) {\n                                var error = $root.google.cloud.language.v1beta2.TextSpan.verify(message.text);\n                                if (error)\n                                    return \"text.\" + error;\n                            }\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                switch (message.type) {\n                                default:\n                                    return \"type: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                    break;\n                                }\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\")) {\n                                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.sentiment);\n                                if (error)\n                                    return \"sentiment.\" + error;\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an EntityMention message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.EntityMention} EntityMention\n                         */\n                        EntityMention.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.EntityMention)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.EntityMention();\n                            if (object.text != null) {\n                                if (typeof object.text !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.EntityMention.text: object expected\");\n                                message.text = $root.google.cloud.language.v1beta2.TextSpan.fromObject(object.text);\n                            }\n                            switch (object.type) {\n                            case \"TYPE_UNKNOWN\":\n                            case 0:\n                                message.type = 0;\n                                break;\n                            case \"PROPER\":\n                            case 1:\n                                message.type = 1;\n                                break;\n                            case \"COMMON\":\n                            case 2:\n                                message.type = 2;\n                                break;\n                            }\n                            if (object.sentiment != null) {\n                                if (typeof object.sentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.EntityMention.sentiment: object expected\");\n                                message.sentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.sentiment);\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an EntityMention message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @static\n                         * @param {google.cloud.language.v1beta2.EntityMention} message EntityMention\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        EntityMention.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.text = null;\n                                object.type = options.enums === String ? \"TYPE_UNKNOWN\" : 0;\n                                object.sentiment = null;\n                            }\n                            if (message.text != null && message.hasOwnProperty(\"text\"))\n                                object.text = $root.google.cloud.language.v1beta2.TextSpan.toObject(message.text, options);\n                            if (message.type != null && message.hasOwnProperty(\"type\"))\n                                object.type = options.enums === String ? $root.google.cloud.language.v1beta2.EntityMention.Type[message.type] : message.type;\n                            if (message.sentiment != null && message.hasOwnProperty(\"sentiment\"))\n                                object.sentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.sentiment, options);\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this EntityMention to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.EntityMention\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        EntityMention.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        /**\n                         * Type enum.\n                         * @name google.cloud.language.v1beta2.EntityMention.Type\n                         * @enum {string}\n                         * @property {number} TYPE_UNKNOWN=0 TYPE_UNKNOWN value\n                         * @property {number} PROPER=1 PROPER value\n                         * @property {number} COMMON=2 COMMON value\n                         */\n                        EntityMention.Type = (function() {\n                            var valuesById = {}, values = Object.create(valuesById);\n                            values[valuesById[0] = \"TYPE_UNKNOWN\"] = 0;\n                            values[valuesById[1] = \"PROPER\"] = 1;\n                            values[valuesById[2] = \"COMMON\"] = 2;\n                            return values;\n                        })();\n    \n                        return EntityMention;\n                    })();\n    \n                    v1beta2.TextSpan = (function() {\n    \n                        /**\n                         * Properties of a TextSpan.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface ITextSpan\n                         * @property {string|null} [content] TextSpan content\n                         * @property {number|null} [beginOffset] TextSpan beginOffset\n                         */\n    \n                        /**\n                         * Constructs a new TextSpan.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a TextSpan.\n                         * @implements ITextSpan\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.ITextSpan=} [properties] Properties to set\n                         */\n                        function TextSpan(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * TextSpan content.\n                         * @member {string} content\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @instance\n                         */\n                        TextSpan.prototype.content = \"\";\n    \n                        /**\n                         * TextSpan beginOffset.\n                         * @member {number} beginOffset\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @instance\n                         */\n                        TextSpan.prototype.beginOffset = 0;\n    \n                        /**\n                         * Creates a new TextSpan instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ITextSpan=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.TextSpan} TextSpan instance\n                         */\n                        TextSpan.create = function create(properties) {\n                            return new TextSpan(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified TextSpan message. Does not implicitly {@link google.cloud.language.v1beta2.TextSpan.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ITextSpan} message TextSpan message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        TextSpan.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.content != null && message.hasOwnProperty(\"content\"))\n                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.content);\n                            if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.beginOffset);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified TextSpan message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.TextSpan.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ITextSpan} message TextSpan message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        TextSpan.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a TextSpan message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.TextSpan} TextSpan\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        TextSpan.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.TextSpan();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.content = reader.string();\n                                    break;\n                                case 2:\n                                    message.beginOffset = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a TextSpan message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.TextSpan} TextSpan\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        TextSpan.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a TextSpan message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        TextSpan.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.content != null && message.hasOwnProperty(\"content\"))\n                                if (!$util.isString(message.content))\n                                    return \"content: string expected\";\n                            if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\"))\n                                if (!$util.isInteger(message.beginOffset))\n                                    return \"beginOffset: integer expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a TextSpan message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.TextSpan} TextSpan\n                         */\n                        TextSpan.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.TextSpan)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.TextSpan();\n                            if (object.content != null)\n                                message.content = String(object.content);\n                            if (object.beginOffset != null)\n                                message.beginOffset = object.beginOffset | 0;\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a TextSpan message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @static\n                         * @param {google.cloud.language.v1beta2.TextSpan} message TextSpan\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        TextSpan.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.content = \"\";\n                                object.beginOffset = 0;\n                            }\n                            if (message.content != null && message.hasOwnProperty(\"content\"))\n                                object.content = message.content;\n                            if (message.beginOffset != null && message.hasOwnProperty(\"beginOffset\"))\n                                object.beginOffset = message.beginOffset;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this TextSpan to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.TextSpan\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        TextSpan.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return TextSpan;\n                    })();\n    \n                    v1beta2.ClassificationCategory = (function() {\n    \n                        /**\n                         * Properties of a ClassificationCategory.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IClassificationCategory\n                         * @property {string|null} [name] ClassificationCategory name\n                         * @property {number|null} [confidence] ClassificationCategory confidence\n                         */\n    \n                        /**\n                         * Constructs a new ClassificationCategory.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a ClassificationCategory.\n                         * @implements IClassificationCategory\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IClassificationCategory=} [properties] Properties to set\n                         */\n                        function ClassificationCategory(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * ClassificationCategory name.\n                         * @member {string} name\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @instance\n                         */\n                        ClassificationCategory.prototype.name = \"\";\n    \n                        /**\n                         * ClassificationCategory confidence.\n                         * @member {number} confidence\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @instance\n                         */\n                        ClassificationCategory.prototype.confidence = 0;\n    \n                        /**\n                         * Creates a new ClassificationCategory instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassificationCategory=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.ClassificationCategory} ClassificationCategory instance\n                         */\n                        ClassificationCategory.create = function create(properties) {\n                            return new ClassificationCategory(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified ClassificationCategory message. Does not implicitly {@link google.cloud.language.v1beta2.ClassificationCategory.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassificationCategory} message ClassificationCategory message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassificationCategory.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                            if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified ClassificationCategory message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.ClassificationCategory.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassificationCategory} message ClassificationCategory message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassificationCategory.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a ClassificationCategory message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.ClassificationCategory} ClassificationCategory\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassificationCategory.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.ClassificationCategory();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.name = reader.string();\n                                    break;\n                                case 2:\n                                    message.confidence = reader.float();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a ClassificationCategory message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.ClassificationCategory} ClassificationCategory\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassificationCategory.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a ClassificationCategory message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        ClassificationCategory.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                if (!$util.isString(message.name))\n                                    return \"name: string expected\";\n                            if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n                                if (typeof message.confidence !== \"number\")\n                                    return \"confidence: number expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a ClassificationCategory message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.ClassificationCategory} ClassificationCategory\n                         */\n                        ClassificationCategory.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.ClassificationCategory)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.ClassificationCategory();\n                            if (object.name != null)\n                                message.name = String(object.name);\n                            if (object.confidence != null)\n                                message.confidence = Number(object.confidence);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a ClassificationCategory message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ClassificationCategory} message ClassificationCategory\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        ClassificationCategory.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.name = \"\";\n                                object.confidence = 0;\n                            }\n                            if (message.name != null && message.hasOwnProperty(\"name\"))\n                                object.name = message.name;\n                            if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n                                object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this ClassificationCategory to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.ClassificationCategory\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        ClassificationCategory.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return ClassificationCategory;\n                    })();\n    \n                    v1beta2.AnalyzeSentimentRequest = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeSentimentRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnalyzeSentimentRequest\n                         * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnalyzeSentimentRequest document\n                         * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnalyzeSentimentRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeSentimentRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnalyzeSentimentRequest.\n                         * @implements IAnalyzeSentimentRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest=} [properties] Properties to set\n                         */\n                        function AnalyzeSentimentRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeSentimentRequest document.\n                         * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @instance\n                         */\n                        AnalyzeSentimentRequest.prototype.document = null;\n    \n                        /**\n                         * AnalyzeSentimentRequest encodingType.\n                         * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @instance\n                         */\n                        AnalyzeSentimentRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnalyzeSentimentRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSentimentRequest} AnalyzeSentimentRequest instance\n                         */\n                        AnalyzeSentimentRequest.create = function create(properties) {\n                            return new AnalyzeSentimentRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSentimentRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSentimentRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest} message AnalyzeSentimentRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSentimentRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSentimentRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSentimentRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentRequest} message AnalyzeSentimentRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSentimentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSentimentRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSentimentRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnalyzeSentimentRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSentimentRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSentimentRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeSentimentRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeSentimentRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeSentimentRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSentimentRequest} AnalyzeSentimentRequest\n                         */\n                        AnalyzeSentimentRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeSentimentRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnalyzeSentimentRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSentimentRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeSentimentRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnalyzeSentimentRequest} message AnalyzeSentimentRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeSentimentRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeSentimentRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeSentimentRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeSentimentRequest;\n                    })();\n    \n                    v1beta2.AnalyzeSentimentResponse = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeSentimentResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnalyzeSentimentResponse\n                         * @property {google.cloud.language.v1beta2.ISentiment|null} [documentSentiment] AnalyzeSentimentResponse documentSentiment\n                         * @property {string|null} [language] AnalyzeSentimentResponse language\n                         * @property {Array.<google.cloud.language.v1beta2.ISentence>|null} [sentences] AnalyzeSentimentResponse sentences\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeSentimentResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnalyzeSentimentResponse.\n                         * @implements IAnalyzeSentimentResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentResponse=} [properties] Properties to set\n                         */\n                        function AnalyzeSentimentResponse(properties) {\n                            this.sentences = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeSentimentResponse documentSentiment.\n                         * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} documentSentiment\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @instance\n                         */\n                        AnalyzeSentimentResponse.prototype.documentSentiment = null;\n    \n                        /**\n                         * AnalyzeSentimentResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @instance\n                         */\n                        AnalyzeSentimentResponse.prototype.language = \"\";\n    \n                        /**\n                         * AnalyzeSentimentResponse sentences.\n                         * @member {Array.<google.cloud.language.v1beta2.ISentence>} sentences\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @instance\n                         */\n                        AnalyzeSentimentResponse.prototype.sentences = $util.emptyArray;\n    \n                        /**\n                         * Creates a new AnalyzeSentimentResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSentimentResponse} AnalyzeSentimentResponse instance\n                         */\n                        AnalyzeSentimentResponse.create = function create(properties) {\n                            return new AnalyzeSentimentResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSentimentResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSentimentResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentResponse} message AnalyzeSentimentResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSentimentResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\"))\n                                $root.google.cloud.language.v1beta2.Sentiment.encode(message.documentSentiment, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.language);\n                            if (message.sentences != null && message.sentences.length)\n                                for (var i = 0; i < message.sentences.length; ++i)\n                                    $root.google.cloud.language.v1beta2.Sentence.encode(message.sentences[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSentimentResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSentimentResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSentimentResponse} message AnalyzeSentimentResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSentimentResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSentimentResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSentimentResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnalyzeSentimentResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.language = reader.string();\n                                    break;\n                                case 3:\n                                    if (!(message.sentences && message.sentences.length))\n                                        message.sentences = [];\n                                    message.sentences.push($root.google.cloud.language.v1beta2.Sentence.decode(reader, reader.uint32()));\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSentimentResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSentimentResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeSentimentResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeSentimentResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) {\n                                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.documentSentiment);\n                                if (error)\n                                    return \"documentSentiment.\" + error;\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                                if (!Array.isArray(message.sentences))\n                                    return \"sentences: array expected\";\n                                for (var i = 0; i < message.sentences.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.Sentence.verify(message.sentences[i]);\n                                    if (error)\n                                        return \"sentences.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeSentimentResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSentimentResponse} AnalyzeSentimentResponse\n                         */\n                        AnalyzeSentimentResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeSentimentResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnalyzeSentimentResponse();\n                            if (object.documentSentiment != null) {\n                                if (typeof object.documentSentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSentimentResponse.documentSentiment: object expected\");\n                                message.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.documentSentiment);\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            if (object.sentences) {\n                                if (!Array.isArray(object.sentences))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSentimentResponse.sentences: array expected\");\n                                message.sentences = [];\n                                for (var i = 0; i < object.sentences.length; ++i) {\n                                    if (typeof object.sentences[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSentimentResponse.sentences: object expected\");\n                                    message.sentences[i] = $root.google.cloud.language.v1beta2.Sentence.fromObject(object.sentences[i]);\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeSentimentResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnalyzeSentimentResponse} message AnalyzeSentimentResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeSentimentResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.sentences = [];\n                            if (options.defaults) {\n                                object.documentSentiment = null;\n                                object.language = \"\";\n                            }\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\"))\n                                object.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.documentSentiment, options);\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            if (message.sentences && message.sentences.length) {\n                                object.sentences = [];\n                                for (var j = 0; j < message.sentences.length; ++j)\n                                    object.sentences[j] = $root.google.cloud.language.v1beta2.Sentence.toObject(message.sentences[j], options);\n                            }\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeSentimentResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSentimentResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeSentimentResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeSentimentResponse;\n                    })();\n    \n                    v1beta2.AnalyzeEntitySentimentRequest = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeEntitySentimentRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnalyzeEntitySentimentRequest\n                         * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnalyzeEntitySentimentRequest document\n                         * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnalyzeEntitySentimentRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeEntitySentimentRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnalyzeEntitySentimentRequest.\n                         * @implements IAnalyzeEntitySentimentRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest=} [properties] Properties to set\n                         */\n                        function AnalyzeEntitySentimentRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeEntitySentimentRequest document.\n                         * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @instance\n                         */\n                        AnalyzeEntitySentimentRequest.prototype.document = null;\n    \n                        /**\n                         * AnalyzeEntitySentimentRequest encodingType.\n                         * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @instance\n                         */\n                        AnalyzeEntitySentimentRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnalyzeEntitySentimentRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest instance\n                         */\n                        AnalyzeEntitySentimentRequest.create = function create(properties) {\n                            return new AnalyzeEntitySentimentRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitySentimentRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitySentimentRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitySentimentRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitySentimentRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitySentimentRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitySentimentRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitySentimentRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitySentimentRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeEntitySentimentRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeEntitySentimentRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeEntitySentimentRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} AnalyzeEntitySentimentRequest\n                         */\n                        AnalyzeEntitySentimentRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeEntitySentimentRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest} message AnalyzeEntitySentimentRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeEntitySentimentRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeEntitySentimentRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeEntitySentimentRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeEntitySentimentRequest;\n                    })();\n    \n                    v1beta2.AnalyzeEntitySentimentResponse = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeEntitySentimentResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnalyzeEntitySentimentResponse\n                         * @property {Array.<google.cloud.language.v1beta2.IEntity>|null} [entities] AnalyzeEntitySentimentResponse entities\n                         * @property {string|null} [language] AnalyzeEntitySentimentResponse language\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeEntitySentimentResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnalyzeEntitySentimentResponse.\n                         * @implements IAnalyzeEntitySentimentResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentResponse=} [properties] Properties to set\n                         */\n                        function AnalyzeEntitySentimentResponse(properties) {\n                            this.entities = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeEntitySentimentResponse entities.\n                         * @member {Array.<google.cloud.language.v1beta2.IEntity>} entities\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @instance\n                         */\n                        AnalyzeEntitySentimentResponse.prototype.entities = $util.emptyArray;\n    \n                        /**\n                         * AnalyzeEntitySentimentResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @instance\n                         */\n                        AnalyzeEntitySentimentResponse.prototype.language = \"\";\n    \n                        /**\n                         * Creates a new AnalyzeEntitySentimentResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse instance\n                         */\n                        AnalyzeEntitySentimentResponse.create = function create(properties) {\n                            return new AnalyzeEntitySentimentResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitySentimentResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitySentimentResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.entities != null && message.entities.length)\n                                for (var i = 0; i < message.entities.length; ++i)\n                                    $root.google.cloud.language.v1beta2.Entity.encode(message.entities[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.language);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitySentimentResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitySentimentResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitySentimentResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitySentimentResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.entities && message.entities.length))\n                                        message.entities = [];\n                                    message.entities.push($root.google.cloud.language.v1beta2.Entity.decode(reader, reader.uint32()));\n                                    break;\n                                case 2:\n                                    message.language = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitySentimentResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitySentimentResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeEntitySentimentResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeEntitySentimentResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                                if (!Array.isArray(message.entities))\n                                    return \"entities: array expected\";\n                                for (var i = 0; i < message.entities.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.Entity.verify(message.entities[i]);\n                                    if (error)\n                                        return \"entities.\" + error;\n                                }\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeEntitySentimentResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} AnalyzeEntitySentimentResponse\n                         */\n                        AnalyzeEntitySentimentResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse();\n                            if (object.entities) {\n                                if (!Array.isArray(object.entities))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse.entities: array expected\");\n                                message.entities = [];\n                                for (var i = 0; i < object.entities.length; ++i) {\n                                    if (typeof object.entities[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse.entities: object expected\");\n                                    message.entities[i] = $root.google.cloud.language.v1beta2.Entity.fromObject(object.entities[i]);\n                                }\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeEntitySentimentResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse} message AnalyzeEntitySentimentResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeEntitySentimentResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.entities = [];\n                            if (options.defaults)\n                                object.language = \"\";\n                            if (message.entities && message.entities.length) {\n                                object.entities = [];\n                                for (var j = 0; j < message.entities.length; ++j)\n                                    object.entities[j] = $root.google.cloud.language.v1beta2.Entity.toObject(message.entities[j], options);\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeEntitySentimentResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitySentimentResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeEntitySentimentResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeEntitySentimentResponse;\n                    })();\n    \n                    v1beta2.AnalyzeEntitiesRequest = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeEntitiesRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnalyzeEntitiesRequest\n                         * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnalyzeEntitiesRequest document\n                         * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnalyzeEntitiesRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeEntitiesRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnalyzeEntitiesRequest.\n                         * @implements IAnalyzeEntitiesRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest=} [properties] Properties to set\n                         */\n                        function AnalyzeEntitiesRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeEntitiesRequest document.\n                         * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @instance\n                         */\n                        AnalyzeEntitiesRequest.prototype.document = null;\n    \n                        /**\n                         * AnalyzeEntitiesRequest encodingType.\n                         * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @instance\n                         */\n                        AnalyzeEntitiesRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnalyzeEntitiesRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest instance\n                         */\n                        AnalyzeEntitiesRequest.create = function create(properties) {\n                            return new AnalyzeEntitiesRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitiesRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitiesRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest} message AnalyzeEntitiesRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitiesRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitiesRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitiesRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesRequest} message AnalyzeEntitiesRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitiesRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitiesRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitiesRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnalyzeEntitiesRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitiesRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitiesRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeEntitiesRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeEntitiesRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeEntitiesRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} AnalyzeEntitiesRequest\n                         */\n                        AnalyzeEntitiesRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeEntitiesRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnalyzeEntitiesRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitiesRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeEntitiesRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnalyzeEntitiesRequest} message AnalyzeEntitiesRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeEntitiesRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeEntitiesRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeEntitiesRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeEntitiesRequest;\n                    })();\n    \n                    v1beta2.AnalyzeEntitiesResponse = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeEntitiesResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnalyzeEntitiesResponse\n                         * @property {Array.<google.cloud.language.v1beta2.IEntity>|null} [entities] AnalyzeEntitiesResponse entities\n                         * @property {string|null} [language] AnalyzeEntitiesResponse language\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeEntitiesResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnalyzeEntitiesResponse.\n                         * @implements IAnalyzeEntitiesResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesResponse=} [properties] Properties to set\n                         */\n                        function AnalyzeEntitiesResponse(properties) {\n                            this.entities = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeEntitiesResponse entities.\n                         * @member {Array.<google.cloud.language.v1beta2.IEntity>} entities\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @instance\n                         */\n                        AnalyzeEntitiesResponse.prototype.entities = $util.emptyArray;\n    \n                        /**\n                         * AnalyzeEntitiesResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @instance\n                         */\n                        AnalyzeEntitiesResponse.prototype.language = \"\";\n    \n                        /**\n                         * Creates a new AnalyzeEntitiesResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse instance\n                         */\n                        AnalyzeEntitiesResponse.create = function create(properties) {\n                            return new AnalyzeEntitiesResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitiesResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitiesResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesResponse} message AnalyzeEntitiesResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitiesResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.entities != null && message.entities.length)\n                                for (var i = 0; i < message.entities.length; ++i)\n                                    $root.google.cloud.language.v1beta2.Entity.encode(message.entities[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.language);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeEntitiesResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeEntitiesResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeEntitiesResponse} message AnalyzeEntitiesResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeEntitiesResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitiesResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitiesResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnalyzeEntitiesResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.entities && message.entities.length))\n                                        message.entities = [];\n                                    message.entities.push($root.google.cloud.language.v1beta2.Entity.decode(reader, reader.uint32()));\n                                    break;\n                                case 2:\n                                    message.language = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeEntitiesResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeEntitiesResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeEntitiesResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeEntitiesResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                                if (!Array.isArray(message.entities))\n                                    return \"entities: array expected\";\n                                for (var i = 0; i < message.entities.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.Entity.verify(message.entities[i]);\n                                    if (error)\n                                        return \"entities.\" + error;\n                                }\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeEntitiesResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} AnalyzeEntitiesResponse\n                         */\n                        AnalyzeEntitiesResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeEntitiesResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnalyzeEntitiesResponse();\n                            if (object.entities) {\n                                if (!Array.isArray(object.entities))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitiesResponse.entities: array expected\");\n                                message.entities = [];\n                                for (var i = 0; i < object.entities.length; ++i) {\n                                    if (typeof object.entities[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnalyzeEntitiesResponse.entities: object expected\");\n                                    message.entities[i] = $root.google.cloud.language.v1beta2.Entity.fromObject(object.entities[i]);\n                                }\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeEntitiesResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnalyzeEntitiesResponse} message AnalyzeEntitiesResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeEntitiesResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.entities = [];\n                            if (options.defaults)\n                                object.language = \"\";\n                            if (message.entities && message.entities.length) {\n                                object.entities = [];\n                                for (var j = 0; j < message.entities.length; ++j)\n                                    object.entities[j] = $root.google.cloud.language.v1beta2.Entity.toObject(message.entities[j], options);\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeEntitiesResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnalyzeEntitiesResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeEntitiesResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeEntitiesResponse;\n                    })();\n    \n                    v1beta2.AnalyzeSyntaxRequest = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeSyntaxRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnalyzeSyntaxRequest\n                         * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnalyzeSyntaxRequest document\n                         * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnalyzeSyntaxRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeSyntaxRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnalyzeSyntaxRequest.\n                         * @implements IAnalyzeSyntaxRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest=} [properties] Properties to set\n                         */\n                        function AnalyzeSyntaxRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeSyntaxRequest document.\n                         * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @instance\n                         */\n                        AnalyzeSyntaxRequest.prototype.document = null;\n    \n                        /**\n                         * AnalyzeSyntaxRequest encodingType.\n                         * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @instance\n                         */\n                        AnalyzeSyntaxRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnalyzeSyntaxRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest instance\n                         */\n                        AnalyzeSyntaxRequest.create = function create(properties) {\n                            return new AnalyzeSyntaxRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSyntaxRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSyntaxRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest} message AnalyzeSyntaxRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSyntaxRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSyntaxRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSyntaxRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxRequest} message AnalyzeSyntaxRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSyntaxRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSyntaxRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSyntaxRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnalyzeSyntaxRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSyntaxRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSyntaxRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeSyntaxRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeSyntaxRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeSyntaxRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} AnalyzeSyntaxRequest\n                         */\n                        AnalyzeSyntaxRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeSyntaxRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnalyzeSyntaxRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeSyntaxRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnalyzeSyntaxRequest} message AnalyzeSyntaxRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeSyntaxRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeSyntaxRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeSyntaxRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeSyntaxRequest;\n                    })();\n    \n                    v1beta2.AnalyzeSyntaxResponse = (function() {\n    \n                        /**\n                         * Properties of an AnalyzeSyntaxResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnalyzeSyntaxResponse\n                         * @property {Array.<google.cloud.language.v1beta2.ISentence>|null} [sentences] AnalyzeSyntaxResponse sentences\n                         * @property {Array.<google.cloud.language.v1beta2.IToken>|null} [tokens] AnalyzeSyntaxResponse tokens\n                         * @property {string|null} [language] AnalyzeSyntaxResponse language\n                         */\n    \n                        /**\n                         * Constructs a new AnalyzeSyntaxResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnalyzeSyntaxResponse.\n                         * @implements IAnalyzeSyntaxResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxResponse=} [properties] Properties to set\n                         */\n                        function AnalyzeSyntaxResponse(properties) {\n                            this.sentences = [];\n                            this.tokens = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnalyzeSyntaxResponse sentences.\n                         * @member {Array.<google.cloud.language.v1beta2.ISentence>} sentences\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @instance\n                         */\n                        AnalyzeSyntaxResponse.prototype.sentences = $util.emptyArray;\n    \n                        /**\n                         * AnalyzeSyntaxResponse tokens.\n                         * @member {Array.<google.cloud.language.v1beta2.IToken>} tokens\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @instance\n                         */\n                        AnalyzeSyntaxResponse.prototype.tokens = $util.emptyArray;\n    \n                        /**\n                         * AnalyzeSyntaxResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @instance\n                         */\n                        AnalyzeSyntaxResponse.prototype.language = \"\";\n    \n                        /**\n                         * Creates a new AnalyzeSyntaxResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse instance\n                         */\n                        AnalyzeSyntaxResponse.create = function create(properties) {\n                            return new AnalyzeSyntaxResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSyntaxResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSyntaxResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxResponse} message AnalyzeSyntaxResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSyntaxResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.sentences != null && message.sentences.length)\n                                for (var i = 0; i < message.sentences.length; ++i)\n                                    $root.google.cloud.language.v1beta2.Sentence.encode(message.sentences[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.tokens != null && message.tokens.length)\n                                for (var i = 0; i < message.tokens.length; ++i)\n                                    $root.google.cloud.language.v1beta2.Token.encode(message.tokens[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.language);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnalyzeSyntaxResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnalyzeSyntaxResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnalyzeSyntaxResponse} message AnalyzeSyntaxResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnalyzeSyntaxResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSyntaxResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSyntaxResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnalyzeSyntaxResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.sentences && message.sentences.length))\n                                        message.sentences = [];\n                                    message.sentences.push($root.google.cloud.language.v1beta2.Sentence.decode(reader, reader.uint32()));\n                                    break;\n                                case 2:\n                                    if (!(message.tokens && message.tokens.length))\n                                        message.tokens = [];\n                                    message.tokens.push($root.google.cloud.language.v1beta2.Token.decode(reader, reader.uint32()));\n                                    break;\n                                case 3:\n                                    message.language = reader.string();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnalyzeSyntaxResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnalyzeSyntaxResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnalyzeSyntaxResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnalyzeSyntaxResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                                if (!Array.isArray(message.sentences))\n                                    return \"sentences: array expected\";\n                                for (var i = 0; i < message.sentences.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.Sentence.verify(message.sentences[i]);\n                                    if (error)\n                                        return \"sentences.\" + error;\n                                }\n                            }\n                            if (message.tokens != null && message.hasOwnProperty(\"tokens\")) {\n                                if (!Array.isArray(message.tokens))\n                                    return \"tokens: array expected\";\n                                for (var i = 0; i < message.tokens.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.Token.verify(message.tokens[i]);\n                                    if (error)\n                                        return \"tokens.\" + error;\n                                }\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnalyzeSyntaxResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} AnalyzeSyntaxResponse\n                         */\n                        AnalyzeSyntaxResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnalyzeSyntaxResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnalyzeSyntaxResponse();\n                            if (object.sentences) {\n                                if (!Array.isArray(object.sentences))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxResponse.sentences: array expected\");\n                                message.sentences = [];\n                                for (var i = 0; i < object.sentences.length; ++i) {\n                                    if (typeof object.sentences[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxResponse.sentences: object expected\");\n                                    message.sentences[i] = $root.google.cloud.language.v1beta2.Sentence.fromObject(object.sentences[i]);\n                                }\n                            }\n                            if (object.tokens) {\n                                if (!Array.isArray(object.tokens))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxResponse.tokens: array expected\");\n                                message.tokens = [];\n                                for (var i = 0; i < object.tokens.length; ++i) {\n                                    if (typeof object.tokens[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnalyzeSyntaxResponse.tokens: object expected\");\n                                    message.tokens[i] = $root.google.cloud.language.v1beta2.Token.fromObject(object.tokens[i]);\n                                }\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnalyzeSyntaxResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnalyzeSyntaxResponse} message AnalyzeSyntaxResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnalyzeSyntaxResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults) {\n                                object.sentences = [];\n                                object.tokens = [];\n                            }\n                            if (options.defaults)\n                                object.language = \"\";\n                            if (message.sentences && message.sentences.length) {\n                                object.sentences = [];\n                                for (var j = 0; j < message.sentences.length; ++j)\n                                    object.sentences[j] = $root.google.cloud.language.v1beta2.Sentence.toObject(message.sentences[j], options);\n                            }\n                            if (message.tokens && message.tokens.length) {\n                                object.tokens = [];\n                                for (var j = 0; j < message.tokens.length; ++j)\n                                    object.tokens[j] = $root.google.cloud.language.v1beta2.Token.toObject(message.tokens[j], options);\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnalyzeSyntaxResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnalyzeSyntaxResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnalyzeSyntaxResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnalyzeSyntaxResponse;\n                    })();\n    \n                    v1beta2.ClassifyTextRequest = (function() {\n    \n                        /**\n                         * Properties of a ClassifyTextRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IClassifyTextRequest\n                         * @property {google.cloud.language.v1beta2.IDocument|null} [document] ClassifyTextRequest document\n                         */\n    \n                        /**\n                         * Constructs a new ClassifyTextRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a ClassifyTextRequest.\n                         * @implements IClassifyTextRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IClassifyTextRequest=} [properties] Properties to set\n                         */\n                        function ClassifyTextRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * ClassifyTextRequest document.\n                         * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @instance\n                         */\n                        ClassifyTextRequest.prototype.document = null;\n    \n                        /**\n                         * Creates a new ClassifyTextRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassifyTextRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.ClassifyTextRequest} ClassifyTextRequest instance\n                         */\n                        ClassifyTextRequest.create = function create(properties) {\n                            return new ClassifyTextRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified ClassifyTextRequest message. Does not implicitly {@link google.cloud.language.v1beta2.ClassifyTextRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassifyTextRequest} message ClassifyTextRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassifyTextRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified ClassifyTextRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.ClassifyTextRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassifyTextRequest} message ClassifyTextRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassifyTextRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a ClassifyTextRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.ClassifyTextRequest} ClassifyTextRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassifyTextRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.ClassifyTextRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a ClassifyTextRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.ClassifyTextRequest} ClassifyTextRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassifyTextRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a ClassifyTextRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        ClassifyTextRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a ClassifyTextRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.ClassifyTextRequest} ClassifyTextRequest\n                         */\n                        ClassifyTextRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.ClassifyTextRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.ClassifyTextRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.ClassifyTextRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a ClassifyTextRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ClassifyTextRequest} message ClassifyTextRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        ClassifyTextRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults)\n                                object.document = null;\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this ClassifyTextRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        ClassifyTextRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return ClassifyTextRequest;\n                    })();\n    \n                    v1beta2.ClassifyTextResponse = (function() {\n    \n                        /**\n                         * Properties of a ClassifyTextResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IClassifyTextResponse\n                         * @property {Array.<google.cloud.language.v1beta2.IClassificationCategory>|null} [categories] ClassifyTextResponse categories\n                         */\n    \n                        /**\n                         * Constructs a new ClassifyTextResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents a ClassifyTextResponse.\n                         * @implements IClassifyTextResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IClassifyTextResponse=} [properties] Properties to set\n                         */\n                        function ClassifyTextResponse(properties) {\n                            this.categories = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * ClassifyTextResponse categories.\n                         * @member {Array.<google.cloud.language.v1beta2.IClassificationCategory>} categories\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @instance\n                         */\n                        ClassifyTextResponse.prototype.categories = $util.emptyArray;\n    \n                        /**\n                         * Creates a new ClassifyTextResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassifyTextResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.ClassifyTextResponse} ClassifyTextResponse instance\n                         */\n                        ClassifyTextResponse.create = function create(properties) {\n                            return new ClassifyTextResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified ClassifyTextResponse message. Does not implicitly {@link google.cloud.language.v1beta2.ClassifyTextResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassifyTextResponse} message ClassifyTextResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassifyTextResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.categories != null && message.categories.length)\n                                for (var i = 0; i < message.categories.length; ++i)\n                                    $root.google.cloud.language.v1beta2.ClassificationCategory.encode(message.categories[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified ClassifyTextResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.ClassifyTextResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IClassifyTextResponse} message ClassifyTextResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        ClassifyTextResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes a ClassifyTextResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.ClassifyTextResponse} ClassifyTextResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassifyTextResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.ClassifyTextResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.categories && message.categories.length))\n                                        message.categories = [];\n                                    message.categories.push($root.google.cloud.language.v1beta2.ClassificationCategory.decode(reader, reader.uint32()));\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes a ClassifyTextResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.ClassifyTextResponse} ClassifyTextResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        ClassifyTextResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies a ClassifyTextResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        ClassifyTextResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.categories != null && message.hasOwnProperty(\"categories\")) {\n                                if (!Array.isArray(message.categories))\n                                    return \"categories: array expected\";\n                                for (var i = 0; i < message.categories.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.ClassificationCategory.verify(message.categories[i]);\n                                    if (error)\n                                        return \"categories.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates a ClassifyTextResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.ClassifyTextResponse} ClassifyTextResponse\n                         */\n                        ClassifyTextResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.ClassifyTextResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.ClassifyTextResponse();\n                            if (object.categories) {\n                                if (!Array.isArray(object.categories))\n                                    throw TypeError(\".google.cloud.language.v1beta2.ClassifyTextResponse.categories: array expected\");\n                                message.categories = [];\n                                for (var i = 0; i < object.categories.length; ++i) {\n                                    if (typeof object.categories[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.ClassifyTextResponse.categories: object expected\");\n                                    message.categories[i] = $root.google.cloud.language.v1beta2.ClassificationCategory.fromObject(object.categories[i]);\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from a ClassifyTextResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.ClassifyTextResponse} message ClassifyTextResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        ClassifyTextResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.categories = [];\n                            if (message.categories && message.categories.length) {\n                                object.categories = [];\n                                for (var j = 0; j < message.categories.length; ++j)\n                                    object.categories[j] = $root.google.cloud.language.v1beta2.ClassificationCategory.toObject(message.categories[j], options);\n                            }\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this ClassifyTextResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.ClassifyTextResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        ClassifyTextResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return ClassifyTextResponse;\n                    })();\n    \n                    v1beta2.AnnotateTextRequest = (function() {\n    \n                        /**\n                         * Properties of an AnnotateTextRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnnotateTextRequest\n                         * @property {google.cloud.language.v1beta2.IDocument|null} [document] AnnotateTextRequest document\n                         * @property {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures|null} [features] AnnotateTextRequest features\n                         * @property {google.cloud.language.v1beta2.EncodingType|null} [encodingType] AnnotateTextRequest encodingType\n                         */\n    \n                        /**\n                         * Constructs a new AnnotateTextRequest.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnnotateTextRequest.\n                         * @implements IAnnotateTextRequest\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextRequest=} [properties] Properties to set\n                         */\n                        function AnnotateTextRequest(properties) {\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnnotateTextRequest document.\n                         * @member {google.cloud.language.v1beta2.IDocument|null|undefined} document\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @instance\n                         */\n                        AnnotateTextRequest.prototype.document = null;\n    \n                        /**\n                         * AnnotateTextRequest features.\n                         * @member {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures|null|undefined} features\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @instance\n                         */\n                        AnnotateTextRequest.prototype.features = null;\n    \n                        /**\n                         * AnnotateTextRequest encodingType.\n                         * @member {google.cloud.language.v1beta2.EncodingType} encodingType\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @instance\n                         */\n                        AnnotateTextRequest.prototype.encodingType = 0;\n    \n                        /**\n                         * Creates a new AnnotateTextRequest instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextRequest=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnnotateTextRequest} AnnotateTextRequest instance\n                         */\n                        AnnotateTextRequest.create = function create(properties) {\n                            return new AnnotateTextRequest(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnnotateTextRequest message. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextRequest.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextRequest} message AnnotateTextRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnnotateTextRequest.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                $root.google.cloud.language.v1beta2.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.features != null && message.hasOwnProperty(\"features\"))\n                                $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.encode(message.features, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.encodingType);\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnnotateTextRequest message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextRequest.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextRequest} message AnnotateTextRequest message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnnotateTextRequest.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnnotateTextRequest message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnnotateTextRequest} AnnotateTextRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnnotateTextRequest.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnnotateTextRequest();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.document = $root.google.cloud.language.v1beta2.Document.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.features = $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.decode(reader, reader.uint32());\n                                    break;\n                                case 3:\n                                    message.encodingType = reader.int32();\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnnotateTextRequest message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnnotateTextRequest} AnnotateTextRequest\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnnotateTextRequest.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnnotateTextRequest message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnnotateTextRequest.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.document != null && message.hasOwnProperty(\"document\")) {\n                                var error = $root.google.cloud.language.v1beta2.Document.verify(message.document);\n                                if (error)\n                                    return \"document.\" + error;\n                            }\n                            if (message.features != null && message.hasOwnProperty(\"features\")) {\n                                var error = $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.verify(message.features);\n                                if (error)\n                                    return \"features.\" + error;\n                            }\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                switch (message.encodingType) {\n                                default:\n                                    return \"encodingType: enum value expected\";\n                                case 0:\n                                case 1:\n                                case 2:\n                                case 3:\n                                    break;\n                                }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnnotateTextRequest message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnnotateTextRequest} AnnotateTextRequest\n                         */\n                        AnnotateTextRequest.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnnotateTextRequest)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnnotateTextRequest();\n                            if (object.document != null) {\n                                if (typeof object.document !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextRequest.document: object expected\");\n                                message.document = $root.google.cloud.language.v1beta2.Document.fromObject(object.document);\n                            }\n                            if (object.features != null) {\n                                if (typeof object.features !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextRequest.features: object expected\");\n                                message.features = $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.fromObject(object.features);\n                            }\n                            switch (object.encodingType) {\n                            case \"NONE\":\n                            case 0:\n                                message.encodingType = 0;\n                                break;\n                            case \"UTF8\":\n                            case 1:\n                                message.encodingType = 1;\n                                break;\n                            case \"UTF16\":\n                            case 2:\n                                message.encodingType = 2;\n                                break;\n                            case \"UTF32\":\n                            case 3:\n                                message.encodingType = 3;\n                                break;\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnnotateTextRequest message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnnotateTextRequest} message AnnotateTextRequest\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnnotateTextRequest.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.defaults) {\n                                object.document = null;\n                                object.features = null;\n                                object.encodingType = options.enums === String ? \"NONE\" : 0;\n                            }\n                            if (message.document != null && message.hasOwnProperty(\"document\"))\n                                object.document = $root.google.cloud.language.v1beta2.Document.toObject(message.document, options);\n                            if (message.features != null && message.hasOwnProperty(\"features\"))\n                                object.features = $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features.toObject(message.features, options);\n                            if (message.encodingType != null && message.hasOwnProperty(\"encodingType\"))\n                                object.encodingType = options.enums === String ? $root.google.cloud.language.v1beta2.EncodingType[message.encodingType] : message.encodingType;\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnnotateTextRequest to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnnotateTextRequest.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        AnnotateTextRequest.Features = (function() {\n    \n                            /**\n                             * Properties of a Features.\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                             * @interface IFeatures\n                             * @property {boolean|null} [extractSyntax] Features extractSyntax\n                             * @property {boolean|null} [extractEntities] Features extractEntities\n                             * @property {boolean|null} [extractDocumentSentiment] Features extractDocumentSentiment\n                             * @property {boolean|null} [extractEntitySentiment] Features extractEntitySentiment\n                             * @property {boolean|null} [classifyText] Features classifyText\n                             */\n    \n                            /**\n                             * Constructs a new Features.\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest\n                             * @classdesc Represents a Features.\n                             * @implements IFeatures\n                             * @constructor\n                             * @param {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures=} [properties] Properties to set\n                             */\n                            function Features(properties) {\n                                if (properties)\n                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                        if (properties[keys[i]] != null)\n                                            this[keys[i]] = properties[keys[i]];\n                            }\n    \n                            /**\n                             * Features extractSyntax.\n                             * @member {boolean} extractSyntax\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.extractSyntax = false;\n    \n                            /**\n                             * Features extractEntities.\n                             * @member {boolean} extractEntities\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.extractEntities = false;\n    \n                            /**\n                             * Features extractDocumentSentiment.\n                             * @member {boolean} extractDocumentSentiment\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.extractDocumentSentiment = false;\n    \n                            /**\n                             * Features extractEntitySentiment.\n                             * @member {boolean} extractEntitySentiment\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.extractEntitySentiment = false;\n    \n                            /**\n                             * Features classifyText.\n                             * @member {boolean} classifyText\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @instance\n                             */\n                            Features.prototype.classifyText = false;\n    \n                            /**\n                             * Creates a new Features instance using the specified properties.\n                             * @function create\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @static\n                             * @param {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures=} [properties] Properties to set\n                             * @returns {google.cloud.language.v1beta2.AnnotateTextRequest.Features} Features instance\n                             */\n                            Features.create = function create(properties) {\n                                return new Features(properties);\n                            };\n    \n                            /**\n                             * Encodes the specified Features message. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextRequest.Features.verify|verify} messages.\n                             * @function encode\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @static\n                             * @param {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures} message Features message or plain object to encode\n                             * @param {$protobuf.Writer} [writer] Writer to encode to\n                             * @returns {$protobuf.Writer} Writer\n                             */\n                            Features.encode = function encode(message, writer) {\n                                if (!writer)\n                                    writer = $Writer.create();\n                                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\"))\n                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.extractSyntax);\n                                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\"))\n                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.extractEntities);\n                                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\"))\n                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.extractDocumentSentiment);\n                                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\"))\n                                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.extractEntitySentiment);\n                                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\"))\n                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.classifyText);\n                                return writer;\n                            };\n    \n                            /**\n                             * Encodes the specified Features message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextRequest.Features.verify|verify} messages.\n                             * @function encodeDelimited\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @static\n                             * @param {google.cloud.language.v1beta2.AnnotateTextRequest.IFeatures} message Features message or plain object to encode\n                             * @param {$protobuf.Writer} [writer] Writer to encode to\n                             * @returns {$protobuf.Writer} Writer\n                             */\n                            Features.encodeDelimited = function encodeDelimited(message, writer) {\n                                return this.encode(message, writer).ldelim();\n                            };\n    \n                            /**\n                             * Decodes a Features message from the specified reader or buffer.\n                             * @function decode\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @static\n                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                             * @param {number} [length] Message length if known beforehand\n                             * @returns {google.cloud.language.v1beta2.AnnotateTextRequest.Features} Features\n                             * @throws {Error} If the payload is not a reader or valid buffer\n                             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                             */\n                            Features.decode = function decode(reader, length) {\n                                if (!(reader instanceof $Reader))\n                                    reader = $Reader.create(reader);\n                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features();\n                                while (reader.pos < end) {\n                                    var tag = reader.uint32();\n                                    switch (tag >>> 3) {\n                                    case 1:\n                                        message.extractSyntax = reader.bool();\n                                        break;\n                                    case 2:\n                                        message.extractEntities = reader.bool();\n                                        break;\n                                    case 3:\n                                        message.extractDocumentSentiment = reader.bool();\n                                        break;\n                                    case 4:\n                                        message.extractEntitySentiment = reader.bool();\n                                        break;\n                                    case 6:\n                                        message.classifyText = reader.bool();\n                                        break;\n                                    default:\n                                        reader.skipType(tag & 7);\n                                        break;\n                                    }\n                                }\n                                return message;\n                            };\n    \n                            /**\n                             * Decodes a Features message from the specified reader or buffer, length delimited.\n                             * @function decodeDelimited\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @static\n                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                             * @returns {google.cloud.language.v1beta2.AnnotateTextRequest.Features} Features\n                             * @throws {Error} If the payload is not a reader or valid buffer\n                             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                             */\n                            Features.decodeDelimited = function decodeDelimited(reader) {\n                                if (!(reader instanceof $Reader))\n                                    reader = new $Reader(reader);\n                                return this.decode(reader, reader.uint32());\n                            };\n    \n                            /**\n                             * Verifies a Features message.\n                             * @function verify\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @static\n                             * @param {Object.<string,*>} message Plain object to verify\n                             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                             */\n                            Features.verify = function verify(message) {\n                                if (typeof message !== \"object\" || message === null)\n                                    return \"object expected\";\n                                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\"))\n                                    if (typeof message.extractSyntax !== \"boolean\")\n                                        return \"extractSyntax: boolean expected\";\n                                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\"))\n                                    if (typeof message.extractEntities !== \"boolean\")\n                                        return \"extractEntities: boolean expected\";\n                                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\"))\n                                    if (typeof message.extractDocumentSentiment !== \"boolean\")\n                                        return \"extractDocumentSentiment: boolean expected\";\n                                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\"))\n                                    if (typeof message.extractEntitySentiment !== \"boolean\")\n                                        return \"extractEntitySentiment: boolean expected\";\n                                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\"))\n                                    if (typeof message.classifyText !== \"boolean\")\n                                        return \"classifyText: boolean expected\";\n                                return null;\n                            };\n    \n                            /**\n                             * Creates a Features message from a plain object. Also converts values to their respective internal types.\n                             * @function fromObject\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @static\n                             * @param {Object.<string,*>} object Plain object\n                             * @returns {google.cloud.language.v1beta2.AnnotateTextRequest.Features} Features\n                             */\n                            Features.fromObject = function fromObject(object) {\n                                if (object instanceof $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features)\n                                    return object;\n                                var message = new $root.google.cloud.language.v1beta2.AnnotateTextRequest.Features();\n                                if (object.extractSyntax != null)\n                                    message.extractSyntax = Boolean(object.extractSyntax);\n                                if (object.extractEntities != null)\n                                    message.extractEntities = Boolean(object.extractEntities);\n                                if (object.extractDocumentSentiment != null)\n                                    message.extractDocumentSentiment = Boolean(object.extractDocumentSentiment);\n                                if (object.extractEntitySentiment != null)\n                                    message.extractEntitySentiment = Boolean(object.extractEntitySentiment);\n                                if (object.classifyText != null)\n                                    message.classifyText = Boolean(object.classifyText);\n                                return message;\n                            };\n    \n                            /**\n                             * Creates a plain object from a Features message. Also converts values to other types if specified.\n                             * @function toObject\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @static\n                             * @param {google.cloud.language.v1beta2.AnnotateTextRequest.Features} message Features\n                             * @param {$protobuf.IConversionOptions} [options] Conversion options\n                             * @returns {Object.<string,*>} Plain object\n                             */\n                            Features.toObject = function toObject(message, options) {\n                                if (!options)\n                                    options = {};\n                                var object = {};\n                                if (options.defaults) {\n                                    object.extractSyntax = false;\n                                    object.extractEntities = false;\n                                    object.extractDocumentSentiment = false;\n                                    object.extractEntitySentiment = false;\n                                    object.classifyText = false;\n                                }\n                                if (message.extractSyntax != null && message.hasOwnProperty(\"extractSyntax\"))\n                                    object.extractSyntax = message.extractSyntax;\n                                if (message.extractEntities != null && message.hasOwnProperty(\"extractEntities\"))\n                                    object.extractEntities = message.extractEntities;\n                                if (message.extractDocumentSentiment != null && message.hasOwnProperty(\"extractDocumentSentiment\"))\n                                    object.extractDocumentSentiment = message.extractDocumentSentiment;\n                                if (message.extractEntitySentiment != null && message.hasOwnProperty(\"extractEntitySentiment\"))\n                                    object.extractEntitySentiment = message.extractEntitySentiment;\n                                if (message.classifyText != null && message.hasOwnProperty(\"classifyText\"))\n                                    object.classifyText = message.classifyText;\n                                return object;\n                            };\n    \n                            /**\n                             * Converts this Features to JSON.\n                             * @function toJSON\n                             * @memberof google.cloud.language.v1beta2.AnnotateTextRequest.Features\n                             * @instance\n                             * @returns {Object.<string,*>} JSON object\n                             */\n                            Features.prototype.toJSON = function toJSON() {\n                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                            };\n    \n                            return Features;\n                        })();\n    \n                        return AnnotateTextRequest;\n                    })();\n    \n                    v1beta2.AnnotateTextResponse = (function() {\n    \n                        /**\n                         * Properties of an AnnotateTextResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @interface IAnnotateTextResponse\n                         * @property {Array.<google.cloud.language.v1beta2.ISentence>|null} [sentences] AnnotateTextResponse sentences\n                         * @property {Array.<google.cloud.language.v1beta2.IToken>|null} [tokens] AnnotateTextResponse tokens\n                         * @property {Array.<google.cloud.language.v1beta2.IEntity>|null} [entities] AnnotateTextResponse entities\n                         * @property {google.cloud.language.v1beta2.ISentiment|null} [documentSentiment] AnnotateTextResponse documentSentiment\n                         * @property {string|null} [language] AnnotateTextResponse language\n                         * @property {Array.<google.cloud.language.v1beta2.IClassificationCategory>|null} [categories] AnnotateTextResponse categories\n                         */\n    \n                        /**\n                         * Constructs a new AnnotateTextResponse.\n                         * @memberof google.cloud.language.v1beta2\n                         * @classdesc Represents an AnnotateTextResponse.\n                         * @implements IAnnotateTextResponse\n                         * @constructor\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextResponse=} [properties] Properties to set\n                         */\n                        function AnnotateTextResponse(properties) {\n                            this.sentences = [];\n                            this.tokens = [];\n                            this.entities = [];\n                            this.categories = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n    \n                        /**\n                         * AnnotateTextResponse sentences.\n                         * @member {Array.<google.cloud.language.v1beta2.ISentence>} sentences\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.sentences = $util.emptyArray;\n    \n                        /**\n                         * AnnotateTextResponse tokens.\n                         * @member {Array.<google.cloud.language.v1beta2.IToken>} tokens\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.tokens = $util.emptyArray;\n    \n                        /**\n                         * AnnotateTextResponse entities.\n                         * @member {Array.<google.cloud.language.v1beta2.IEntity>} entities\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.entities = $util.emptyArray;\n    \n                        /**\n                         * AnnotateTextResponse documentSentiment.\n                         * @member {google.cloud.language.v1beta2.ISentiment|null|undefined} documentSentiment\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.documentSentiment = null;\n    \n                        /**\n                         * AnnotateTextResponse language.\n                         * @member {string} language\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.language = \"\";\n    \n                        /**\n                         * AnnotateTextResponse categories.\n                         * @member {Array.<google.cloud.language.v1beta2.IClassificationCategory>} categories\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @instance\n                         */\n                        AnnotateTextResponse.prototype.categories = $util.emptyArray;\n    \n                        /**\n                         * Creates a new AnnotateTextResponse instance using the specified properties.\n                         * @function create\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextResponse=} [properties] Properties to set\n                         * @returns {google.cloud.language.v1beta2.AnnotateTextResponse} AnnotateTextResponse instance\n                         */\n                        AnnotateTextResponse.create = function create(properties) {\n                            return new AnnotateTextResponse(properties);\n                        };\n    \n                        /**\n                         * Encodes the specified AnnotateTextResponse message. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextResponse.verify|verify} messages.\n                         * @function encode\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextResponse} message AnnotateTextResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnnotateTextResponse.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.sentences != null && message.sentences.length)\n                                for (var i = 0; i < message.sentences.length; ++i)\n                                    $root.google.cloud.language.v1beta2.Sentence.encode(message.sentences[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.tokens != null && message.tokens.length)\n                                for (var i = 0; i < message.tokens.length; ++i)\n                                    $root.google.cloud.language.v1beta2.Token.encode(message.tokens[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.entities != null && message.entities.length)\n                                for (var i = 0; i < message.entities.length; ++i)\n                                    $root.google.cloud.language.v1beta2.Entity.encode(message.entities[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\"))\n                                $root.google.cloud.language.v1beta2.Sentiment.encode(message.documentSentiment, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.language);\n                            if (message.categories != null && message.categories.length)\n                                for (var i = 0; i < message.categories.length; ++i)\n                                    $root.google.cloud.language.v1beta2.ClassificationCategory.encode(message.categories[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                            return writer;\n                        };\n    \n                        /**\n                         * Encodes the specified AnnotateTextResponse message, length delimited. Does not implicitly {@link google.cloud.language.v1beta2.AnnotateTextResponse.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.IAnnotateTextResponse} message AnnotateTextResponse message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        AnnotateTextResponse.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n    \n                        /**\n                         * Decodes an AnnotateTextResponse message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {google.cloud.language.v1beta2.AnnotateTextResponse} AnnotateTextResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnnotateTextResponse.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.language.v1beta2.AnnotateTextResponse();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    if (!(message.sentences && message.sentences.length))\n                                        message.sentences = [];\n                                    message.sentences.push($root.google.cloud.language.v1beta2.Sentence.decode(reader, reader.uint32()));\n                                    break;\n                                case 2:\n                                    if (!(message.tokens && message.tokens.length))\n                                        message.tokens = [];\n                                    message.tokens.push($root.google.cloud.language.v1beta2.Token.decode(reader, reader.uint32()));\n                                    break;\n                                case 3:\n                                    if (!(message.entities && message.entities.length))\n                                        message.entities = [];\n                                    message.entities.push($root.google.cloud.language.v1beta2.Entity.decode(reader, reader.uint32()));\n                                    break;\n                                case 4:\n                                    message.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.decode(reader, reader.uint32());\n                                    break;\n                                case 5:\n                                    message.language = reader.string();\n                                    break;\n                                case 6:\n                                    if (!(message.categories && message.categories.length))\n                                        message.categories = [];\n                                    message.categories.push($root.google.cloud.language.v1beta2.ClassificationCategory.decode(reader, reader.uint32()));\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Decodes an AnnotateTextResponse message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {google.cloud.language.v1beta2.AnnotateTextResponse} AnnotateTextResponse\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        AnnotateTextResponse.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n    \n                        /**\n                         * Verifies an AnnotateTextResponse message.\n                         * @function verify\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        AnnotateTextResponse.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.sentences != null && message.hasOwnProperty(\"sentences\")) {\n                                if (!Array.isArray(message.sentences))\n                                    return \"sentences: array expected\";\n                                for (var i = 0; i < message.sentences.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.Sentence.verify(message.sentences[i]);\n                                    if (error)\n                                        return \"sentences.\" + error;\n                                }\n                            }\n                            if (message.tokens != null && message.hasOwnProperty(\"tokens\")) {\n                                if (!Array.isArray(message.tokens))\n                                    return \"tokens: array expected\";\n                                for (var i = 0; i < message.tokens.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.Token.verify(message.tokens[i]);\n                                    if (error)\n                                        return \"tokens.\" + error;\n                                }\n                            }\n                            if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n                                if (!Array.isArray(message.entities))\n                                    return \"entities: array expected\";\n                                for (var i = 0; i < message.entities.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.Entity.verify(message.entities[i]);\n                                    if (error)\n                                        return \"entities.\" + error;\n                                }\n                            }\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\")) {\n                                var error = $root.google.cloud.language.v1beta2.Sentiment.verify(message.documentSentiment);\n                                if (error)\n                                    return \"documentSentiment.\" + error;\n                            }\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                if (!$util.isString(message.language))\n                                    return \"language: string expected\";\n                            if (message.categories != null && message.hasOwnProperty(\"categories\")) {\n                                if (!Array.isArray(message.categories))\n                                    return \"categories: array expected\";\n                                for (var i = 0; i < message.categories.length; ++i) {\n                                    var error = $root.google.cloud.language.v1beta2.ClassificationCategory.verify(message.categories[i]);\n                                    if (error)\n                                        return \"categories.\" + error;\n                                }\n                            }\n                            return null;\n                        };\n    \n                        /**\n                         * Creates an AnnotateTextResponse message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {google.cloud.language.v1beta2.AnnotateTextResponse} AnnotateTextResponse\n                         */\n                        AnnotateTextResponse.fromObject = function fromObject(object) {\n                            if (object instanceof $root.google.cloud.language.v1beta2.AnnotateTextResponse)\n                                return object;\n                            var message = new $root.google.cloud.language.v1beta2.AnnotateTextResponse();\n                            if (object.sentences) {\n                                if (!Array.isArray(object.sentences))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.sentences: array expected\");\n                                message.sentences = [];\n                                for (var i = 0; i < object.sentences.length; ++i) {\n                                    if (typeof object.sentences[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.sentences: object expected\");\n                                    message.sentences[i] = $root.google.cloud.language.v1beta2.Sentence.fromObject(object.sentences[i]);\n                                }\n                            }\n                            if (object.tokens) {\n                                if (!Array.isArray(object.tokens))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.tokens: array expected\");\n                                message.tokens = [];\n                                for (var i = 0; i < object.tokens.length; ++i) {\n                                    if (typeof object.tokens[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.tokens: object expected\");\n                                    message.tokens[i] = $root.google.cloud.language.v1beta2.Token.fromObject(object.tokens[i]);\n                                }\n                            }\n                            if (object.entities) {\n                                if (!Array.isArray(object.entities))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.entities: array expected\");\n                                message.entities = [];\n                                for (var i = 0; i < object.entities.length; ++i) {\n                                    if (typeof object.entities[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.entities: object expected\");\n                                    message.entities[i] = $root.google.cloud.language.v1beta2.Entity.fromObject(object.entities[i]);\n                                }\n                            }\n                            if (object.documentSentiment != null) {\n                                if (typeof object.documentSentiment !== \"object\")\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.documentSentiment: object expected\");\n                                message.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.fromObject(object.documentSentiment);\n                            }\n                            if (object.language != null)\n                                message.language = String(object.language);\n                            if (object.categories) {\n                                if (!Array.isArray(object.categories))\n                                    throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.categories: array expected\");\n                                message.categories = [];\n                                for (var i = 0; i < object.categories.length; ++i) {\n                                    if (typeof object.categories[i] !== \"object\")\n                                        throw TypeError(\".google.cloud.language.v1beta2.AnnotateTextResponse.categories: object expected\");\n                                    message.categories[i] = $root.google.cloud.language.v1beta2.ClassificationCategory.fromObject(object.categories[i]);\n                                }\n                            }\n                            return message;\n                        };\n    \n                        /**\n                         * Creates a plain object from an AnnotateTextResponse message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @static\n                         * @param {google.cloud.language.v1beta2.AnnotateTextResponse} message AnnotateTextResponse\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        AnnotateTextResponse.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults) {\n                                object.sentences = [];\n                                object.tokens = [];\n                                object.entities = [];\n                                object.categories = [];\n                            }\n                            if (options.defaults) {\n                                object.documentSentiment = null;\n                                object.language = \"\";\n                            }\n                            if (message.sentences && message.sentences.length) {\n                                object.sentences = [];\n                                for (var j = 0; j < message.sentences.length; ++j)\n                                    object.sentences[j] = $root.google.cloud.language.v1beta2.Sentence.toObject(message.sentences[j], options);\n                            }\n                            if (message.tokens && message.tokens.length) {\n                                object.tokens = [];\n                                for (var j = 0; j < message.tokens.length; ++j)\n                                    object.tokens[j] = $root.google.cloud.language.v1beta2.Token.toObject(message.tokens[j], options);\n                            }\n                            if (message.entities && message.entities.length) {\n                                object.entities = [];\n                                for (var j = 0; j < message.entities.length; ++j)\n                                    object.entities[j] = $root.google.cloud.language.v1beta2.Entity.toObject(message.entities[j], options);\n                            }\n                            if (message.documentSentiment != null && message.hasOwnProperty(\"documentSentiment\"))\n                                object.documentSentiment = $root.google.cloud.language.v1beta2.Sentiment.toObject(message.documentSentiment, options);\n                            if (message.language != null && message.hasOwnProperty(\"language\"))\n                                object.language = message.language;\n                            if (message.categories && message.categories.length) {\n                                object.categories = [];\n                                for (var j = 0; j < message.categories.length; ++j)\n                                    object.categories[j] = $root.google.cloud.language.v1beta2.ClassificationCategory.toObject(message.categories[j], options);\n                            }\n                            return object;\n                        };\n    \n                        /**\n                         * Converts this AnnotateTextResponse to JSON.\n                         * @function toJSON\n                         * @memberof google.cloud.language.v1beta2.AnnotateTextResponse\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        AnnotateTextResponse.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n    \n                        return AnnotateTextResponse;\n                    })();\n    \n                    return v1beta2;\n                })();\n    \n                return language;\n            })();\n    \n            return cloud;\n        })();\n    \n        google.api = (function() {\n    \n            /**\n             * Namespace api.\n             * @memberof google\n             * @namespace\n             */\n            var api = {};\n    \n            api.Http = (function() {\n    \n                /**\n                 * Properties of a Http.\n                 * @memberof google.api\n                 * @interface IHttp\n                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules\n                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion\n                 */\n    \n                /**\n                 * Constructs a new Http.\n                 * @memberof google.api\n                 * @classdesc Represents a Http.\n                 * @implements IHttp\n                 * @constructor\n                 * @param {google.api.IHttp=} [properties] Properties to set\n                 */\n                function Http(properties) {\n                    this.rules = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * Http rules.\n                 * @member {Array.<google.api.IHttpRule>} rules\n                 * @memberof google.api.Http\n                 * @instance\n                 */\n                Http.prototype.rules = $util.emptyArray;\n    \n                /**\n                 * Http fullyDecodeReservedExpansion.\n                 * @member {boolean} fullyDecodeReservedExpansion\n                 * @memberof google.api.Http\n                 * @instance\n                 */\n                Http.prototype.fullyDecodeReservedExpansion = false;\n    \n                /**\n                 * Creates a new Http instance using the specified properties.\n                 * @function create\n                 * @memberof google.api.Http\n                 * @static\n                 * @param {google.api.IHttp=} [properties] Properties to set\n                 * @returns {google.api.Http} Http instance\n                 */\n                Http.create = function create(properties) {\n                    return new Http(properties);\n                };\n    \n                /**\n                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.api.Http\n                 * @static\n                 * @param {google.api.IHttp} message Http message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Http.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.rules != null && message.rules.length)\n                        for (var i = 0; i < message.rules.length; ++i)\n                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty(\"fullyDecodeReservedExpansion\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.api.Http\n                 * @static\n                 * @param {google.api.IHttp} message Http message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Http.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a Http message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.api.Http\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.api.Http} Http\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Http.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.rules && message.rules.length))\n                                message.rules = [];\n                            message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));\n                            break;\n                        case 2:\n                            message.fullyDecodeReservedExpansion = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a Http message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.api.Http\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.api.Http} Http\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Http.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a Http message.\n                 * @function verify\n                 * @memberof google.api.Http\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Http.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.rules != null && message.hasOwnProperty(\"rules\")) {\n                        if (!Array.isArray(message.rules))\n                            return \"rules: array expected\";\n                        for (var i = 0; i < message.rules.length; ++i) {\n                            var error = $root.google.api.HttpRule.verify(message.rules[i]);\n                            if (error)\n                                return \"rules.\" + error;\n                        }\n                    }\n                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty(\"fullyDecodeReservedExpansion\"))\n                        if (typeof message.fullyDecodeReservedExpansion !== \"boolean\")\n                            return \"fullyDecodeReservedExpansion: boolean expected\";\n                    return null;\n                };\n    \n                /**\n                 * Creates a Http message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.api.Http\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.api.Http} Http\n                 */\n                Http.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.api.Http)\n                        return object;\n                    var message = new $root.google.api.Http();\n                    if (object.rules) {\n                        if (!Array.isArray(object.rules))\n                            throw TypeError(\".google.api.Http.rules: array expected\");\n                        message.rules = [];\n                        for (var i = 0; i < object.rules.length; ++i) {\n                            if (typeof object.rules[i] !== \"object\")\n                                throw TypeError(\".google.api.Http.rules: object expected\");\n                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);\n                        }\n                    }\n                    if (object.fullyDecodeReservedExpansion != null)\n                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a Http message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.api.Http\n                 * @static\n                 * @param {google.api.Http} message Http\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Http.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.rules = [];\n                    if (options.defaults)\n                        object.fullyDecodeReservedExpansion = false;\n                    if (message.rules && message.rules.length) {\n                        object.rules = [];\n                        for (var j = 0; j < message.rules.length; ++j)\n                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);\n                    }\n                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty(\"fullyDecodeReservedExpansion\"))\n                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;\n                    return object;\n                };\n    \n                /**\n                 * Converts this Http to JSON.\n                 * @function toJSON\n                 * @memberof google.api.Http\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Http.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return Http;\n            })();\n    \n            api.HttpRule = (function() {\n    \n                /**\n                 * Properties of a HttpRule.\n                 * @memberof google.api\n                 * @interface IHttpRule\n                 * @property {string|null} [selector] HttpRule selector\n                 * @property {string|null} [get] HttpRule get\n                 * @property {string|null} [put] HttpRule put\n                 * @property {string|null} [post] HttpRule post\n                 * @property {string|null} [\"delete\"] HttpRule delete\n                 * @property {string|null} [patch] HttpRule patch\n                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom\n                 * @property {string|null} [body] HttpRule body\n                 * @property {string|null} [responseBody] HttpRule responseBody\n                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings\n                 */\n    \n                /**\n                 * Constructs a new HttpRule.\n                 * @memberof google.api\n                 * @classdesc Represents a HttpRule.\n                 * @implements IHttpRule\n                 * @constructor\n                 * @param {google.api.IHttpRule=} [properties] Properties to set\n                 */\n                function HttpRule(properties) {\n                    this.additionalBindings = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * HttpRule selector.\n                 * @member {string} selector\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.selector = \"\";\n    \n                /**\n                 * HttpRule get.\n                 * @member {string} get\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.get = \"\";\n    \n                /**\n                 * HttpRule put.\n                 * @member {string} put\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.put = \"\";\n    \n                /**\n                 * HttpRule post.\n                 * @member {string} post\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.post = \"\";\n    \n                /**\n                 * HttpRule delete.\n                 * @member {string} delete\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype[\"delete\"] = \"\";\n    \n                /**\n                 * HttpRule patch.\n                 * @member {string} patch\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.patch = \"\";\n    \n                /**\n                 * HttpRule custom.\n                 * @member {google.api.ICustomHttpPattern|null|undefined} custom\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.custom = null;\n    \n                /**\n                 * HttpRule body.\n                 * @member {string} body\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.body = \"\";\n    \n                /**\n                 * HttpRule responseBody.\n                 * @member {string} responseBody\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.responseBody = \"\";\n    \n                /**\n                 * HttpRule additionalBindings.\n                 * @member {Array.<google.api.IHttpRule>} additionalBindings\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                HttpRule.prototype.additionalBindings = $util.emptyArray;\n    \n                // OneOf field names bound to virtual getters and setters\n                var $oneOfFields;\n    \n                /**\n                 * HttpRule pattern.\n                 * @member {\"get\"|\"put\"|\"post\"|\"delete\"|\"patch\"|\"custom\"|undefined} pattern\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 */\n                Object.defineProperty(HttpRule.prototype, \"pattern\", {\n                    get: $util.oneOfGetter($oneOfFields = [\"get\", \"put\", \"post\", \"delete\", \"patch\", \"custom\"]),\n                    set: $util.oneOfSetter($oneOfFields)\n                });\n    \n                /**\n                 * Creates a new HttpRule instance using the specified properties.\n                 * @function create\n                 * @memberof google.api.HttpRule\n                 * @static\n                 * @param {google.api.IHttpRule=} [properties] Properties to set\n                 * @returns {google.api.HttpRule} HttpRule instance\n                 */\n                HttpRule.create = function create(properties) {\n                    return new HttpRule(properties);\n                };\n    \n                /**\n                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.api.HttpRule\n                 * @static\n                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                HttpRule.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.selector != null && message.hasOwnProperty(\"selector\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);\n                    if (message.get != null && message.hasOwnProperty(\"get\"))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);\n                    if (message.put != null && message.hasOwnProperty(\"put\"))\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);\n                    if (message.post != null && message.hasOwnProperty(\"post\"))\n                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);\n                    if (message[\"delete\"] != null && message.hasOwnProperty(\"delete\"))\n                        writer.uint32(/* id 5, wireType 2 =*/42).string(message[\"delete\"]);\n                    if (message.patch != null && message.hasOwnProperty(\"patch\"))\n                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);\n                    if (message.body != null && message.hasOwnProperty(\"body\"))\n                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);\n                    if (message.custom != null && message.hasOwnProperty(\"custom\"))\n                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.additionalBindings != null && message.additionalBindings.length)\n                        for (var i = 0; i < message.additionalBindings.length; ++i)\n                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                    if (message.responseBody != null && message.hasOwnProperty(\"responseBody\"))\n                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.api.HttpRule\n                 * @static\n                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a HttpRule message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.api.HttpRule\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.api.HttpRule} HttpRule\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                HttpRule.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.selector = reader.string();\n                            break;\n                        case 2:\n                            message.get = reader.string();\n                            break;\n                        case 3:\n                            message.put = reader.string();\n                            break;\n                        case 4:\n                            message.post = reader.string();\n                            break;\n                        case 5:\n                            message[\"delete\"] = reader.string();\n                            break;\n                        case 6:\n                            message.patch = reader.string();\n                            break;\n                        case 8:\n                            message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());\n                            break;\n                        case 7:\n                            message.body = reader.string();\n                            break;\n                        case 12:\n                            message.responseBody = reader.string();\n                            break;\n                        case 11:\n                            if (!(message.additionalBindings && message.additionalBindings.length))\n                                message.additionalBindings = [];\n                            message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.api.HttpRule\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.api.HttpRule} HttpRule\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                HttpRule.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a HttpRule message.\n                 * @function verify\n                 * @memberof google.api.HttpRule\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                HttpRule.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    var properties = {};\n                    if (message.selector != null && message.hasOwnProperty(\"selector\"))\n                        if (!$util.isString(message.selector))\n                            return \"selector: string expected\";\n                    if (message.get != null && message.hasOwnProperty(\"get\")) {\n                        properties.pattern = 1;\n                        if (!$util.isString(message.get))\n                            return \"get: string expected\";\n                    }\n                    if (message.put != null && message.hasOwnProperty(\"put\")) {\n                        if (properties.pattern === 1)\n                            return \"pattern: multiple values\";\n                        properties.pattern = 1;\n                        if (!$util.isString(message.put))\n                            return \"put: string expected\";\n                    }\n                    if (message.post != null && message.hasOwnProperty(\"post\")) {\n                        if (properties.pattern === 1)\n                            return \"pattern: multiple values\";\n                        properties.pattern = 1;\n                        if (!$util.isString(message.post))\n                            return \"post: string expected\";\n                    }\n                    if (message[\"delete\"] != null && message.hasOwnProperty(\"delete\")) {\n                        if (properties.pattern === 1)\n                            return \"pattern: multiple values\";\n                        properties.pattern = 1;\n                        if (!$util.isString(message[\"delete\"]))\n                            return \"delete: string expected\";\n                    }\n                    if (message.patch != null && message.hasOwnProperty(\"patch\")) {\n                        if (properties.pattern === 1)\n                            return \"pattern: multiple values\";\n                        properties.pattern = 1;\n                        if (!$util.isString(message.patch))\n                            return \"patch: string expected\";\n                    }\n                    if (message.custom != null && message.hasOwnProperty(\"custom\")) {\n                        if (properties.pattern === 1)\n                            return \"pattern: multiple values\";\n                        properties.pattern = 1;\n                        {\n                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);\n                            if (error)\n                                return \"custom.\" + error;\n                        }\n                    }\n                    if (message.body != null && message.hasOwnProperty(\"body\"))\n                        if (!$util.isString(message.body))\n                            return \"body: string expected\";\n                    if (message.responseBody != null && message.hasOwnProperty(\"responseBody\"))\n                        if (!$util.isString(message.responseBody))\n                            return \"responseBody: string expected\";\n                    if (message.additionalBindings != null && message.hasOwnProperty(\"additionalBindings\")) {\n                        if (!Array.isArray(message.additionalBindings))\n                            return \"additionalBindings: array expected\";\n                        for (var i = 0; i < message.additionalBindings.length; ++i) {\n                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);\n                            if (error)\n                                return \"additionalBindings.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.api.HttpRule\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.api.HttpRule} HttpRule\n                 */\n                HttpRule.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.api.HttpRule)\n                        return object;\n                    var message = new $root.google.api.HttpRule();\n                    if (object.selector != null)\n                        message.selector = String(object.selector);\n                    if (object.get != null)\n                        message.get = String(object.get);\n                    if (object.put != null)\n                        message.put = String(object.put);\n                    if (object.post != null)\n                        message.post = String(object.post);\n                    if (object[\"delete\"] != null)\n                        message[\"delete\"] = String(object[\"delete\"]);\n                    if (object.patch != null)\n                        message.patch = String(object.patch);\n                    if (object.custom != null) {\n                        if (typeof object.custom !== \"object\")\n                            throw TypeError(\".google.api.HttpRule.custom: object expected\");\n                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);\n                    }\n                    if (object.body != null)\n                        message.body = String(object.body);\n                    if (object.responseBody != null)\n                        message.responseBody = String(object.responseBody);\n                    if (object.additionalBindings) {\n                        if (!Array.isArray(object.additionalBindings))\n                            throw TypeError(\".google.api.HttpRule.additionalBindings: array expected\");\n                        message.additionalBindings = [];\n                        for (var i = 0; i < object.additionalBindings.length; ++i) {\n                            if (typeof object.additionalBindings[i] !== \"object\")\n                                throw TypeError(\".google.api.HttpRule.additionalBindings: object expected\");\n                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.api.HttpRule\n                 * @static\n                 * @param {google.api.HttpRule} message HttpRule\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                HttpRule.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.additionalBindings = [];\n                    if (options.defaults) {\n                        object.selector = \"\";\n                        object.body = \"\";\n                        object.responseBody = \"\";\n                    }\n                    if (message.selector != null && message.hasOwnProperty(\"selector\"))\n                        object.selector = message.selector;\n                    if (message.get != null && message.hasOwnProperty(\"get\")) {\n                        object.get = message.get;\n                        if (options.oneofs)\n                            object.pattern = \"get\";\n                    }\n                    if (message.put != null && message.hasOwnProperty(\"put\")) {\n                        object.put = message.put;\n                        if (options.oneofs)\n                            object.pattern = \"put\";\n                    }\n                    if (message.post != null && message.hasOwnProperty(\"post\")) {\n                        object.post = message.post;\n                        if (options.oneofs)\n                            object.pattern = \"post\";\n                    }\n                    if (message[\"delete\"] != null && message.hasOwnProperty(\"delete\")) {\n                        object[\"delete\"] = message[\"delete\"];\n                        if (options.oneofs)\n                            object.pattern = \"delete\";\n                    }\n                    if (message.patch != null && message.hasOwnProperty(\"patch\")) {\n                        object.patch = message.patch;\n                        if (options.oneofs)\n                            object.pattern = \"patch\";\n                    }\n                    if (message.body != null && message.hasOwnProperty(\"body\"))\n                        object.body = message.body;\n                    if (message.custom != null && message.hasOwnProperty(\"custom\")) {\n                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);\n                        if (options.oneofs)\n                            object.pattern = \"custom\";\n                    }\n                    if (message.additionalBindings && message.additionalBindings.length) {\n                        object.additionalBindings = [];\n                        for (var j = 0; j < message.additionalBindings.length; ++j)\n                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);\n                    }\n                    if (message.responseBody != null && message.hasOwnProperty(\"responseBody\"))\n                        object.responseBody = message.responseBody;\n                    return object;\n                };\n    \n                /**\n                 * Converts this HttpRule to JSON.\n                 * @function toJSON\n                 * @memberof google.api.HttpRule\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                HttpRule.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return HttpRule;\n            })();\n    \n            api.CustomHttpPattern = (function() {\n    \n                /**\n                 * Properties of a CustomHttpPattern.\n                 * @memberof google.api\n                 * @interface ICustomHttpPattern\n                 * @property {string|null} [kind] CustomHttpPattern kind\n                 * @property {string|null} [path] CustomHttpPattern path\n                 */\n    \n                /**\n                 * Constructs a new CustomHttpPattern.\n                 * @memberof google.api\n                 * @classdesc Represents a CustomHttpPattern.\n                 * @implements ICustomHttpPattern\n                 * @constructor\n                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set\n                 */\n                function CustomHttpPattern(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * CustomHttpPattern kind.\n                 * @member {string} kind\n                 * @memberof google.api.CustomHttpPattern\n                 * @instance\n                 */\n                CustomHttpPattern.prototype.kind = \"\";\n    \n                /**\n                 * CustomHttpPattern path.\n                 * @member {string} path\n                 * @memberof google.api.CustomHttpPattern\n                 * @instance\n                 */\n                CustomHttpPattern.prototype.path = \"\";\n    \n                /**\n                 * Creates a new CustomHttpPattern instance using the specified properties.\n                 * @function create\n                 * @memberof google.api.CustomHttpPattern\n                 * @static\n                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set\n                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance\n                 */\n                CustomHttpPattern.create = function create(properties) {\n                    return new CustomHttpPattern(properties);\n                };\n    \n                /**\n                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.api.CustomHttpPattern\n                 * @static\n                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                CustomHttpPattern.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.kind != null && message.hasOwnProperty(\"kind\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);\n                    if (message.path != null && message.hasOwnProperty(\"path\"))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.api.CustomHttpPattern\n                 * @static\n                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a CustomHttpPattern message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.api.CustomHttpPattern\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                CustomHttpPattern.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.kind = reader.string();\n                            break;\n                        case 2:\n                            message.path = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.api.CustomHttpPattern\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a CustomHttpPattern message.\n                 * @function verify\n                 * @memberof google.api.CustomHttpPattern\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                CustomHttpPattern.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.kind != null && message.hasOwnProperty(\"kind\"))\n                        if (!$util.isString(message.kind))\n                            return \"kind: string expected\";\n                    if (message.path != null && message.hasOwnProperty(\"path\"))\n                        if (!$util.isString(message.path))\n                            return \"path: string expected\";\n                    return null;\n                };\n    \n                /**\n                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.api.CustomHttpPattern\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n                 */\n                CustomHttpPattern.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.api.CustomHttpPattern)\n                        return object;\n                    var message = new $root.google.api.CustomHttpPattern();\n                    if (object.kind != null)\n                        message.kind = String(object.kind);\n                    if (object.path != null)\n                        message.path = String(object.path);\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.api.CustomHttpPattern\n                 * @static\n                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                CustomHttpPattern.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.kind = \"\";\n                        object.path = \"\";\n                    }\n                    if (message.kind != null && message.hasOwnProperty(\"kind\"))\n                        object.kind = message.kind;\n                    if (message.path != null && message.hasOwnProperty(\"path\"))\n                        object.path = message.path;\n                    return object;\n                };\n    \n                /**\n                 * Converts this CustomHttpPattern to JSON.\n                 * @function toJSON\n                 * @memberof google.api.CustomHttpPattern\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                CustomHttpPattern.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return CustomHttpPattern;\n            })();\n    \n            /**\n             * FieldBehavior enum.\n             * @name google.api.FieldBehavior\n             * @enum {string}\n             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value\n             * @property {number} OPTIONAL=1 OPTIONAL value\n             * @property {number} REQUIRED=2 REQUIRED value\n             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value\n             * @property {number} INPUT_ONLY=4 INPUT_ONLY value\n             * @property {number} IMMUTABLE=5 IMMUTABLE value\n             */\n            api.FieldBehavior = (function() {\n                var valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[0] = \"FIELD_BEHAVIOR_UNSPECIFIED\"] = 0;\n                values[valuesById[1] = \"OPTIONAL\"] = 1;\n                values[valuesById[2] = \"REQUIRED\"] = 2;\n                values[valuesById[3] = \"OUTPUT_ONLY\"] = 3;\n                values[valuesById[4] = \"INPUT_ONLY\"] = 4;\n                values[valuesById[5] = \"IMMUTABLE\"] = 5;\n                return values;\n            })();\n    \n            return api;\n        })();\n    \n        google.protobuf = (function() {\n    \n            /**\n             * Namespace protobuf.\n             * @memberof google\n             * @namespace\n             */\n            var protobuf = {};\n    \n            protobuf.FileDescriptorSet = (function() {\n    \n                /**\n                 * Properties of a FileDescriptorSet.\n                 * @memberof google.protobuf\n                 * @interface IFileDescriptorSet\n                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file\n                 */\n    \n                /**\n                 * Constructs a new FileDescriptorSet.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a FileDescriptorSet.\n                 * @implements IFileDescriptorSet\n                 * @constructor\n                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set\n                 */\n                function FileDescriptorSet(properties) {\n                    this.file = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * FileDescriptorSet file.\n                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @instance\n                 */\n                FileDescriptorSet.prototype.file = $util.emptyArray;\n    \n                /**\n                 * Creates a new FileDescriptorSet instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @static\n                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set\n                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance\n                 */\n                FileDescriptorSet.create = function create(properties) {\n                    return new FileDescriptorSet(properties);\n                };\n    \n                /**\n                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @static\n                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FileDescriptorSet.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.file != null && message.file.length)\n                        for (var i = 0; i < message.file.length; ++i)\n                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @static\n                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a FileDescriptorSet message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FileDescriptorSet.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.file && message.file.length))\n                                message.file = [];\n                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a FileDescriptorSet message.\n                 * @function verify\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                FileDescriptorSet.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.file != null && message.hasOwnProperty(\"file\")) {\n                        if (!Array.isArray(message.file))\n                            return \"file: array expected\";\n                        for (var i = 0; i < message.file.length; ++i) {\n                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);\n                            if (error)\n                                return \"file.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n                 */\n                FileDescriptorSet.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.FileDescriptorSet)\n                        return object;\n                    var message = new $root.google.protobuf.FileDescriptorSet();\n                    if (object.file) {\n                        if (!Array.isArray(object.file))\n                            throw TypeError(\".google.protobuf.FileDescriptorSet.file: array expected\");\n                        message.file = [];\n                        for (var i = 0; i < object.file.length; ++i) {\n                            if (typeof object.file[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.FileDescriptorSet.file: object expected\");\n                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @static\n                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                FileDescriptorSet.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.file = [];\n                    if (message.file && message.file.length) {\n                        object.file = [];\n                        for (var j = 0; j < message.file.length; ++j)\n                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this FileDescriptorSet to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.FileDescriptorSet\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                FileDescriptorSet.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return FileDescriptorSet;\n            })();\n    \n            protobuf.FileDescriptorProto = (function() {\n    \n                /**\n                 * Properties of a FileDescriptorProto.\n                 * @memberof google.protobuf\n                 * @interface IFileDescriptorProto\n                 * @property {string|null} [name] FileDescriptorProto name\n                 * @property {string|null} [\"package\"] FileDescriptorProto package\n                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency\n                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency\n                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency\n                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType\n                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType\n                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service\n                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension\n                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options\n                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo\n                 * @property {string|null} [syntax] FileDescriptorProto syntax\n                 */\n    \n                /**\n                 * Constructs a new FileDescriptorProto.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a FileDescriptorProto.\n                 * @implements IFileDescriptorProto\n                 * @constructor\n                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set\n                 */\n                function FileDescriptorProto(properties) {\n                    this.dependency = [];\n                    this.publicDependency = [];\n                    this.weakDependency = [];\n                    this.messageType = [];\n                    this.enumType = [];\n                    this.service = [];\n                    this.extension = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * FileDescriptorProto name.\n                 * @member {string} name\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.name = \"\";\n    \n                /**\n                 * FileDescriptorProto package.\n                 * @member {string} package\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype[\"package\"] = \"\";\n    \n                /**\n                 * FileDescriptorProto dependency.\n                 * @member {Array.<string>} dependency\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.dependency = $util.emptyArray;\n    \n                /**\n                 * FileDescriptorProto publicDependency.\n                 * @member {Array.<number>} publicDependency\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;\n    \n                /**\n                 * FileDescriptorProto weakDependency.\n                 * @member {Array.<number>} weakDependency\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;\n    \n                /**\n                 * FileDescriptorProto messageType.\n                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.messageType = $util.emptyArray;\n    \n                /**\n                 * FileDescriptorProto enumType.\n                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.enumType = $util.emptyArray;\n    \n                /**\n                 * FileDescriptorProto service.\n                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.service = $util.emptyArray;\n    \n                /**\n                 * FileDescriptorProto extension.\n                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.extension = $util.emptyArray;\n    \n                /**\n                 * FileDescriptorProto options.\n                 * @member {google.protobuf.IFileOptions|null|undefined} options\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.options = null;\n    \n                /**\n                 * FileDescriptorProto sourceCodeInfo.\n                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.sourceCodeInfo = null;\n    \n                /**\n                 * FileDescriptorProto syntax.\n                 * @member {string} syntax\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 */\n                FileDescriptorProto.prototype.syntax = \"\";\n    \n                /**\n                 * Creates a new FileDescriptorProto instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set\n                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance\n                 */\n                FileDescriptorProto.create = function create(properties) {\n                    return new FileDescriptorProto(properties);\n                };\n    \n                /**\n                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FileDescriptorProto.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message[\"package\"] != null && message.hasOwnProperty(\"package\"))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message[\"package\"]);\n                    if (message.dependency != null && message.dependency.length)\n                        for (var i = 0; i < message.dependency.length; ++i)\n                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);\n                    if (message.messageType != null && message.messageType.length)\n                        for (var i = 0; i < message.messageType.length; ++i)\n                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.enumType != null && message.enumType.length)\n                        for (var i = 0; i < message.enumType.length; ++i)\n                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                    if (message.service != null && message.service.length)\n                        for (var i = 0; i < message.service.length; ++i)\n                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                    if (message.extension != null && message.extension.length)\n                        for (var i = 0; i < message.extension.length; ++i)\n                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.sourceCodeInfo != null && message.hasOwnProperty(\"sourceCodeInfo\"))\n                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                    if (message.publicDependency != null && message.publicDependency.length)\n                        for (var i = 0; i < message.publicDependency.length; ++i)\n                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);\n                    if (message.weakDependency != null && message.weakDependency.length)\n                        for (var i = 0; i < message.weakDependency.length; ++i)\n                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);\n                    if (message.syntax != null && message.hasOwnProperty(\"syntax\"))\n                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a FileDescriptorProto message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FileDescriptorProto.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            message[\"package\"] = reader.string();\n                            break;\n                        case 3:\n                            if (!(message.dependency && message.dependency.length))\n                                message.dependency = [];\n                            message.dependency.push(reader.string());\n                            break;\n                        case 10:\n                            if (!(message.publicDependency && message.publicDependency.length))\n                                message.publicDependency = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.publicDependency.push(reader.int32());\n                            } else\n                                message.publicDependency.push(reader.int32());\n                            break;\n                        case 11:\n                            if (!(message.weakDependency && message.weakDependency.length))\n                                message.weakDependency = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.weakDependency.push(reader.int32());\n                            } else\n                                message.weakDependency.push(reader.int32());\n                            break;\n                        case 4:\n                            if (!(message.messageType && message.messageType.length))\n                                message.messageType = [];\n                            message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 5:\n                            if (!(message.enumType && message.enumType.length))\n                                message.enumType = [];\n                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 6:\n                            if (!(message.service && message.service.length))\n                                message.service = [];\n                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 7:\n                            if (!(message.extension && message.extension.length))\n                                message.extension = [];\n                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 8:\n                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());\n                            break;\n                        case 9:\n                            message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());\n                            break;\n                        case 12:\n                            message.syntax = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a FileDescriptorProto message.\n                 * @function verify\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                FileDescriptorProto.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message[\"package\"] != null && message.hasOwnProperty(\"package\"))\n                        if (!$util.isString(message[\"package\"]))\n                            return \"package: string expected\";\n                    if (message.dependency != null && message.hasOwnProperty(\"dependency\")) {\n                        if (!Array.isArray(message.dependency))\n                            return \"dependency: array expected\";\n                        for (var i = 0; i < message.dependency.length; ++i)\n                            if (!$util.isString(message.dependency[i]))\n                                return \"dependency: string[] expected\";\n                    }\n                    if (message.publicDependency != null && message.hasOwnProperty(\"publicDependency\")) {\n                        if (!Array.isArray(message.publicDependency))\n                            return \"publicDependency: array expected\";\n                        for (var i = 0; i < message.publicDependency.length; ++i)\n                            if (!$util.isInteger(message.publicDependency[i]))\n                                return \"publicDependency: integer[] expected\";\n                    }\n                    if (message.weakDependency != null && message.hasOwnProperty(\"weakDependency\")) {\n                        if (!Array.isArray(message.weakDependency))\n                            return \"weakDependency: array expected\";\n                        for (var i = 0; i < message.weakDependency.length; ++i)\n                            if (!$util.isInteger(message.weakDependency[i]))\n                                return \"weakDependency: integer[] expected\";\n                    }\n                    if (message.messageType != null && message.hasOwnProperty(\"messageType\")) {\n                        if (!Array.isArray(message.messageType))\n                            return \"messageType: array expected\";\n                        for (var i = 0; i < message.messageType.length; ++i) {\n                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);\n                            if (error)\n                                return \"messageType.\" + error;\n                        }\n                    }\n                    if (message.enumType != null && message.hasOwnProperty(\"enumType\")) {\n                        if (!Array.isArray(message.enumType))\n                            return \"enumType: array expected\";\n                        for (var i = 0; i < message.enumType.length; ++i) {\n                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);\n                            if (error)\n                                return \"enumType.\" + error;\n                        }\n                    }\n                    if (message.service != null && message.hasOwnProperty(\"service\")) {\n                        if (!Array.isArray(message.service))\n                            return \"service: array expected\";\n                        for (var i = 0; i < message.service.length; ++i) {\n                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);\n                            if (error)\n                                return \"service.\" + error;\n                        }\n                    }\n                    if (message.extension != null && message.hasOwnProperty(\"extension\")) {\n                        if (!Array.isArray(message.extension))\n                            return \"extension: array expected\";\n                        for (var i = 0; i < message.extension.length; ++i) {\n                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);\n                            if (error)\n                                return \"extension.\" + error;\n                        }\n                    }\n                    if (message.options != null && message.hasOwnProperty(\"options\")) {\n                        var error = $root.google.protobuf.FileOptions.verify(message.options);\n                        if (error)\n                            return \"options.\" + error;\n                    }\n                    if (message.sourceCodeInfo != null && message.hasOwnProperty(\"sourceCodeInfo\")) {\n                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);\n                        if (error)\n                            return \"sourceCodeInfo.\" + error;\n                    }\n                    if (message.syntax != null && message.hasOwnProperty(\"syntax\"))\n                        if (!$util.isString(message.syntax))\n                            return \"syntax: string expected\";\n                    return null;\n                };\n    \n                /**\n                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n                 */\n                FileDescriptorProto.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.FileDescriptorProto)\n                        return object;\n                    var message = new $root.google.protobuf.FileDescriptorProto();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object[\"package\"] != null)\n                        message[\"package\"] = String(object[\"package\"]);\n                    if (object.dependency) {\n                        if (!Array.isArray(object.dependency))\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.dependency: array expected\");\n                        message.dependency = [];\n                        for (var i = 0; i < object.dependency.length; ++i)\n                            message.dependency[i] = String(object.dependency[i]);\n                    }\n                    if (object.publicDependency) {\n                        if (!Array.isArray(object.publicDependency))\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.publicDependency: array expected\");\n                        message.publicDependency = [];\n                        for (var i = 0; i < object.publicDependency.length; ++i)\n                            message.publicDependency[i] = object.publicDependency[i] | 0;\n                    }\n                    if (object.weakDependency) {\n                        if (!Array.isArray(object.weakDependency))\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.weakDependency: array expected\");\n                        message.weakDependency = [];\n                        for (var i = 0; i < object.weakDependency.length; ++i)\n                            message.weakDependency[i] = object.weakDependency[i] | 0;\n                    }\n                    if (object.messageType) {\n                        if (!Array.isArray(object.messageType))\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.messageType: array expected\");\n                        message.messageType = [];\n                        for (var i = 0; i < object.messageType.length; ++i) {\n                            if (typeof object.messageType[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.FileDescriptorProto.messageType: object expected\");\n                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);\n                        }\n                    }\n                    if (object.enumType) {\n                        if (!Array.isArray(object.enumType))\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.enumType: array expected\");\n                        message.enumType = [];\n                        for (var i = 0; i < object.enumType.length; ++i) {\n                            if (typeof object.enumType[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.FileDescriptorProto.enumType: object expected\");\n                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);\n                        }\n                    }\n                    if (object.service) {\n                        if (!Array.isArray(object.service))\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.service: array expected\");\n                        message.service = [];\n                        for (var i = 0; i < object.service.length; ++i) {\n                            if (typeof object.service[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.FileDescriptorProto.service: object expected\");\n                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);\n                        }\n                    }\n                    if (object.extension) {\n                        if (!Array.isArray(object.extension))\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.extension: array expected\");\n                        message.extension = [];\n                        for (var i = 0; i < object.extension.length; ++i) {\n                            if (typeof object.extension[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.FileDescriptorProto.extension: object expected\");\n                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);\n                        }\n                    }\n                    if (object.options != null) {\n                        if (typeof object.options !== \"object\")\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.options: object expected\");\n                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);\n                    }\n                    if (object.sourceCodeInfo != null) {\n                        if (typeof object.sourceCodeInfo !== \"object\")\n                            throw TypeError(\".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected\");\n                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);\n                    }\n                    if (object.syntax != null)\n                        message.syntax = String(object.syntax);\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @static\n                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                FileDescriptorProto.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.dependency = [];\n                        object.messageType = [];\n                        object.enumType = [];\n                        object.service = [];\n                        object.extension = [];\n                        object.publicDependency = [];\n                        object.weakDependency = [];\n                    }\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object[\"package\"] = \"\";\n                        object.options = null;\n                        object.sourceCodeInfo = null;\n                        object.syntax = \"\";\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message[\"package\"] != null && message.hasOwnProperty(\"package\"))\n                        object[\"package\"] = message[\"package\"];\n                    if (message.dependency && message.dependency.length) {\n                        object.dependency = [];\n                        for (var j = 0; j < message.dependency.length; ++j)\n                            object.dependency[j] = message.dependency[j];\n                    }\n                    if (message.messageType && message.messageType.length) {\n                        object.messageType = [];\n                        for (var j = 0; j < message.messageType.length; ++j)\n                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);\n                    }\n                    if (message.enumType && message.enumType.length) {\n                        object.enumType = [];\n                        for (var j = 0; j < message.enumType.length; ++j)\n                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);\n                    }\n                    if (message.service && message.service.length) {\n                        object.service = [];\n                        for (var j = 0; j < message.service.length; ++j)\n                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);\n                    }\n                    if (message.extension && message.extension.length) {\n                        object.extension = [];\n                        for (var j = 0; j < message.extension.length; ++j)\n                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);\n                    }\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);\n                    if (message.sourceCodeInfo != null && message.hasOwnProperty(\"sourceCodeInfo\"))\n                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);\n                    if (message.publicDependency && message.publicDependency.length) {\n                        object.publicDependency = [];\n                        for (var j = 0; j < message.publicDependency.length; ++j)\n                            object.publicDependency[j] = message.publicDependency[j];\n                    }\n                    if (message.weakDependency && message.weakDependency.length) {\n                        object.weakDependency = [];\n                        for (var j = 0; j < message.weakDependency.length; ++j)\n                            object.weakDependency[j] = message.weakDependency[j];\n                    }\n                    if (message.syntax != null && message.hasOwnProperty(\"syntax\"))\n                        object.syntax = message.syntax;\n                    return object;\n                };\n    \n                /**\n                 * Converts this FileDescriptorProto to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.FileDescriptorProto\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                FileDescriptorProto.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return FileDescriptorProto;\n            })();\n    \n            protobuf.DescriptorProto = (function() {\n    \n                /**\n                 * Properties of a DescriptorProto.\n                 * @memberof google.protobuf\n                 * @interface IDescriptorProto\n                 * @property {string|null} [name] DescriptorProto name\n                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field\n                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension\n                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType\n                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType\n                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange\n                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl\n                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options\n                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange\n                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName\n                 */\n    \n                /**\n                 * Constructs a new DescriptorProto.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a DescriptorProto.\n                 * @implements IDescriptorProto\n                 * @constructor\n                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set\n                 */\n                function DescriptorProto(properties) {\n                    this.field = [];\n                    this.extension = [];\n                    this.nestedType = [];\n                    this.enumType = [];\n                    this.extensionRange = [];\n                    this.oneofDecl = [];\n                    this.reservedRange = [];\n                    this.reservedName = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * DescriptorProto name.\n                 * @member {string} name\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.name = \"\";\n    \n                /**\n                 * DescriptorProto field.\n                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.field = $util.emptyArray;\n    \n                /**\n                 * DescriptorProto extension.\n                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.extension = $util.emptyArray;\n    \n                /**\n                 * DescriptorProto nestedType.\n                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.nestedType = $util.emptyArray;\n    \n                /**\n                 * DescriptorProto enumType.\n                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.enumType = $util.emptyArray;\n    \n                /**\n                 * DescriptorProto extensionRange.\n                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.extensionRange = $util.emptyArray;\n    \n                /**\n                 * DescriptorProto oneofDecl.\n                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.oneofDecl = $util.emptyArray;\n    \n                /**\n                 * DescriptorProto options.\n                 * @member {google.protobuf.IMessageOptions|null|undefined} options\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.options = null;\n    \n                /**\n                 * DescriptorProto reservedRange.\n                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.reservedRange = $util.emptyArray;\n    \n                /**\n                 * DescriptorProto reservedName.\n                 * @member {Array.<string>} reservedName\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 */\n                DescriptorProto.prototype.reservedName = $util.emptyArray;\n    \n                /**\n                 * Creates a new DescriptorProto instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.DescriptorProto\n                 * @static\n                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set\n                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance\n                 */\n                DescriptorProto.create = function create(properties) {\n                    return new DescriptorProto(properties);\n                };\n    \n                /**\n                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.DescriptorProto\n                 * @static\n                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                DescriptorProto.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.field != null && message.field.length)\n                        for (var i = 0; i < message.field.length; ++i)\n                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.nestedType != null && message.nestedType.length)\n                        for (var i = 0; i < message.nestedType.length; ++i)\n                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    if (message.enumType != null && message.enumType.length)\n                        for (var i = 0; i < message.enumType.length; ++i)\n                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.extensionRange != null && message.extensionRange.length)\n                        for (var i = 0; i < message.extensionRange.length; ++i)\n                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                    if (message.extension != null && message.extension.length)\n                        for (var i = 0; i < message.extension.length; ++i)\n                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                    if (message.oneofDecl != null && message.oneofDecl.length)\n                        for (var i = 0; i < message.oneofDecl.length; ++i)\n                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.reservedRange != null && message.reservedRange.length)\n                        for (var i = 0; i < message.reservedRange.length; ++i)\n                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                    if (message.reservedName != null && message.reservedName.length)\n                        for (var i = 0; i < message.reservedName.length; ++i)\n                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.DescriptorProto\n                 * @static\n                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a DescriptorProto message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.DescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.DescriptorProto} DescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                DescriptorProto.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            if (!(message.field && message.field.length))\n                                message.field = [];\n                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 6:\n                            if (!(message.extension && message.extension.length))\n                                message.extension = [];\n                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 3:\n                            if (!(message.nestedType && message.nestedType.length))\n                                message.nestedType = [];\n                            message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 4:\n                            if (!(message.enumType && message.enumType.length))\n                                message.enumType = [];\n                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 5:\n                            if (!(message.extensionRange && message.extensionRange.length))\n                                message.extensionRange = [];\n                            message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));\n                            break;\n                        case 8:\n                            if (!(message.oneofDecl && message.oneofDecl.length))\n                                message.oneofDecl = [];\n                            message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 7:\n                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());\n                            break;\n                        case 9:\n                            if (!(message.reservedRange && message.reservedRange.length))\n                                message.reservedRange = [];\n                            message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));\n                            break;\n                        case 10:\n                            if (!(message.reservedName && message.reservedName.length))\n                                message.reservedName = [];\n                            message.reservedName.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.DescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.DescriptorProto} DescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a DescriptorProto message.\n                 * @function verify\n                 * @memberof google.protobuf.DescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                DescriptorProto.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.field != null && message.hasOwnProperty(\"field\")) {\n                        if (!Array.isArray(message.field))\n                            return \"field: array expected\";\n                        for (var i = 0; i < message.field.length; ++i) {\n                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);\n                            if (error)\n                                return \"field.\" + error;\n                        }\n                    }\n                    if (message.extension != null && message.hasOwnProperty(\"extension\")) {\n                        if (!Array.isArray(message.extension))\n                            return \"extension: array expected\";\n                        for (var i = 0; i < message.extension.length; ++i) {\n                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);\n                            if (error)\n                                return \"extension.\" + error;\n                        }\n                    }\n                    if (message.nestedType != null && message.hasOwnProperty(\"nestedType\")) {\n                        if (!Array.isArray(message.nestedType))\n                            return \"nestedType: array expected\";\n                        for (var i = 0; i < message.nestedType.length; ++i) {\n                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);\n                            if (error)\n                                return \"nestedType.\" + error;\n                        }\n                    }\n                    if (message.enumType != null && message.hasOwnProperty(\"enumType\")) {\n                        if (!Array.isArray(message.enumType))\n                            return \"enumType: array expected\";\n                        for (var i = 0; i < message.enumType.length; ++i) {\n                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);\n                            if (error)\n                                return \"enumType.\" + error;\n                        }\n                    }\n                    if (message.extensionRange != null && message.hasOwnProperty(\"extensionRange\")) {\n                        if (!Array.isArray(message.extensionRange))\n                            return \"extensionRange: array expected\";\n                        for (var i = 0; i < message.extensionRange.length; ++i) {\n                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);\n                            if (error)\n                                return \"extensionRange.\" + error;\n                        }\n                    }\n                    if (message.oneofDecl != null && message.hasOwnProperty(\"oneofDecl\")) {\n                        if (!Array.isArray(message.oneofDecl))\n                            return \"oneofDecl: array expected\";\n                        for (var i = 0; i < message.oneofDecl.length; ++i) {\n                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);\n                            if (error)\n                                return \"oneofDecl.\" + error;\n                        }\n                    }\n                    if (message.options != null && message.hasOwnProperty(\"options\")) {\n                        var error = $root.google.protobuf.MessageOptions.verify(message.options);\n                        if (error)\n                            return \"options.\" + error;\n                    }\n                    if (message.reservedRange != null && message.hasOwnProperty(\"reservedRange\")) {\n                        if (!Array.isArray(message.reservedRange))\n                            return \"reservedRange: array expected\";\n                        for (var i = 0; i < message.reservedRange.length; ++i) {\n                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);\n                            if (error)\n                                return \"reservedRange.\" + error;\n                        }\n                    }\n                    if (message.reservedName != null && message.hasOwnProperty(\"reservedName\")) {\n                        if (!Array.isArray(message.reservedName))\n                            return \"reservedName: array expected\";\n                        for (var i = 0; i < message.reservedName.length; ++i)\n                            if (!$util.isString(message.reservedName[i]))\n                                return \"reservedName: string[] expected\";\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.DescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.DescriptorProto} DescriptorProto\n                 */\n                DescriptorProto.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.DescriptorProto)\n                        return object;\n                    var message = new $root.google.protobuf.DescriptorProto();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.field) {\n                        if (!Array.isArray(object.field))\n                            throw TypeError(\".google.protobuf.DescriptorProto.field: array expected\");\n                        message.field = [];\n                        for (var i = 0; i < object.field.length; ++i) {\n                            if (typeof object.field[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.DescriptorProto.field: object expected\");\n                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);\n                        }\n                    }\n                    if (object.extension) {\n                        if (!Array.isArray(object.extension))\n                            throw TypeError(\".google.protobuf.DescriptorProto.extension: array expected\");\n                        message.extension = [];\n                        for (var i = 0; i < object.extension.length; ++i) {\n                            if (typeof object.extension[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.DescriptorProto.extension: object expected\");\n                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);\n                        }\n                    }\n                    if (object.nestedType) {\n                        if (!Array.isArray(object.nestedType))\n                            throw TypeError(\".google.protobuf.DescriptorProto.nestedType: array expected\");\n                        message.nestedType = [];\n                        for (var i = 0; i < object.nestedType.length; ++i) {\n                            if (typeof object.nestedType[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.DescriptorProto.nestedType: object expected\");\n                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);\n                        }\n                    }\n                    if (object.enumType) {\n                        if (!Array.isArray(object.enumType))\n                            throw TypeError(\".google.protobuf.DescriptorProto.enumType: array expected\");\n                        message.enumType = [];\n                        for (var i = 0; i < object.enumType.length; ++i) {\n                            if (typeof object.enumType[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.DescriptorProto.enumType: object expected\");\n                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);\n                        }\n                    }\n                    if (object.extensionRange) {\n                        if (!Array.isArray(object.extensionRange))\n                            throw TypeError(\".google.protobuf.DescriptorProto.extensionRange: array expected\");\n                        message.extensionRange = [];\n                        for (var i = 0; i < object.extensionRange.length; ++i) {\n                            if (typeof object.extensionRange[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.DescriptorProto.extensionRange: object expected\");\n                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);\n                        }\n                    }\n                    if (object.oneofDecl) {\n                        if (!Array.isArray(object.oneofDecl))\n                            throw TypeError(\".google.protobuf.DescriptorProto.oneofDecl: array expected\");\n                        message.oneofDecl = [];\n                        for (var i = 0; i < object.oneofDecl.length; ++i) {\n                            if (typeof object.oneofDecl[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.DescriptorProto.oneofDecl: object expected\");\n                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);\n                        }\n                    }\n                    if (object.options != null) {\n                        if (typeof object.options !== \"object\")\n                            throw TypeError(\".google.protobuf.DescriptorProto.options: object expected\");\n                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);\n                    }\n                    if (object.reservedRange) {\n                        if (!Array.isArray(object.reservedRange))\n                            throw TypeError(\".google.protobuf.DescriptorProto.reservedRange: array expected\");\n                        message.reservedRange = [];\n                        for (var i = 0; i < object.reservedRange.length; ++i) {\n                            if (typeof object.reservedRange[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.DescriptorProto.reservedRange: object expected\");\n                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);\n                        }\n                    }\n                    if (object.reservedName) {\n                        if (!Array.isArray(object.reservedName))\n                            throw TypeError(\".google.protobuf.DescriptorProto.reservedName: array expected\");\n                        message.reservedName = [];\n                        for (var i = 0; i < object.reservedName.length; ++i)\n                            message.reservedName[i] = String(object.reservedName[i]);\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.DescriptorProto\n                 * @static\n                 * @param {google.protobuf.DescriptorProto} message DescriptorProto\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                DescriptorProto.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.field = [];\n                        object.nestedType = [];\n                        object.enumType = [];\n                        object.extensionRange = [];\n                        object.extension = [];\n                        object.oneofDecl = [];\n                        object.reservedRange = [];\n                        object.reservedName = [];\n                    }\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.options = null;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.field && message.field.length) {\n                        object.field = [];\n                        for (var j = 0; j < message.field.length; ++j)\n                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);\n                    }\n                    if (message.nestedType && message.nestedType.length) {\n                        object.nestedType = [];\n                        for (var j = 0; j < message.nestedType.length; ++j)\n                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);\n                    }\n                    if (message.enumType && message.enumType.length) {\n                        object.enumType = [];\n                        for (var j = 0; j < message.enumType.length; ++j)\n                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);\n                    }\n                    if (message.extensionRange && message.extensionRange.length) {\n                        object.extensionRange = [];\n                        for (var j = 0; j < message.extensionRange.length; ++j)\n                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);\n                    }\n                    if (message.extension && message.extension.length) {\n                        object.extension = [];\n                        for (var j = 0; j < message.extension.length; ++j)\n                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);\n                    }\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);\n                    if (message.oneofDecl && message.oneofDecl.length) {\n                        object.oneofDecl = [];\n                        for (var j = 0; j < message.oneofDecl.length; ++j)\n                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);\n                    }\n                    if (message.reservedRange && message.reservedRange.length) {\n                        object.reservedRange = [];\n                        for (var j = 0; j < message.reservedRange.length; ++j)\n                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);\n                    }\n                    if (message.reservedName && message.reservedName.length) {\n                        object.reservedName = [];\n                        for (var j = 0; j < message.reservedName.length; ++j)\n                            object.reservedName[j] = message.reservedName[j];\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this DescriptorProto to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.DescriptorProto\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                DescriptorProto.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                DescriptorProto.ExtensionRange = (function() {\n    \n                    /**\n                     * Properties of an ExtensionRange.\n                     * @memberof google.protobuf.DescriptorProto\n                     * @interface IExtensionRange\n                     * @property {number|null} [start] ExtensionRange start\n                     * @property {number|null} [end] ExtensionRange end\n                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options\n                     */\n    \n                    /**\n                     * Constructs a new ExtensionRange.\n                     * @memberof google.protobuf.DescriptorProto\n                     * @classdesc Represents an ExtensionRange.\n                     * @implements IExtensionRange\n                     * @constructor\n                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set\n                     */\n                    function ExtensionRange(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n    \n                    /**\n                     * ExtensionRange start.\n                     * @member {number} start\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @instance\n                     */\n                    ExtensionRange.prototype.start = 0;\n    \n                    /**\n                     * ExtensionRange end.\n                     * @member {number} end\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @instance\n                     */\n                    ExtensionRange.prototype.end = 0;\n    \n                    /**\n                     * ExtensionRange options.\n                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @instance\n                     */\n                    ExtensionRange.prototype.options = null;\n    \n                    /**\n                     * Creates a new ExtensionRange instance using the specified properties.\n                     * @function create\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @static\n                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set\n                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance\n                     */\n                    ExtensionRange.create = function create(properties) {\n                        return new ExtensionRange(properties);\n                    };\n    \n                    /**\n                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.\n                     * @function encode\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @static\n                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ExtensionRange.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);\n                        if (message.options != null && message.hasOwnProperty(\"options\"))\n                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                        return writer;\n                    };\n    \n                    /**\n                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @static\n                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n    \n                    /**\n                     * Decodes an ExtensionRange message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ExtensionRange.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.start = reader.int32();\n                                break;\n                            case 2:\n                                message.end = reader.int32();\n                                break;\n                            case 3:\n                                message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n    \n                    /**\n                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n    \n                    /**\n                     * Verifies an ExtensionRange message.\n                     * @function verify\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    ExtensionRange.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            if (!$util.isInteger(message.start))\n                                return \"start: integer expected\";\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            if (!$util.isInteger(message.end))\n                                return \"end: integer expected\";\n                        if (message.options != null && message.hasOwnProperty(\"options\")) {\n                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);\n                            if (error)\n                                return \"options.\" + error;\n                        }\n                        return null;\n                    };\n    \n                    /**\n                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n                     */\n                    ExtensionRange.fromObject = function fromObject(object) {\n                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)\n                            return object;\n                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();\n                        if (object.start != null)\n                            message.start = object.start | 0;\n                        if (object.end != null)\n                            message.end = object.end | 0;\n                        if (object.options != null) {\n                            if (typeof object.options !== \"object\")\n                                throw TypeError(\".google.protobuf.DescriptorProto.ExtensionRange.options: object expected\");\n                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);\n                        }\n                        return message;\n                    };\n    \n                    /**\n                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @static\n                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    ExtensionRange.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.start = 0;\n                            object.end = 0;\n                            object.options = null;\n                        }\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            object.start = message.start;\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            object.end = message.end;\n                        if (message.options != null && message.hasOwnProperty(\"options\"))\n                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);\n                        return object;\n                    };\n    \n                    /**\n                     * Converts this ExtensionRange to JSON.\n                     * @function toJSON\n                     * @memberof google.protobuf.DescriptorProto.ExtensionRange\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    ExtensionRange.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n    \n                    return ExtensionRange;\n                })();\n    \n                DescriptorProto.ReservedRange = (function() {\n    \n                    /**\n                     * Properties of a ReservedRange.\n                     * @memberof google.protobuf.DescriptorProto\n                     * @interface IReservedRange\n                     * @property {number|null} [start] ReservedRange start\n                     * @property {number|null} [end] ReservedRange end\n                     */\n    \n                    /**\n                     * Constructs a new ReservedRange.\n                     * @memberof google.protobuf.DescriptorProto\n                     * @classdesc Represents a ReservedRange.\n                     * @implements IReservedRange\n                     * @constructor\n                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set\n                     */\n                    function ReservedRange(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n    \n                    /**\n                     * ReservedRange start.\n                     * @member {number} start\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @instance\n                     */\n                    ReservedRange.prototype.start = 0;\n    \n                    /**\n                     * ReservedRange end.\n                     * @member {number} end\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @instance\n                     */\n                    ReservedRange.prototype.end = 0;\n    \n                    /**\n                     * Creates a new ReservedRange instance using the specified properties.\n                     * @function create\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @static\n                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set\n                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance\n                     */\n                    ReservedRange.create = function create(properties) {\n                        return new ReservedRange(properties);\n                    };\n    \n                    /**\n                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.\n                     * @function encode\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @static\n                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ReservedRange.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);\n                        return writer;\n                    };\n    \n                    /**\n                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @static\n                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n    \n                    /**\n                     * Decodes a ReservedRange message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ReservedRange.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.start = reader.int32();\n                                break;\n                            case 2:\n                                message.end = reader.int32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n    \n                    /**\n                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n    \n                    /**\n                     * Verifies a ReservedRange message.\n                     * @function verify\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    ReservedRange.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            if (!$util.isInteger(message.start))\n                                return \"start: integer expected\";\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            if (!$util.isInteger(message.end))\n                                return \"end: integer expected\";\n                        return null;\n                    };\n    \n                    /**\n                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n                     */\n                    ReservedRange.fromObject = function fromObject(object) {\n                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)\n                            return object;\n                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();\n                        if (object.start != null)\n                            message.start = object.start | 0;\n                        if (object.end != null)\n                            message.end = object.end | 0;\n                        return message;\n                    };\n    \n                    /**\n                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @static\n                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    ReservedRange.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.start = 0;\n                            object.end = 0;\n                        }\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            object.start = message.start;\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            object.end = message.end;\n                        return object;\n                    };\n    \n                    /**\n                     * Converts this ReservedRange to JSON.\n                     * @function toJSON\n                     * @memberof google.protobuf.DescriptorProto.ReservedRange\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    ReservedRange.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n    \n                    return ReservedRange;\n                })();\n    \n                return DescriptorProto;\n            })();\n    \n            protobuf.ExtensionRangeOptions = (function() {\n    \n                /**\n                 * Properties of an ExtensionRangeOptions.\n                 * @memberof google.protobuf\n                 * @interface IExtensionRangeOptions\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption\n                 */\n    \n                /**\n                 * Constructs a new ExtensionRangeOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents an ExtensionRangeOptions.\n                 * @implements IExtensionRangeOptions\n                 * @constructor\n                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set\n                 */\n                function ExtensionRangeOptions(properties) {\n                    this.uninterpretedOption = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * ExtensionRangeOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @instance\n                 */\n                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * Creates a new ExtensionRangeOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @static\n                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance\n                 */\n                ExtensionRangeOptions.create = function create(properties) {\n                    return new ExtensionRangeOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @static\n                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ExtensionRangeOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @static\n                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ExtensionRangeOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies an ExtensionRangeOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ExtensionRangeOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions\n                 */\n                ExtensionRangeOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)\n                        return object;\n                    var message = new $root.google.protobuf.ExtensionRangeOptions();\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @static\n                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ExtensionRangeOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.uninterpretedOption = [];\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this ExtensionRangeOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.ExtensionRangeOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ExtensionRangeOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return ExtensionRangeOptions;\n            })();\n    \n            protobuf.FieldDescriptorProto = (function() {\n    \n                /**\n                 * Properties of a FieldDescriptorProto.\n                 * @memberof google.protobuf\n                 * @interface IFieldDescriptorProto\n                 * @property {string|null} [name] FieldDescriptorProto name\n                 * @property {number|null} [number] FieldDescriptorProto number\n                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label\n                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type\n                 * @property {string|null} [typeName] FieldDescriptorProto typeName\n                 * @property {string|null} [extendee] FieldDescriptorProto extendee\n                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue\n                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex\n                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName\n                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options\n                 */\n    \n                /**\n                 * Constructs a new FieldDescriptorProto.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a FieldDescriptorProto.\n                 * @implements IFieldDescriptorProto\n                 * @constructor\n                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set\n                 */\n                function FieldDescriptorProto(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * FieldDescriptorProto name.\n                 * @member {string} name\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.name = \"\";\n    \n                /**\n                 * FieldDescriptorProto number.\n                 * @member {number} number\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.number = 0;\n    \n                /**\n                 * FieldDescriptorProto label.\n                 * @member {google.protobuf.FieldDescriptorProto.Label} label\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.label = 1;\n    \n                /**\n                 * FieldDescriptorProto type.\n                 * @member {google.protobuf.FieldDescriptorProto.Type} type\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.type = 1;\n    \n                /**\n                 * FieldDescriptorProto typeName.\n                 * @member {string} typeName\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.typeName = \"\";\n    \n                /**\n                 * FieldDescriptorProto extendee.\n                 * @member {string} extendee\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.extendee = \"\";\n    \n                /**\n                 * FieldDescriptorProto defaultValue.\n                 * @member {string} defaultValue\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.defaultValue = \"\";\n    \n                /**\n                 * FieldDescriptorProto oneofIndex.\n                 * @member {number} oneofIndex\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.oneofIndex = 0;\n    \n                /**\n                 * FieldDescriptorProto jsonName.\n                 * @member {string} jsonName\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.jsonName = \"\";\n    \n                /**\n                 * FieldDescriptorProto options.\n                 * @member {google.protobuf.IFieldOptions|null|undefined} options\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 */\n                FieldDescriptorProto.prototype.options = null;\n    \n                /**\n                 * Creates a new FieldDescriptorProto instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set\n                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance\n                 */\n                FieldDescriptorProto.create = function create(properties) {\n                    return new FieldDescriptorProto(properties);\n                };\n    \n                /**\n                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FieldDescriptorProto.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.extendee != null && message.hasOwnProperty(\"extendee\"))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);\n                    if (message.number != null && message.hasOwnProperty(\"number\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);\n                    if (message.label != null && message.hasOwnProperty(\"label\"))\n                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);\n                    if (message.typeName != null && message.hasOwnProperty(\"typeName\"))\n                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);\n                    if (message.defaultValue != null && message.hasOwnProperty(\"defaultValue\"))\n                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.oneofIndex != null && message.hasOwnProperty(\"oneofIndex\"))\n                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);\n                    if (message.jsonName != null && message.hasOwnProperty(\"jsonName\"))\n                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FieldDescriptorProto.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 3:\n                            message.number = reader.int32();\n                            break;\n                        case 4:\n                            message.label = reader.int32();\n                            break;\n                        case 5:\n                            message.type = reader.int32();\n                            break;\n                        case 6:\n                            message.typeName = reader.string();\n                            break;\n                        case 2:\n                            message.extendee = reader.string();\n                            break;\n                        case 7:\n                            message.defaultValue = reader.string();\n                            break;\n                        case 9:\n                            message.oneofIndex = reader.int32();\n                            break;\n                        case 10:\n                            message.jsonName = reader.string();\n                            break;\n                        case 8:\n                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a FieldDescriptorProto message.\n                 * @function verify\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                FieldDescriptorProto.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.number != null && message.hasOwnProperty(\"number\"))\n                        if (!$util.isInteger(message.number))\n                            return \"number: integer expected\";\n                    if (message.label != null && message.hasOwnProperty(\"label\"))\n                        switch (message.label) {\n                        default:\n                            return \"label: enum value expected\";\n                        case 1:\n                        case 2:\n                        case 3:\n                            break;\n                        }\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        switch (message.type) {\n                        default:\n                            return \"type: enum value expected\";\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 7:\n                        case 8:\n                        case 9:\n                        case 10:\n                        case 11:\n                        case 12:\n                        case 13:\n                        case 14:\n                        case 15:\n                        case 16:\n                        case 17:\n                        case 18:\n                            break;\n                        }\n                    if (message.typeName != null && message.hasOwnProperty(\"typeName\"))\n                        if (!$util.isString(message.typeName))\n                            return \"typeName: string expected\";\n                    if (message.extendee != null && message.hasOwnProperty(\"extendee\"))\n                        if (!$util.isString(message.extendee))\n                            return \"extendee: string expected\";\n                    if (message.defaultValue != null && message.hasOwnProperty(\"defaultValue\"))\n                        if (!$util.isString(message.defaultValue))\n                            return \"defaultValue: string expected\";\n                    if (message.oneofIndex != null && message.hasOwnProperty(\"oneofIndex\"))\n                        if (!$util.isInteger(message.oneofIndex))\n                            return \"oneofIndex: integer expected\";\n                    if (message.jsonName != null && message.hasOwnProperty(\"jsonName\"))\n                        if (!$util.isString(message.jsonName))\n                            return \"jsonName: string expected\";\n                    if (message.options != null && message.hasOwnProperty(\"options\")) {\n                        var error = $root.google.protobuf.FieldOptions.verify(message.options);\n                        if (error)\n                            return \"options.\" + error;\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n                 */\n                FieldDescriptorProto.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)\n                        return object;\n                    var message = new $root.google.protobuf.FieldDescriptorProto();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.number != null)\n                        message.number = object.number | 0;\n                    switch (object.label) {\n                    case \"LABEL_OPTIONAL\":\n                    case 1:\n                        message.label = 1;\n                        break;\n                    case \"LABEL_REQUIRED\":\n                    case 2:\n                        message.label = 2;\n                        break;\n                    case \"LABEL_REPEATED\":\n                    case 3:\n                        message.label = 3;\n                        break;\n                    }\n                    switch (object.type) {\n                    case \"TYPE_DOUBLE\":\n                    case 1:\n                        message.type = 1;\n                        break;\n                    case \"TYPE_FLOAT\":\n                    case 2:\n                        message.type = 2;\n                        break;\n                    case \"TYPE_INT64\":\n                    case 3:\n                        message.type = 3;\n                        break;\n                    case \"TYPE_UINT64\":\n                    case 4:\n                        message.type = 4;\n                        break;\n                    case \"TYPE_INT32\":\n                    case 5:\n                        message.type = 5;\n                        break;\n                    case \"TYPE_FIXED64\":\n                    case 6:\n                        message.type = 6;\n                        break;\n                    case \"TYPE_FIXED32\":\n                    case 7:\n                        message.type = 7;\n                        break;\n                    case \"TYPE_BOOL\":\n                    case 8:\n                        message.type = 8;\n                        break;\n                    case \"TYPE_STRING\":\n                    case 9:\n                        message.type = 9;\n                        break;\n                    case \"TYPE_GROUP\":\n                    case 10:\n                        message.type = 10;\n                        break;\n                    case \"TYPE_MESSAGE\":\n                    case 11:\n                        message.type = 11;\n                        break;\n                    case \"TYPE_BYTES\":\n                    case 12:\n                        message.type = 12;\n                        break;\n                    case \"TYPE_UINT32\":\n                    case 13:\n                        message.type = 13;\n                        break;\n                    case \"TYPE_ENUM\":\n                    case 14:\n                        message.type = 14;\n                        break;\n                    case \"TYPE_SFIXED32\":\n                    case 15:\n                        message.type = 15;\n                        break;\n                    case \"TYPE_SFIXED64\":\n                    case 16:\n                        message.type = 16;\n                        break;\n                    case \"TYPE_SINT32\":\n                    case 17:\n                        message.type = 17;\n                        break;\n                    case \"TYPE_SINT64\":\n                    case 18:\n                        message.type = 18;\n                        break;\n                    }\n                    if (object.typeName != null)\n                        message.typeName = String(object.typeName);\n                    if (object.extendee != null)\n                        message.extendee = String(object.extendee);\n                    if (object.defaultValue != null)\n                        message.defaultValue = String(object.defaultValue);\n                    if (object.oneofIndex != null)\n                        message.oneofIndex = object.oneofIndex | 0;\n                    if (object.jsonName != null)\n                        message.jsonName = String(object.jsonName);\n                    if (object.options != null) {\n                        if (typeof object.options !== \"object\")\n                            throw TypeError(\".google.protobuf.FieldDescriptorProto.options: object expected\");\n                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @static\n                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                FieldDescriptorProto.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.extendee = \"\";\n                        object.number = 0;\n                        object.label = options.enums === String ? \"LABEL_OPTIONAL\" : 1;\n                        object.type = options.enums === String ? \"TYPE_DOUBLE\" : 1;\n                        object.typeName = \"\";\n                        object.defaultValue = \"\";\n                        object.options = null;\n                        object.oneofIndex = 0;\n                        object.jsonName = \"\";\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.extendee != null && message.hasOwnProperty(\"extendee\"))\n                        object.extendee = message.extendee;\n                    if (message.number != null && message.hasOwnProperty(\"number\"))\n                        object.number = message.number;\n                    if (message.label != null && message.hasOwnProperty(\"label\"))\n                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;\n                    if (message.typeName != null && message.hasOwnProperty(\"typeName\"))\n                        object.typeName = message.typeName;\n                    if (message.defaultValue != null && message.hasOwnProperty(\"defaultValue\"))\n                        object.defaultValue = message.defaultValue;\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);\n                    if (message.oneofIndex != null && message.hasOwnProperty(\"oneofIndex\"))\n                        object.oneofIndex = message.oneofIndex;\n                    if (message.jsonName != null && message.hasOwnProperty(\"jsonName\"))\n                        object.jsonName = message.jsonName;\n                    return object;\n                };\n    \n                /**\n                 * Converts this FieldDescriptorProto to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.FieldDescriptorProto\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                FieldDescriptorProto.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                /**\n                 * Type enum.\n                 * @name google.protobuf.FieldDescriptorProto.Type\n                 * @enum {string}\n                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value\n                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value\n                 * @property {number} TYPE_INT64=3 TYPE_INT64 value\n                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value\n                 * @property {number} TYPE_INT32=5 TYPE_INT32 value\n                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value\n                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value\n                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value\n                 * @property {number} TYPE_STRING=9 TYPE_STRING value\n                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value\n                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value\n                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value\n                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value\n                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value\n                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value\n                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value\n                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value\n                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value\n                 */\n                FieldDescriptorProto.Type = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[1] = \"TYPE_DOUBLE\"] = 1;\n                    values[valuesById[2] = \"TYPE_FLOAT\"] = 2;\n                    values[valuesById[3] = \"TYPE_INT64\"] = 3;\n                    values[valuesById[4] = \"TYPE_UINT64\"] = 4;\n                    values[valuesById[5] = \"TYPE_INT32\"] = 5;\n                    values[valuesById[6] = \"TYPE_FIXED64\"] = 6;\n                    values[valuesById[7] = \"TYPE_FIXED32\"] = 7;\n                    values[valuesById[8] = \"TYPE_BOOL\"] = 8;\n                    values[valuesById[9] = \"TYPE_STRING\"] = 9;\n                    values[valuesById[10] = \"TYPE_GROUP\"] = 10;\n                    values[valuesById[11] = \"TYPE_MESSAGE\"] = 11;\n                    values[valuesById[12] = \"TYPE_BYTES\"] = 12;\n                    values[valuesById[13] = \"TYPE_UINT32\"] = 13;\n                    values[valuesById[14] = \"TYPE_ENUM\"] = 14;\n                    values[valuesById[15] = \"TYPE_SFIXED32\"] = 15;\n                    values[valuesById[16] = \"TYPE_SFIXED64\"] = 16;\n                    values[valuesById[17] = \"TYPE_SINT32\"] = 17;\n                    values[valuesById[18] = \"TYPE_SINT64\"] = 18;\n                    return values;\n                })();\n    \n                /**\n                 * Label enum.\n                 * @name google.protobuf.FieldDescriptorProto.Label\n                 * @enum {string}\n                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value\n                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value\n                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value\n                 */\n                FieldDescriptorProto.Label = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[1] = \"LABEL_OPTIONAL\"] = 1;\n                    values[valuesById[2] = \"LABEL_REQUIRED\"] = 2;\n                    values[valuesById[3] = \"LABEL_REPEATED\"] = 3;\n                    return values;\n                })();\n    \n                return FieldDescriptorProto;\n            })();\n    \n            protobuf.OneofDescriptorProto = (function() {\n    \n                /**\n                 * Properties of an OneofDescriptorProto.\n                 * @memberof google.protobuf\n                 * @interface IOneofDescriptorProto\n                 * @property {string|null} [name] OneofDescriptorProto name\n                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options\n                 */\n    \n                /**\n                 * Constructs a new OneofDescriptorProto.\n                 * @memberof google.protobuf\n                 * @classdesc Represents an OneofDescriptorProto.\n                 * @implements IOneofDescriptorProto\n                 * @constructor\n                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set\n                 */\n                function OneofDescriptorProto(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * OneofDescriptorProto name.\n                 * @member {string} name\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @instance\n                 */\n                OneofDescriptorProto.prototype.name = \"\";\n    \n                /**\n                 * OneofDescriptorProto options.\n                 * @member {google.protobuf.IOneofOptions|null|undefined} options\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @instance\n                 */\n                OneofDescriptorProto.prototype.options = null;\n    \n                /**\n                 * Creates a new OneofDescriptorProto instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set\n                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance\n                 */\n                OneofDescriptorProto.create = function create(properties) {\n                    return new OneofDescriptorProto(properties);\n                };\n    \n                /**\n                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                OneofDescriptorProto.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                OneofDescriptorProto.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies an OneofDescriptorProto message.\n                 * @function verify\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                OneofDescriptorProto.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.options != null && message.hasOwnProperty(\"options\")) {\n                        var error = $root.google.protobuf.OneofOptions.verify(message.options);\n                        if (error)\n                            return \"options.\" + error;\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n                 */\n                OneofDescriptorProto.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)\n                        return object;\n                    var message = new $root.google.protobuf.OneofDescriptorProto();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.options != null) {\n                        if (typeof object.options !== \"object\")\n                            throw TypeError(\".google.protobuf.OneofDescriptorProto.options: object expected\");\n                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @static\n                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                OneofDescriptorProto.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.options = null;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);\n                    return object;\n                };\n    \n                /**\n                 * Converts this OneofDescriptorProto to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.OneofDescriptorProto\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                OneofDescriptorProto.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return OneofDescriptorProto;\n            })();\n    \n            protobuf.EnumDescriptorProto = (function() {\n    \n                /**\n                 * Properties of an EnumDescriptorProto.\n                 * @memberof google.protobuf\n                 * @interface IEnumDescriptorProto\n                 * @property {string|null} [name] EnumDescriptorProto name\n                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value\n                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options\n                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange\n                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName\n                 */\n    \n                /**\n                 * Constructs a new EnumDescriptorProto.\n                 * @memberof google.protobuf\n                 * @classdesc Represents an EnumDescriptorProto.\n                 * @implements IEnumDescriptorProto\n                 * @constructor\n                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set\n                 */\n                function EnumDescriptorProto(properties) {\n                    this.value = [];\n                    this.reservedRange = [];\n                    this.reservedName = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * EnumDescriptorProto name.\n                 * @member {string} name\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @instance\n                 */\n                EnumDescriptorProto.prototype.name = \"\";\n    \n                /**\n                 * EnumDescriptorProto value.\n                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @instance\n                 */\n                EnumDescriptorProto.prototype.value = $util.emptyArray;\n    \n                /**\n                 * EnumDescriptorProto options.\n                 * @member {google.protobuf.IEnumOptions|null|undefined} options\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @instance\n                 */\n                EnumDescriptorProto.prototype.options = null;\n    \n                /**\n                 * EnumDescriptorProto reservedRange.\n                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @instance\n                 */\n                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;\n    \n                /**\n                 * EnumDescriptorProto reservedName.\n                 * @member {Array.<string>} reservedName\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @instance\n                 */\n                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;\n    \n                /**\n                 * Creates a new EnumDescriptorProto instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set\n                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance\n                 */\n                EnumDescriptorProto.create = function create(properties) {\n                    return new EnumDescriptorProto(properties);\n                };\n    \n                /**\n                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                EnumDescriptorProto.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.value != null && message.value.length)\n                        for (var i = 0; i < message.value.length; ++i)\n                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    if (message.reservedRange != null && message.reservedRange.length)\n                        for (var i = 0; i < message.reservedRange.length; ++i)\n                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.reservedName != null && message.reservedName.length)\n                        for (var i = 0; i < message.reservedName.length; ++i)\n                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                EnumDescriptorProto.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            if (!(message.value && message.value.length))\n                                message.value = [];\n                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 3:\n                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            if (!(message.reservedRange && message.reservedRange.length))\n                                message.reservedRange = [];\n                            message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));\n                            break;\n                        case 5:\n                            if (!(message.reservedName && message.reservedName.length))\n                                message.reservedName = [];\n                            message.reservedName.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies an EnumDescriptorProto message.\n                 * @function verify\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                EnumDescriptorProto.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.value != null && message.hasOwnProperty(\"value\")) {\n                        if (!Array.isArray(message.value))\n                            return \"value: array expected\";\n                        for (var i = 0; i < message.value.length; ++i) {\n                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);\n                            if (error)\n                                return \"value.\" + error;\n                        }\n                    }\n                    if (message.options != null && message.hasOwnProperty(\"options\")) {\n                        var error = $root.google.protobuf.EnumOptions.verify(message.options);\n                        if (error)\n                            return \"options.\" + error;\n                    }\n                    if (message.reservedRange != null && message.hasOwnProperty(\"reservedRange\")) {\n                        if (!Array.isArray(message.reservedRange))\n                            return \"reservedRange: array expected\";\n                        for (var i = 0; i < message.reservedRange.length; ++i) {\n                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);\n                            if (error)\n                                return \"reservedRange.\" + error;\n                        }\n                    }\n                    if (message.reservedName != null && message.hasOwnProperty(\"reservedName\")) {\n                        if (!Array.isArray(message.reservedName))\n                            return \"reservedName: array expected\";\n                        for (var i = 0; i < message.reservedName.length; ++i)\n                            if (!$util.isString(message.reservedName[i]))\n                                return \"reservedName: string[] expected\";\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n                 */\n                EnumDescriptorProto.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)\n                        return object;\n                    var message = new $root.google.protobuf.EnumDescriptorProto();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.value) {\n                        if (!Array.isArray(object.value))\n                            throw TypeError(\".google.protobuf.EnumDescriptorProto.value: array expected\");\n                        message.value = [];\n                        for (var i = 0; i < object.value.length; ++i) {\n                            if (typeof object.value[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.EnumDescriptorProto.value: object expected\");\n                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);\n                        }\n                    }\n                    if (object.options != null) {\n                        if (typeof object.options !== \"object\")\n                            throw TypeError(\".google.protobuf.EnumDescriptorProto.options: object expected\");\n                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);\n                    }\n                    if (object.reservedRange) {\n                        if (!Array.isArray(object.reservedRange))\n                            throw TypeError(\".google.protobuf.EnumDescriptorProto.reservedRange: array expected\");\n                        message.reservedRange = [];\n                        for (var i = 0; i < object.reservedRange.length; ++i) {\n                            if (typeof object.reservedRange[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.EnumDescriptorProto.reservedRange: object expected\");\n                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);\n                        }\n                    }\n                    if (object.reservedName) {\n                        if (!Array.isArray(object.reservedName))\n                            throw TypeError(\".google.protobuf.EnumDescriptorProto.reservedName: array expected\");\n                        message.reservedName = [];\n                        for (var i = 0; i < object.reservedName.length; ++i)\n                            message.reservedName[i] = String(object.reservedName[i]);\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @static\n                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                EnumDescriptorProto.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.value = [];\n                        object.reservedRange = [];\n                        object.reservedName = [];\n                    }\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.options = null;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.value && message.value.length) {\n                        object.value = [];\n                        for (var j = 0; j < message.value.length; ++j)\n                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);\n                    }\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);\n                    if (message.reservedRange && message.reservedRange.length) {\n                        object.reservedRange = [];\n                        for (var j = 0; j < message.reservedRange.length; ++j)\n                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);\n                    }\n                    if (message.reservedName && message.reservedName.length) {\n                        object.reservedName = [];\n                        for (var j = 0; j < message.reservedName.length; ++j)\n                            object.reservedName[j] = message.reservedName[j];\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this EnumDescriptorProto to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.EnumDescriptorProto\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                EnumDescriptorProto.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                EnumDescriptorProto.EnumReservedRange = (function() {\n    \n                    /**\n                     * Properties of an EnumReservedRange.\n                     * @memberof google.protobuf.EnumDescriptorProto\n                     * @interface IEnumReservedRange\n                     * @property {number|null} [start] EnumReservedRange start\n                     * @property {number|null} [end] EnumReservedRange end\n                     */\n    \n                    /**\n                     * Constructs a new EnumReservedRange.\n                     * @memberof google.protobuf.EnumDescriptorProto\n                     * @classdesc Represents an EnumReservedRange.\n                     * @implements IEnumReservedRange\n                     * @constructor\n                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set\n                     */\n                    function EnumReservedRange(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n    \n                    /**\n                     * EnumReservedRange start.\n                     * @member {number} start\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @instance\n                     */\n                    EnumReservedRange.prototype.start = 0;\n    \n                    /**\n                     * EnumReservedRange end.\n                     * @member {number} end\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @instance\n                     */\n                    EnumReservedRange.prototype.end = 0;\n    \n                    /**\n                     * Creates a new EnumReservedRange instance using the specified properties.\n                     * @function create\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @static\n                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set\n                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance\n                     */\n                    EnumReservedRange.create = function create(properties) {\n                        return new EnumReservedRange(properties);\n                    };\n    \n                    /**\n                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.\n                     * @function encode\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @static\n                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    EnumReservedRange.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);\n                        return writer;\n                    };\n    \n                    /**\n                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @static\n                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n    \n                    /**\n                     * Decodes an EnumReservedRange message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    EnumReservedRange.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.start = reader.int32();\n                                break;\n                            case 2:\n                                message.end = reader.int32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n    \n                    /**\n                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n    \n                    /**\n                     * Verifies an EnumReservedRange message.\n                     * @function verify\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    EnumReservedRange.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            if (!$util.isInteger(message.start))\n                                return \"start: integer expected\";\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            if (!$util.isInteger(message.end))\n                                return \"end: integer expected\";\n                        return null;\n                    };\n    \n                    /**\n                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange\n                     */\n                    EnumReservedRange.fromObject = function fromObject(object) {\n                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)\n                            return object;\n                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();\n                        if (object.start != null)\n                            message.start = object.start | 0;\n                        if (object.end != null)\n                            message.end = object.end | 0;\n                        return message;\n                    };\n    \n                    /**\n                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @static\n                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    EnumReservedRange.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.start = 0;\n                            object.end = 0;\n                        }\n                        if (message.start != null && message.hasOwnProperty(\"start\"))\n                            object.start = message.start;\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            object.end = message.end;\n                        return object;\n                    };\n    \n                    /**\n                     * Converts this EnumReservedRange to JSON.\n                     * @function toJSON\n                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    EnumReservedRange.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n    \n                    return EnumReservedRange;\n                })();\n    \n                return EnumDescriptorProto;\n            })();\n    \n            protobuf.EnumValueDescriptorProto = (function() {\n    \n                /**\n                 * Properties of an EnumValueDescriptorProto.\n                 * @memberof google.protobuf\n                 * @interface IEnumValueDescriptorProto\n                 * @property {string|null} [name] EnumValueDescriptorProto name\n                 * @property {number|null} [number] EnumValueDescriptorProto number\n                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options\n                 */\n    \n                /**\n                 * Constructs a new EnumValueDescriptorProto.\n                 * @memberof google.protobuf\n                 * @classdesc Represents an EnumValueDescriptorProto.\n                 * @implements IEnumValueDescriptorProto\n                 * @constructor\n                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set\n                 */\n                function EnumValueDescriptorProto(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * EnumValueDescriptorProto name.\n                 * @member {string} name\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @instance\n                 */\n                EnumValueDescriptorProto.prototype.name = \"\";\n    \n                /**\n                 * EnumValueDescriptorProto number.\n                 * @member {number} number\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @instance\n                 */\n                EnumValueDescriptorProto.prototype.number = 0;\n    \n                /**\n                 * EnumValueDescriptorProto options.\n                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @instance\n                 */\n                EnumValueDescriptorProto.prototype.options = null;\n    \n                /**\n                 * Creates a new EnumValueDescriptorProto instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set\n                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance\n                 */\n                EnumValueDescriptorProto.create = function create(properties) {\n                    return new EnumValueDescriptorProto(properties);\n                };\n    \n                /**\n                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                EnumValueDescriptorProto.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.number != null && message.hasOwnProperty(\"number\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                EnumValueDescriptorProto.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            message.number = reader.int32();\n                            break;\n                        case 3:\n                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies an EnumValueDescriptorProto message.\n                 * @function verify\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                EnumValueDescriptorProto.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.number != null && message.hasOwnProperty(\"number\"))\n                        if (!$util.isInteger(message.number))\n                            return \"number: integer expected\";\n                    if (message.options != null && message.hasOwnProperty(\"options\")) {\n                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);\n                        if (error)\n                            return \"options.\" + error;\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n                 */\n                EnumValueDescriptorProto.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)\n                        return object;\n                    var message = new $root.google.protobuf.EnumValueDescriptorProto();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.number != null)\n                        message.number = object.number | 0;\n                    if (object.options != null) {\n                        if (typeof object.options !== \"object\")\n                            throw TypeError(\".google.protobuf.EnumValueDescriptorProto.options: object expected\");\n                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @static\n                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                EnumValueDescriptorProto.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.number = 0;\n                        object.options = null;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.number != null && message.hasOwnProperty(\"number\"))\n                        object.number = message.number;\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);\n                    return object;\n                };\n    \n                /**\n                 * Converts this EnumValueDescriptorProto to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.EnumValueDescriptorProto\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return EnumValueDescriptorProto;\n            })();\n    \n            protobuf.ServiceDescriptorProto = (function() {\n    \n                /**\n                 * Properties of a ServiceDescriptorProto.\n                 * @memberof google.protobuf\n                 * @interface IServiceDescriptorProto\n                 * @property {string|null} [name] ServiceDescriptorProto name\n                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method\n                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options\n                 */\n    \n                /**\n                 * Constructs a new ServiceDescriptorProto.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a ServiceDescriptorProto.\n                 * @implements IServiceDescriptorProto\n                 * @constructor\n                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set\n                 */\n                function ServiceDescriptorProto(properties) {\n                    this.method = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * ServiceDescriptorProto name.\n                 * @member {string} name\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @instance\n                 */\n                ServiceDescriptorProto.prototype.name = \"\";\n    \n                /**\n                 * ServiceDescriptorProto method.\n                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @instance\n                 */\n                ServiceDescriptorProto.prototype.method = $util.emptyArray;\n    \n                /**\n                 * ServiceDescriptorProto options.\n                 * @member {google.protobuf.IServiceOptions|null|undefined} options\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @instance\n                 */\n                ServiceDescriptorProto.prototype.options = null;\n    \n                /**\n                 * Creates a new ServiceDescriptorProto instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set\n                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance\n                 */\n                ServiceDescriptorProto.create = function create(properties) {\n                    return new ServiceDescriptorProto(properties);\n                };\n    \n                /**\n                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ServiceDescriptorProto.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.method != null && message.method.length)\n                        for (var i = 0; i < message.method.length; ++i)\n                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ServiceDescriptorProto.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            if (!(message.method && message.method.length))\n                                message.method = [];\n                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));\n                            break;\n                        case 3:\n                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a ServiceDescriptorProto message.\n                 * @function verify\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ServiceDescriptorProto.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.method != null && message.hasOwnProperty(\"method\")) {\n                        if (!Array.isArray(message.method))\n                            return \"method: array expected\";\n                        for (var i = 0; i < message.method.length; ++i) {\n                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);\n                            if (error)\n                                return \"method.\" + error;\n                        }\n                    }\n                    if (message.options != null && message.hasOwnProperty(\"options\")) {\n                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);\n                        if (error)\n                            return \"options.\" + error;\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n                 */\n                ServiceDescriptorProto.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)\n                        return object;\n                    var message = new $root.google.protobuf.ServiceDescriptorProto();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.method) {\n                        if (!Array.isArray(object.method))\n                            throw TypeError(\".google.protobuf.ServiceDescriptorProto.method: array expected\");\n                        message.method = [];\n                        for (var i = 0; i < object.method.length; ++i) {\n                            if (typeof object.method[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.ServiceDescriptorProto.method: object expected\");\n                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);\n                        }\n                    }\n                    if (object.options != null) {\n                        if (typeof object.options !== \"object\")\n                            throw TypeError(\".google.protobuf.ServiceDescriptorProto.options: object expected\");\n                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @static\n                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ServiceDescriptorProto.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.method = [];\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.options = null;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.method && message.method.length) {\n                        object.method = [];\n                        for (var j = 0; j < message.method.length; ++j)\n                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);\n                    }\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);\n                    return object;\n                };\n    \n                /**\n                 * Converts this ServiceDescriptorProto to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.ServiceDescriptorProto\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ServiceDescriptorProto.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return ServiceDescriptorProto;\n            })();\n    \n            protobuf.MethodDescriptorProto = (function() {\n    \n                /**\n                 * Properties of a MethodDescriptorProto.\n                 * @memberof google.protobuf\n                 * @interface IMethodDescriptorProto\n                 * @property {string|null} [name] MethodDescriptorProto name\n                 * @property {string|null} [inputType] MethodDescriptorProto inputType\n                 * @property {string|null} [outputType] MethodDescriptorProto outputType\n                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options\n                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming\n                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming\n                 */\n    \n                /**\n                 * Constructs a new MethodDescriptorProto.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a MethodDescriptorProto.\n                 * @implements IMethodDescriptorProto\n                 * @constructor\n                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set\n                 */\n                function MethodDescriptorProto(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * MethodDescriptorProto name.\n                 * @member {string} name\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @instance\n                 */\n                MethodDescriptorProto.prototype.name = \"\";\n    \n                /**\n                 * MethodDescriptorProto inputType.\n                 * @member {string} inputType\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @instance\n                 */\n                MethodDescriptorProto.prototype.inputType = \"\";\n    \n                /**\n                 * MethodDescriptorProto outputType.\n                 * @member {string} outputType\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @instance\n                 */\n                MethodDescriptorProto.prototype.outputType = \"\";\n    \n                /**\n                 * MethodDescriptorProto options.\n                 * @member {google.protobuf.IMethodOptions|null|undefined} options\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @instance\n                 */\n                MethodDescriptorProto.prototype.options = null;\n    \n                /**\n                 * MethodDescriptorProto clientStreaming.\n                 * @member {boolean} clientStreaming\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @instance\n                 */\n                MethodDescriptorProto.prototype.clientStreaming = false;\n    \n                /**\n                 * MethodDescriptorProto serverStreaming.\n                 * @member {boolean} serverStreaming\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @instance\n                 */\n                MethodDescriptorProto.prototype.serverStreaming = false;\n    \n                /**\n                 * Creates a new MethodDescriptorProto instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set\n                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance\n                 */\n                MethodDescriptorProto.create = function create(properties) {\n                    return new MethodDescriptorProto(properties);\n                };\n    \n                /**\n                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MethodDescriptorProto.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.inputType != null && message.hasOwnProperty(\"inputType\"))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);\n                    if (message.outputType != null && message.hasOwnProperty(\"outputType\"))\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.clientStreaming != null && message.hasOwnProperty(\"clientStreaming\"))\n                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);\n                    if (message.serverStreaming != null && message.hasOwnProperty(\"serverStreaming\"))\n                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @static\n                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MethodDescriptorProto.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            message.inputType = reader.string();\n                            break;\n                        case 3:\n                            message.outputType = reader.string();\n                            break;\n                        case 4:\n                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());\n                            break;\n                        case 5:\n                            message.clientStreaming = reader.bool();\n                            break;\n                        case 6:\n                            message.serverStreaming = reader.bool();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a MethodDescriptorProto message.\n                 * @function verify\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                MethodDescriptorProto.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.inputType != null && message.hasOwnProperty(\"inputType\"))\n                        if (!$util.isString(message.inputType))\n                            return \"inputType: string expected\";\n                    if (message.outputType != null && message.hasOwnProperty(\"outputType\"))\n                        if (!$util.isString(message.outputType))\n                            return \"outputType: string expected\";\n                    if (message.options != null && message.hasOwnProperty(\"options\")) {\n                        var error = $root.google.protobuf.MethodOptions.verify(message.options);\n                        if (error)\n                            return \"options.\" + error;\n                    }\n                    if (message.clientStreaming != null && message.hasOwnProperty(\"clientStreaming\"))\n                        if (typeof message.clientStreaming !== \"boolean\")\n                            return \"clientStreaming: boolean expected\";\n                    if (message.serverStreaming != null && message.hasOwnProperty(\"serverStreaming\"))\n                        if (typeof message.serverStreaming !== \"boolean\")\n                            return \"serverStreaming: boolean expected\";\n                    return null;\n                };\n    \n                /**\n                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n                 */\n                MethodDescriptorProto.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)\n                        return object;\n                    var message = new $root.google.protobuf.MethodDescriptorProto();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.inputType != null)\n                        message.inputType = String(object.inputType);\n                    if (object.outputType != null)\n                        message.outputType = String(object.outputType);\n                    if (object.options != null) {\n                        if (typeof object.options !== \"object\")\n                            throw TypeError(\".google.protobuf.MethodDescriptorProto.options: object expected\");\n                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);\n                    }\n                    if (object.clientStreaming != null)\n                        message.clientStreaming = Boolean(object.clientStreaming);\n                    if (object.serverStreaming != null)\n                        message.serverStreaming = Boolean(object.serverStreaming);\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @static\n                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                MethodDescriptorProto.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.inputType = \"\";\n                        object.outputType = \"\";\n                        object.options = null;\n                        object.clientStreaming = false;\n                        object.serverStreaming = false;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.inputType != null && message.hasOwnProperty(\"inputType\"))\n                        object.inputType = message.inputType;\n                    if (message.outputType != null && message.hasOwnProperty(\"outputType\"))\n                        object.outputType = message.outputType;\n                    if (message.options != null && message.hasOwnProperty(\"options\"))\n                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);\n                    if (message.clientStreaming != null && message.hasOwnProperty(\"clientStreaming\"))\n                        object.clientStreaming = message.clientStreaming;\n                    if (message.serverStreaming != null && message.hasOwnProperty(\"serverStreaming\"))\n                        object.serverStreaming = message.serverStreaming;\n                    return object;\n                };\n    \n                /**\n                 * Converts this MethodDescriptorProto to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.MethodDescriptorProto\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                MethodDescriptorProto.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return MethodDescriptorProto;\n            })();\n    \n            protobuf.FileOptions = (function() {\n    \n                /**\n                 * Properties of a FileOptions.\n                 * @memberof google.protobuf\n                 * @interface IFileOptions\n                 * @property {string|null} [javaPackage] FileOptions javaPackage\n                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname\n                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles\n                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash\n                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8\n                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor\n                 * @property {string|null} [goPackage] FileOptions goPackage\n                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices\n                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices\n                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices\n                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices\n                 * @property {boolean|null} [deprecated] FileOptions deprecated\n                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas\n                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix\n                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace\n                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix\n                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix\n                 * @property {string|null} [phpNamespace] FileOptions phpNamespace\n                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace\n                 * @property {string|null} [rubyPackage] FileOptions rubyPackage\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption\n                 */\n    \n                /**\n                 * Constructs a new FileOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a FileOptions.\n                 * @implements IFileOptions\n                 * @constructor\n                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set\n                 */\n                function FileOptions(properties) {\n                    this.uninterpretedOption = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * FileOptions javaPackage.\n                 * @member {string} javaPackage\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.javaPackage = \"\";\n    \n                /**\n                 * FileOptions javaOuterClassname.\n                 * @member {string} javaOuterClassname\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.javaOuterClassname = \"\";\n    \n                /**\n                 * FileOptions javaMultipleFiles.\n                 * @member {boolean} javaMultipleFiles\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.javaMultipleFiles = false;\n    \n                /**\n                 * FileOptions javaGenerateEqualsAndHash.\n                 * @member {boolean} javaGenerateEqualsAndHash\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.javaGenerateEqualsAndHash = false;\n    \n                /**\n                 * FileOptions javaStringCheckUtf8.\n                 * @member {boolean} javaStringCheckUtf8\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.javaStringCheckUtf8 = false;\n    \n                /**\n                 * FileOptions optimizeFor.\n                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.optimizeFor = 1;\n    \n                /**\n                 * FileOptions goPackage.\n                 * @member {string} goPackage\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.goPackage = \"\";\n    \n                /**\n                 * FileOptions ccGenericServices.\n                 * @member {boolean} ccGenericServices\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.ccGenericServices = false;\n    \n                /**\n                 * FileOptions javaGenericServices.\n                 * @member {boolean} javaGenericServices\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.javaGenericServices = false;\n    \n                /**\n                 * FileOptions pyGenericServices.\n                 * @member {boolean} pyGenericServices\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.pyGenericServices = false;\n    \n                /**\n                 * FileOptions phpGenericServices.\n                 * @member {boolean} phpGenericServices\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.phpGenericServices = false;\n    \n                /**\n                 * FileOptions deprecated.\n                 * @member {boolean} deprecated\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.deprecated = false;\n    \n                /**\n                 * FileOptions ccEnableArenas.\n                 * @member {boolean} ccEnableArenas\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.ccEnableArenas = false;\n    \n                /**\n                 * FileOptions objcClassPrefix.\n                 * @member {string} objcClassPrefix\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.objcClassPrefix = \"\";\n    \n                /**\n                 * FileOptions csharpNamespace.\n                 * @member {string} csharpNamespace\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.csharpNamespace = \"\";\n    \n                /**\n                 * FileOptions swiftPrefix.\n                 * @member {string} swiftPrefix\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.swiftPrefix = \"\";\n    \n                /**\n                 * FileOptions phpClassPrefix.\n                 * @member {string} phpClassPrefix\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.phpClassPrefix = \"\";\n    \n                /**\n                 * FileOptions phpNamespace.\n                 * @member {string} phpNamespace\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.phpNamespace = \"\";\n    \n                /**\n                 * FileOptions phpMetadataNamespace.\n                 * @member {string} phpMetadataNamespace\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.phpMetadataNamespace = \"\";\n    \n                /**\n                 * FileOptions rubyPackage.\n                 * @member {string} rubyPackage\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.rubyPackage = \"\";\n    \n                /**\n                 * FileOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 */\n                FileOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * Creates a new FileOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.FileOptions\n                 * @static\n                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.FileOptions} FileOptions instance\n                 */\n                FileOptions.create = function create(properties) {\n                    return new FileOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.FileOptions\n                 * @static\n                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FileOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.javaPackage != null && message.hasOwnProperty(\"javaPackage\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);\n                    if (message.javaOuterClassname != null && message.hasOwnProperty(\"javaOuterClassname\"))\n                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);\n                    if (message.optimizeFor != null && message.hasOwnProperty(\"optimizeFor\"))\n                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);\n                    if (message.javaMultipleFiles != null && message.hasOwnProperty(\"javaMultipleFiles\"))\n                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);\n                    if (message.goPackage != null && message.hasOwnProperty(\"goPackage\"))\n                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);\n                    if (message.ccGenericServices != null && message.hasOwnProperty(\"ccGenericServices\"))\n                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);\n                    if (message.javaGenericServices != null && message.hasOwnProperty(\"javaGenericServices\"))\n                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);\n                    if (message.pyGenericServices != null && message.hasOwnProperty(\"pyGenericServices\"))\n                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);\n                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty(\"javaGenerateEqualsAndHash\"))\n                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);\n                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty(\"javaStringCheckUtf8\"))\n                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);\n                    if (message.ccEnableArenas != null && message.hasOwnProperty(\"ccEnableArenas\"))\n                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);\n                    if (message.objcClassPrefix != null && message.hasOwnProperty(\"objcClassPrefix\"))\n                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);\n                    if (message.csharpNamespace != null && message.hasOwnProperty(\"csharpNamespace\"))\n                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);\n                    if (message.swiftPrefix != null && message.hasOwnProperty(\"swiftPrefix\"))\n                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);\n                    if (message.phpClassPrefix != null && message.hasOwnProperty(\"phpClassPrefix\"))\n                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);\n                    if (message.phpNamespace != null && message.hasOwnProperty(\"phpNamespace\"))\n                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);\n                    if (message.phpGenericServices != null && message.hasOwnProperty(\"phpGenericServices\"))\n                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);\n                    if (message.phpMetadataNamespace != null && message.hasOwnProperty(\"phpMetadataNamespace\"))\n                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);\n                    if (message.rubyPackage != null && message.hasOwnProperty(\"rubyPackage\"))\n                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.FileOptions\n                 * @static\n                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a FileOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.FileOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.FileOptions} FileOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FileOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.javaPackage = reader.string();\n                            break;\n                        case 8:\n                            message.javaOuterClassname = reader.string();\n                            break;\n                        case 10:\n                            message.javaMultipleFiles = reader.bool();\n                            break;\n                        case 20:\n                            message.javaGenerateEqualsAndHash = reader.bool();\n                            break;\n                        case 27:\n                            message.javaStringCheckUtf8 = reader.bool();\n                            break;\n                        case 9:\n                            message.optimizeFor = reader.int32();\n                            break;\n                        case 11:\n                            message.goPackage = reader.string();\n                            break;\n                        case 16:\n                            message.ccGenericServices = reader.bool();\n                            break;\n                        case 17:\n                            message.javaGenericServices = reader.bool();\n                            break;\n                        case 18:\n                            message.pyGenericServices = reader.bool();\n                            break;\n                        case 42:\n                            message.phpGenericServices = reader.bool();\n                            break;\n                        case 23:\n                            message.deprecated = reader.bool();\n                            break;\n                        case 31:\n                            message.ccEnableArenas = reader.bool();\n                            break;\n                        case 36:\n                            message.objcClassPrefix = reader.string();\n                            break;\n                        case 37:\n                            message.csharpNamespace = reader.string();\n                            break;\n                        case 39:\n                            message.swiftPrefix = reader.string();\n                            break;\n                        case 40:\n                            message.phpClassPrefix = reader.string();\n                            break;\n                        case 41:\n                            message.phpNamespace = reader.string();\n                            break;\n                        case 44:\n                            message.phpMetadataNamespace = reader.string();\n                            break;\n                        case 45:\n                            message.rubyPackage = reader.string();\n                            break;\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.FileOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.FileOptions} FileOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FileOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a FileOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.FileOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                FileOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.javaPackage != null && message.hasOwnProperty(\"javaPackage\"))\n                        if (!$util.isString(message.javaPackage))\n                            return \"javaPackage: string expected\";\n                    if (message.javaOuterClassname != null && message.hasOwnProperty(\"javaOuterClassname\"))\n                        if (!$util.isString(message.javaOuterClassname))\n                            return \"javaOuterClassname: string expected\";\n                    if (message.javaMultipleFiles != null && message.hasOwnProperty(\"javaMultipleFiles\"))\n                        if (typeof message.javaMultipleFiles !== \"boolean\")\n                            return \"javaMultipleFiles: boolean expected\";\n                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty(\"javaGenerateEqualsAndHash\"))\n                        if (typeof message.javaGenerateEqualsAndHash !== \"boolean\")\n                            return \"javaGenerateEqualsAndHash: boolean expected\";\n                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty(\"javaStringCheckUtf8\"))\n                        if (typeof message.javaStringCheckUtf8 !== \"boolean\")\n                            return \"javaStringCheckUtf8: boolean expected\";\n                    if (message.optimizeFor != null && message.hasOwnProperty(\"optimizeFor\"))\n                        switch (message.optimizeFor) {\n                        default:\n                            return \"optimizeFor: enum value expected\";\n                        case 1:\n                        case 2:\n                        case 3:\n                            break;\n                        }\n                    if (message.goPackage != null && message.hasOwnProperty(\"goPackage\"))\n                        if (!$util.isString(message.goPackage))\n                            return \"goPackage: string expected\";\n                    if (message.ccGenericServices != null && message.hasOwnProperty(\"ccGenericServices\"))\n                        if (typeof message.ccGenericServices !== \"boolean\")\n                            return \"ccGenericServices: boolean expected\";\n                    if (message.javaGenericServices != null && message.hasOwnProperty(\"javaGenericServices\"))\n                        if (typeof message.javaGenericServices !== \"boolean\")\n                            return \"javaGenericServices: boolean expected\";\n                    if (message.pyGenericServices != null && message.hasOwnProperty(\"pyGenericServices\"))\n                        if (typeof message.pyGenericServices !== \"boolean\")\n                            return \"pyGenericServices: boolean expected\";\n                    if (message.phpGenericServices != null && message.hasOwnProperty(\"phpGenericServices\"))\n                        if (typeof message.phpGenericServices !== \"boolean\")\n                            return \"phpGenericServices: boolean expected\";\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        if (typeof message.deprecated !== \"boolean\")\n                            return \"deprecated: boolean expected\";\n                    if (message.ccEnableArenas != null && message.hasOwnProperty(\"ccEnableArenas\"))\n                        if (typeof message.ccEnableArenas !== \"boolean\")\n                            return \"ccEnableArenas: boolean expected\";\n                    if (message.objcClassPrefix != null && message.hasOwnProperty(\"objcClassPrefix\"))\n                        if (!$util.isString(message.objcClassPrefix))\n                            return \"objcClassPrefix: string expected\";\n                    if (message.csharpNamespace != null && message.hasOwnProperty(\"csharpNamespace\"))\n                        if (!$util.isString(message.csharpNamespace))\n                            return \"csharpNamespace: string expected\";\n                    if (message.swiftPrefix != null && message.hasOwnProperty(\"swiftPrefix\"))\n                        if (!$util.isString(message.swiftPrefix))\n                            return \"swiftPrefix: string expected\";\n                    if (message.phpClassPrefix != null && message.hasOwnProperty(\"phpClassPrefix\"))\n                        if (!$util.isString(message.phpClassPrefix))\n                            return \"phpClassPrefix: string expected\";\n                    if (message.phpNamespace != null && message.hasOwnProperty(\"phpNamespace\"))\n                        if (!$util.isString(message.phpNamespace))\n                            return \"phpNamespace: string expected\";\n                    if (message.phpMetadataNamespace != null && message.hasOwnProperty(\"phpMetadataNamespace\"))\n                        if (!$util.isString(message.phpMetadataNamespace))\n                            return \"phpMetadataNamespace: string expected\";\n                    if (message.rubyPackage != null && message.hasOwnProperty(\"rubyPackage\"))\n                        if (!$util.isString(message.rubyPackage))\n                            return \"rubyPackage: string expected\";\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.FileOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.FileOptions} FileOptions\n                 */\n                FileOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.FileOptions)\n                        return object;\n                    var message = new $root.google.protobuf.FileOptions();\n                    if (object.javaPackage != null)\n                        message.javaPackage = String(object.javaPackage);\n                    if (object.javaOuterClassname != null)\n                        message.javaOuterClassname = String(object.javaOuterClassname);\n                    if (object.javaMultipleFiles != null)\n                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);\n                    if (object.javaGenerateEqualsAndHash != null)\n                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);\n                    if (object.javaStringCheckUtf8 != null)\n                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);\n                    switch (object.optimizeFor) {\n                    case \"SPEED\":\n                    case 1:\n                        message.optimizeFor = 1;\n                        break;\n                    case \"CODE_SIZE\":\n                    case 2:\n                        message.optimizeFor = 2;\n                        break;\n                    case \"LITE_RUNTIME\":\n                    case 3:\n                        message.optimizeFor = 3;\n                        break;\n                    }\n                    if (object.goPackage != null)\n                        message.goPackage = String(object.goPackage);\n                    if (object.ccGenericServices != null)\n                        message.ccGenericServices = Boolean(object.ccGenericServices);\n                    if (object.javaGenericServices != null)\n                        message.javaGenericServices = Boolean(object.javaGenericServices);\n                    if (object.pyGenericServices != null)\n                        message.pyGenericServices = Boolean(object.pyGenericServices);\n                    if (object.phpGenericServices != null)\n                        message.phpGenericServices = Boolean(object.phpGenericServices);\n                    if (object.deprecated != null)\n                        message.deprecated = Boolean(object.deprecated);\n                    if (object.ccEnableArenas != null)\n                        message.ccEnableArenas = Boolean(object.ccEnableArenas);\n                    if (object.objcClassPrefix != null)\n                        message.objcClassPrefix = String(object.objcClassPrefix);\n                    if (object.csharpNamespace != null)\n                        message.csharpNamespace = String(object.csharpNamespace);\n                    if (object.swiftPrefix != null)\n                        message.swiftPrefix = String(object.swiftPrefix);\n                    if (object.phpClassPrefix != null)\n                        message.phpClassPrefix = String(object.phpClassPrefix);\n                    if (object.phpNamespace != null)\n                        message.phpNamespace = String(object.phpNamespace);\n                    if (object.phpMetadataNamespace != null)\n                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);\n                    if (object.rubyPackage != null)\n                        message.rubyPackage = String(object.rubyPackage);\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.FileOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.FileOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.FileOptions\n                 * @static\n                 * @param {google.protobuf.FileOptions} message FileOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                FileOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.uninterpretedOption = [];\n                    if (options.defaults) {\n                        object.javaPackage = \"\";\n                        object.javaOuterClassname = \"\";\n                        object.optimizeFor = options.enums === String ? \"SPEED\" : 1;\n                        object.javaMultipleFiles = false;\n                        object.goPackage = \"\";\n                        object.ccGenericServices = false;\n                        object.javaGenericServices = false;\n                        object.pyGenericServices = false;\n                        object.javaGenerateEqualsAndHash = false;\n                        object.deprecated = false;\n                        object.javaStringCheckUtf8 = false;\n                        object.ccEnableArenas = false;\n                        object.objcClassPrefix = \"\";\n                        object.csharpNamespace = \"\";\n                        object.swiftPrefix = \"\";\n                        object.phpClassPrefix = \"\";\n                        object.phpNamespace = \"\";\n                        object.phpGenericServices = false;\n                        object.phpMetadataNamespace = \"\";\n                        object.rubyPackage = \"\";\n                    }\n                    if (message.javaPackage != null && message.hasOwnProperty(\"javaPackage\"))\n                        object.javaPackage = message.javaPackage;\n                    if (message.javaOuterClassname != null && message.hasOwnProperty(\"javaOuterClassname\"))\n                        object.javaOuterClassname = message.javaOuterClassname;\n                    if (message.optimizeFor != null && message.hasOwnProperty(\"optimizeFor\"))\n                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;\n                    if (message.javaMultipleFiles != null && message.hasOwnProperty(\"javaMultipleFiles\"))\n                        object.javaMultipleFiles = message.javaMultipleFiles;\n                    if (message.goPackage != null && message.hasOwnProperty(\"goPackage\"))\n                        object.goPackage = message.goPackage;\n                    if (message.ccGenericServices != null && message.hasOwnProperty(\"ccGenericServices\"))\n                        object.ccGenericServices = message.ccGenericServices;\n                    if (message.javaGenericServices != null && message.hasOwnProperty(\"javaGenericServices\"))\n                        object.javaGenericServices = message.javaGenericServices;\n                    if (message.pyGenericServices != null && message.hasOwnProperty(\"pyGenericServices\"))\n                        object.pyGenericServices = message.pyGenericServices;\n                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty(\"javaGenerateEqualsAndHash\"))\n                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        object.deprecated = message.deprecated;\n                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty(\"javaStringCheckUtf8\"))\n                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;\n                    if (message.ccEnableArenas != null && message.hasOwnProperty(\"ccEnableArenas\"))\n                        object.ccEnableArenas = message.ccEnableArenas;\n                    if (message.objcClassPrefix != null && message.hasOwnProperty(\"objcClassPrefix\"))\n                        object.objcClassPrefix = message.objcClassPrefix;\n                    if (message.csharpNamespace != null && message.hasOwnProperty(\"csharpNamespace\"))\n                        object.csharpNamespace = message.csharpNamespace;\n                    if (message.swiftPrefix != null && message.hasOwnProperty(\"swiftPrefix\"))\n                        object.swiftPrefix = message.swiftPrefix;\n                    if (message.phpClassPrefix != null && message.hasOwnProperty(\"phpClassPrefix\"))\n                        object.phpClassPrefix = message.phpClassPrefix;\n                    if (message.phpNamespace != null && message.hasOwnProperty(\"phpNamespace\"))\n                        object.phpNamespace = message.phpNamespace;\n                    if (message.phpGenericServices != null && message.hasOwnProperty(\"phpGenericServices\"))\n                        object.phpGenericServices = message.phpGenericServices;\n                    if (message.phpMetadataNamespace != null && message.hasOwnProperty(\"phpMetadataNamespace\"))\n                        object.phpMetadataNamespace = message.phpMetadataNamespace;\n                    if (message.rubyPackage != null && message.hasOwnProperty(\"rubyPackage\"))\n                        object.rubyPackage = message.rubyPackage;\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this FileOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.FileOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                FileOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                /**\n                 * OptimizeMode enum.\n                 * @name google.protobuf.FileOptions.OptimizeMode\n                 * @enum {string}\n                 * @property {number} SPEED=1 SPEED value\n                 * @property {number} CODE_SIZE=2 CODE_SIZE value\n                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value\n                 */\n                FileOptions.OptimizeMode = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[1] = \"SPEED\"] = 1;\n                    values[valuesById[2] = \"CODE_SIZE\"] = 2;\n                    values[valuesById[3] = \"LITE_RUNTIME\"] = 3;\n                    return values;\n                })();\n    \n                return FileOptions;\n            })();\n    \n            protobuf.MessageOptions = (function() {\n    \n                /**\n                 * Properties of a MessageOptions.\n                 * @memberof google.protobuf\n                 * @interface IMessageOptions\n                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat\n                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor\n                 * @property {boolean|null} [deprecated] MessageOptions deprecated\n                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption\n                 */\n    \n                /**\n                 * Constructs a new MessageOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a MessageOptions.\n                 * @implements IMessageOptions\n                 * @constructor\n                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set\n                 */\n                function MessageOptions(properties) {\n                    this.uninterpretedOption = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * MessageOptions messageSetWireFormat.\n                 * @member {boolean} messageSetWireFormat\n                 * @memberof google.protobuf.MessageOptions\n                 * @instance\n                 */\n                MessageOptions.prototype.messageSetWireFormat = false;\n    \n                /**\n                 * MessageOptions noStandardDescriptorAccessor.\n                 * @member {boolean} noStandardDescriptorAccessor\n                 * @memberof google.protobuf.MessageOptions\n                 * @instance\n                 */\n                MessageOptions.prototype.noStandardDescriptorAccessor = false;\n    \n                /**\n                 * MessageOptions deprecated.\n                 * @member {boolean} deprecated\n                 * @memberof google.protobuf.MessageOptions\n                 * @instance\n                 */\n                MessageOptions.prototype.deprecated = false;\n    \n                /**\n                 * MessageOptions mapEntry.\n                 * @member {boolean} mapEntry\n                 * @memberof google.protobuf.MessageOptions\n                 * @instance\n                 */\n                MessageOptions.prototype.mapEntry = false;\n    \n                /**\n                 * MessageOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.MessageOptions\n                 * @instance\n                 */\n                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * Creates a new MessageOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.MessageOptions\n                 * @static\n                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.MessageOptions} MessageOptions instance\n                 */\n                MessageOptions.create = function create(properties) {\n                    return new MessageOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.MessageOptions\n                 * @static\n                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MessageOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.messageSetWireFormat != null && message.hasOwnProperty(\"messageSetWireFormat\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);\n                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty(\"noStandardDescriptorAccessor\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);\n                    if (message.mapEntry != null && message.hasOwnProperty(\"mapEntry\"))\n                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.MessageOptions\n                 * @static\n                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a MessageOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.MessageOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.MessageOptions} MessageOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MessageOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.messageSetWireFormat = reader.bool();\n                            break;\n                        case 2:\n                            message.noStandardDescriptorAccessor = reader.bool();\n                            break;\n                        case 3:\n                            message.deprecated = reader.bool();\n                            break;\n                        case 7:\n                            message.mapEntry = reader.bool();\n                            break;\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.MessageOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.MessageOptions} MessageOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MessageOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a MessageOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.MessageOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                MessageOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.messageSetWireFormat != null && message.hasOwnProperty(\"messageSetWireFormat\"))\n                        if (typeof message.messageSetWireFormat !== \"boolean\")\n                            return \"messageSetWireFormat: boolean expected\";\n                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty(\"noStandardDescriptorAccessor\"))\n                        if (typeof message.noStandardDescriptorAccessor !== \"boolean\")\n                            return \"noStandardDescriptorAccessor: boolean expected\";\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        if (typeof message.deprecated !== \"boolean\")\n                            return \"deprecated: boolean expected\";\n                    if (message.mapEntry != null && message.hasOwnProperty(\"mapEntry\"))\n                        if (typeof message.mapEntry !== \"boolean\")\n                            return \"mapEntry: boolean expected\";\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.MessageOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.MessageOptions} MessageOptions\n                 */\n                MessageOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.MessageOptions)\n                        return object;\n                    var message = new $root.google.protobuf.MessageOptions();\n                    if (object.messageSetWireFormat != null)\n                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);\n                    if (object.noStandardDescriptorAccessor != null)\n                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);\n                    if (object.deprecated != null)\n                        message.deprecated = Boolean(object.deprecated);\n                    if (object.mapEntry != null)\n                        message.mapEntry = Boolean(object.mapEntry);\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.MessageOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.MessageOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.MessageOptions\n                 * @static\n                 * @param {google.protobuf.MessageOptions} message MessageOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                MessageOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.uninterpretedOption = [];\n                    if (options.defaults) {\n                        object.messageSetWireFormat = false;\n                        object.noStandardDescriptorAccessor = false;\n                        object.deprecated = false;\n                        object.mapEntry = false;\n                    }\n                    if (message.messageSetWireFormat != null && message.hasOwnProperty(\"messageSetWireFormat\"))\n                        object.messageSetWireFormat = message.messageSetWireFormat;\n                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty(\"noStandardDescriptorAccessor\"))\n                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        object.deprecated = message.deprecated;\n                    if (message.mapEntry != null && message.hasOwnProperty(\"mapEntry\"))\n                        object.mapEntry = message.mapEntry;\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this MessageOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.MessageOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                MessageOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return MessageOptions;\n            })();\n    \n            protobuf.FieldOptions = (function() {\n    \n                /**\n                 * Properties of a FieldOptions.\n                 * @memberof google.protobuf\n                 * @interface IFieldOptions\n                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype\n                 * @property {boolean|null} [packed] FieldOptions packed\n                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype\n                 * @property {boolean|null} [lazy] FieldOptions lazy\n                 * @property {boolean|null} [deprecated] FieldOptions deprecated\n                 * @property {boolean|null} [weak] FieldOptions weak\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption\n                 * @property {Array.<google.api.FieldBehavior>|null} [\".google.api.fieldBehavior\"] FieldOptions .google.api.fieldBehavior\n                 */\n    \n                /**\n                 * Constructs a new FieldOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a FieldOptions.\n                 * @implements IFieldOptions\n                 * @constructor\n                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set\n                 */\n                function FieldOptions(properties) {\n                    this.uninterpretedOption = [];\n                    this[\".google.api.fieldBehavior\"] = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * FieldOptions ctype.\n                 * @member {google.protobuf.FieldOptions.CType} ctype\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 */\n                FieldOptions.prototype.ctype = 0;\n    \n                /**\n                 * FieldOptions packed.\n                 * @member {boolean} packed\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 */\n                FieldOptions.prototype.packed = false;\n    \n                /**\n                 * FieldOptions jstype.\n                 * @member {google.protobuf.FieldOptions.JSType} jstype\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 */\n                FieldOptions.prototype.jstype = 0;\n    \n                /**\n                 * FieldOptions lazy.\n                 * @member {boolean} lazy\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 */\n                FieldOptions.prototype.lazy = false;\n    \n                /**\n                 * FieldOptions deprecated.\n                 * @member {boolean} deprecated\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 */\n                FieldOptions.prototype.deprecated = false;\n    \n                /**\n                 * FieldOptions weak.\n                 * @member {boolean} weak\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 */\n                FieldOptions.prototype.weak = false;\n    \n                /**\n                 * FieldOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 */\n                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * FieldOptions .google.api.fieldBehavior.\n                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 */\n                FieldOptions.prototype[\".google.api.fieldBehavior\"] = $util.emptyArray;\n    \n                /**\n                 * Creates a new FieldOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.FieldOptions\n                 * @static\n                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.FieldOptions} FieldOptions instance\n                 */\n                FieldOptions.create = function create(properties) {\n                    return new FieldOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.FieldOptions\n                 * @static\n                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FieldOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.ctype != null && message.hasOwnProperty(\"ctype\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);\n                    if (message.packed != null && message.hasOwnProperty(\"packed\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);\n                    if (message.lazy != null && message.hasOwnProperty(\"lazy\"))\n                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);\n                    if (message.jstype != null && message.hasOwnProperty(\"jstype\"))\n                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);\n                    if (message.weak != null && message.hasOwnProperty(\"weak\"))\n                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    if (message[\".google.api.fieldBehavior\"] != null && message[\".google.api.fieldBehavior\"].length) {\n                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();\n                        for (var i = 0; i < message[\".google.api.fieldBehavior\"].length; ++i)\n                            writer.int32(message[\".google.api.fieldBehavior\"][i]);\n                        writer.ldelim();\n                    }\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.FieldOptions\n                 * @static\n                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a FieldOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.FieldOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.FieldOptions} FieldOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FieldOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.ctype = reader.int32();\n                            break;\n                        case 2:\n                            message.packed = reader.bool();\n                            break;\n                        case 6:\n                            message.jstype = reader.int32();\n                            break;\n                        case 5:\n                            message.lazy = reader.bool();\n                            break;\n                        case 3:\n                            message.deprecated = reader.bool();\n                            break;\n                        case 10:\n                            message.weak = reader.bool();\n                            break;\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        case 1052:\n                            if (!(message[\".google.api.fieldBehavior\"] && message[\".google.api.fieldBehavior\"].length))\n                                message[\".google.api.fieldBehavior\"] = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message[\".google.api.fieldBehavior\"].push(reader.int32());\n                            } else\n                                message[\".google.api.fieldBehavior\"].push(reader.int32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.FieldOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.FieldOptions} FieldOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                FieldOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a FieldOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.FieldOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                FieldOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.ctype != null && message.hasOwnProperty(\"ctype\"))\n                        switch (message.ctype) {\n                        default:\n                            return \"ctype: enum value expected\";\n                        case 0:\n                        case 1:\n                        case 2:\n                            break;\n                        }\n                    if (message.packed != null && message.hasOwnProperty(\"packed\"))\n                        if (typeof message.packed !== \"boolean\")\n                            return \"packed: boolean expected\";\n                    if (message.jstype != null && message.hasOwnProperty(\"jstype\"))\n                        switch (message.jstype) {\n                        default:\n                            return \"jstype: enum value expected\";\n                        case 0:\n                        case 1:\n                        case 2:\n                            break;\n                        }\n                    if (message.lazy != null && message.hasOwnProperty(\"lazy\"))\n                        if (typeof message.lazy !== \"boolean\")\n                            return \"lazy: boolean expected\";\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        if (typeof message.deprecated !== \"boolean\")\n                            return \"deprecated: boolean expected\";\n                    if (message.weak != null && message.hasOwnProperty(\"weak\"))\n                        if (typeof message.weak !== \"boolean\")\n                            return \"weak: boolean expected\";\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    if (message[\".google.api.fieldBehavior\"] != null && message.hasOwnProperty(\".google.api.fieldBehavior\")) {\n                        if (!Array.isArray(message[\".google.api.fieldBehavior\"]))\n                            return \".google.api.fieldBehavior: array expected\";\n                        for (var i = 0; i < message[\".google.api.fieldBehavior\"].length; ++i)\n                            switch (message[\".google.api.fieldBehavior\"][i]) {\n                            default:\n                                return \".google.api.fieldBehavior: enum value[] expected\";\n                            case 0:\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                                break;\n                            }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.FieldOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.FieldOptions} FieldOptions\n                 */\n                FieldOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.FieldOptions)\n                        return object;\n                    var message = new $root.google.protobuf.FieldOptions();\n                    switch (object.ctype) {\n                    case \"STRING\":\n                    case 0:\n                        message.ctype = 0;\n                        break;\n                    case \"CORD\":\n                    case 1:\n                        message.ctype = 1;\n                        break;\n                    case \"STRING_PIECE\":\n                    case 2:\n                        message.ctype = 2;\n                        break;\n                    }\n                    if (object.packed != null)\n                        message.packed = Boolean(object.packed);\n                    switch (object.jstype) {\n                    case \"JS_NORMAL\":\n                    case 0:\n                        message.jstype = 0;\n                        break;\n                    case \"JS_STRING\":\n                    case 1:\n                        message.jstype = 1;\n                        break;\n                    case \"JS_NUMBER\":\n                    case 2:\n                        message.jstype = 2;\n                        break;\n                    }\n                    if (object.lazy != null)\n                        message.lazy = Boolean(object.lazy);\n                    if (object.deprecated != null)\n                        message.deprecated = Boolean(object.deprecated);\n                    if (object.weak != null)\n                        message.weak = Boolean(object.weak);\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.FieldOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.FieldOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    if (object[\".google.api.fieldBehavior\"]) {\n                        if (!Array.isArray(object[\".google.api.fieldBehavior\"]))\n                            throw TypeError(\".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected\");\n                        message[\".google.api.fieldBehavior\"] = [];\n                        for (var i = 0; i < object[\".google.api.fieldBehavior\"].length; ++i)\n                            switch (object[\".google.api.fieldBehavior\"][i]) {\n                            default:\n                            case \"FIELD_BEHAVIOR_UNSPECIFIED\":\n                            case 0:\n                                message[\".google.api.fieldBehavior\"][i] = 0;\n                                break;\n                            case \"OPTIONAL\":\n                            case 1:\n                                message[\".google.api.fieldBehavior\"][i] = 1;\n                                break;\n                            case \"REQUIRED\":\n                            case 2:\n                                message[\".google.api.fieldBehavior\"][i] = 2;\n                                break;\n                            case \"OUTPUT_ONLY\":\n                            case 3:\n                                message[\".google.api.fieldBehavior\"][i] = 3;\n                                break;\n                            case \"INPUT_ONLY\":\n                            case 4:\n                                message[\".google.api.fieldBehavior\"][i] = 4;\n                                break;\n                            case \"IMMUTABLE\":\n                            case 5:\n                                message[\".google.api.fieldBehavior\"][i] = 5;\n                                break;\n                            }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.FieldOptions\n                 * @static\n                 * @param {google.protobuf.FieldOptions} message FieldOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                FieldOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.uninterpretedOption = [];\n                        object[\".google.api.fieldBehavior\"] = [];\n                    }\n                    if (options.defaults) {\n                        object.ctype = options.enums === String ? \"STRING\" : 0;\n                        object.packed = false;\n                        object.deprecated = false;\n                        object.lazy = false;\n                        object.jstype = options.enums === String ? \"JS_NORMAL\" : 0;\n                        object.weak = false;\n                    }\n                    if (message.ctype != null && message.hasOwnProperty(\"ctype\"))\n                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;\n                    if (message.packed != null && message.hasOwnProperty(\"packed\"))\n                        object.packed = message.packed;\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        object.deprecated = message.deprecated;\n                    if (message.lazy != null && message.hasOwnProperty(\"lazy\"))\n                        object.lazy = message.lazy;\n                    if (message.jstype != null && message.hasOwnProperty(\"jstype\"))\n                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;\n                    if (message.weak != null && message.hasOwnProperty(\"weak\"))\n                        object.weak = message.weak;\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    if (message[\".google.api.fieldBehavior\"] && message[\".google.api.fieldBehavior\"].length) {\n                        object[\".google.api.fieldBehavior\"] = [];\n                        for (var j = 0; j < message[\".google.api.fieldBehavior\"].length; ++j)\n                            object[\".google.api.fieldBehavior\"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[\".google.api.fieldBehavior\"][j]] : message[\".google.api.fieldBehavior\"][j];\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this FieldOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.FieldOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                FieldOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                /**\n                 * CType enum.\n                 * @name google.protobuf.FieldOptions.CType\n                 * @enum {string}\n                 * @property {number} STRING=0 STRING value\n                 * @property {number} CORD=1 CORD value\n                 * @property {number} STRING_PIECE=2 STRING_PIECE value\n                 */\n                FieldOptions.CType = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"STRING\"] = 0;\n                    values[valuesById[1] = \"CORD\"] = 1;\n                    values[valuesById[2] = \"STRING_PIECE\"] = 2;\n                    return values;\n                })();\n    \n                /**\n                 * JSType enum.\n                 * @name google.protobuf.FieldOptions.JSType\n                 * @enum {string}\n                 * @property {number} JS_NORMAL=0 JS_NORMAL value\n                 * @property {number} JS_STRING=1 JS_STRING value\n                 * @property {number} JS_NUMBER=2 JS_NUMBER value\n                 */\n                FieldOptions.JSType = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"JS_NORMAL\"] = 0;\n                    values[valuesById[1] = \"JS_STRING\"] = 1;\n                    values[valuesById[2] = \"JS_NUMBER\"] = 2;\n                    return values;\n                })();\n    \n                return FieldOptions;\n            })();\n    \n            protobuf.OneofOptions = (function() {\n    \n                /**\n                 * Properties of an OneofOptions.\n                 * @memberof google.protobuf\n                 * @interface IOneofOptions\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption\n                 */\n    \n                /**\n                 * Constructs a new OneofOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents an OneofOptions.\n                 * @implements IOneofOptions\n                 * @constructor\n                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set\n                 */\n                function OneofOptions(properties) {\n                    this.uninterpretedOption = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * OneofOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.OneofOptions\n                 * @instance\n                 */\n                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * Creates a new OneofOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.OneofOptions\n                 * @static\n                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.OneofOptions} OneofOptions instance\n                 */\n                OneofOptions.create = function create(properties) {\n                    return new OneofOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.OneofOptions\n                 * @static\n                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                OneofOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.OneofOptions\n                 * @static\n                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes an OneofOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.OneofOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.OneofOptions} OneofOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                OneofOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.OneofOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.OneofOptions} OneofOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                OneofOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies an OneofOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.OneofOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                OneofOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.OneofOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.OneofOptions} OneofOptions\n                 */\n                OneofOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.OneofOptions)\n                        return object;\n                    var message = new $root.google.protobuf.OneofOptions();\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.OneofOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.OneofOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.OneofOptions\n                 * @static\n                 * @param {google.protobuf.OneofOptions} message OneofOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                OneofOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.uninterpretedOption = [];\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this OneofOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.OneofOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                OneofOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return OneofOptions;\n            })();\n    \n            protobuf.EnumOptions = (function() {\n    \n                /**\n                 * Properties of an EnumOptions.\n                 * @memberof google.protobuf\n                 * @interface IEnumOptions\n                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias\n                 * @property {boolean|null} [deprecated] EnumOptions deprecated\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption\n                 */\n    \n                /**\n                 * Constructs a new EnumOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents an EnumOptions.\n                 * @implements IEnumOptions\n                 * @constructor\n                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set\n                 */\n                function EnumOptions(properties) {\n                    this.uninterpretedOption = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * EnumOptions allowAlias.\n                 * @member {boolean} allowAlias\n                 * @memberof google.protobuf.EnumOptions\n                 * @instance\n                 */\n                EnumOptions.prototype.allowAlias = false;\n    \n                /**\n                 * EnumOptions deprecated.\n                 * @member {boolean} deprecated\n                 * @memberof google.protobuf.EnumOptions\n                 * @instance\n                 */\n                EnumOptions.prototype.deprecated = false;\n    \n                /**\n                 * EnumOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.EnumOptions\n                 * @instance\n                 */\n                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * Creates a new EnumOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.EnumOptions\n                 * @static\n                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.EnumOptions} EnumOptions instance\n                 */\n                EnumOptions.create = function create(properties) {\n                    return new EnumOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.EnumOptions\n                 * @static\n                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                EnumOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.allowAlias != null && message.hasOwnProperty(\"allowAlias\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.EnumOptions\n                 * @static\n                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes an EnumOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.EnumOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.EnumOptions} EnumOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                EnumOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 2:\n                            message.allowAlias = reader.bool();\n                            break;\n                        case 3:\n                            message.deprecated = reader.bool();\n                            break;\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.EnumOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.EnumOptions} EnumOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                EnumOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies an EnumOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.EnumOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                EnumOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.allowAlias != null && message.hasOwnProperty(\"allowAlias\"))\n                        if (typeof message.allowAlias !== \"boolean\")\n                            return \"allowAlias: boolean expected\";\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        if (typeof message.deprecated !== \"boolean\")\n                            return \"deprecated: boolean expected\";\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.EnumOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.EnumOptions} EnumOptions\n                 */\n                EnumOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.EnumOptions)\n                        return object;\n                    var message = new $root.google.protobuf.EnumOptions();\n                    if (object.allowAlias != null)\n                        message.allowAlias = Boolean(object.allowAlias);\n                    if (object.deprecated != null)\n                        message.deprecated = Boolean(object.deprecated);\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.EnumOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.EnumOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.EnumOptions\n                 * @static\n                 * @param {google.protobuf.EnumOptions} message EnumOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                EnumOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.uninterpretedOption = [];\n                    if (options.defaults) {\n                        object.allowAlias = false;\n                        object.deprecated = false;\n                    }\n                    if (message.allowAlias != null && message.hasOwnProperty(\"allowAlias\"))\n                        object.allowAlias = message.allowAlias;\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        object.deprecated = message.deprecated;\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this EnumOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.EnumOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                EnumOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return EnumOptions;\n            })();\n    \n            protobuf.EnumValueOptions = (function() {\n    \n                /**\n                 * Properties of an EnumValueOptions.\n                 * @memberof google.protobuf\n                 * @interface IEnumValueOptions\n                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption\n                 */\n    \n                /**\n                 * Constructs a new EnumValueOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents an EnumValueOptions.\n                 * @implements IEnumValueOptions\n                 * @constructor\n                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set\n                 */\n                function EnumValueOptions(properties) {\n                    this.uninterpretedOption = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * EnumValueOptions deprecated.\n                 * @member {boolean} deprecated\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @instance\n                 */\n                EnumValueOptions.prototype.deprecated = false;\n    \n                /**\n                 * EnumValueOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @instance\n                 */\n                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * Creates a new EnumValueOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @static\n                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance\n                 */\n                EnumValueOptions.create = function create(properties) {\n                    return new EnumValueOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @static\n                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                EnumValueOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @static\n                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes an EnumValueOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                EnumValueOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.deprecated = reader.bool();\n                            break;\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies an EnumValueOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                EnumValueOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        if (typeof message.deprecated !== \"boolean\")\n                            return \"deprecated: boolean expected\";\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n                 */\n                EnumValueOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.EnumValueOptions)\n                        return object;\n                    var message = new $root.google.protobuf.EnumValueOptions();\n                    if (object.deprecated != null)\n                        message.deprecated = Boolean(object.deprecated);\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.EnumValueOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.EnumValueOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @static\n                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                EnumValueOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.uninterpretedOption = [];\n                    if (options.defaults)\n                        object.deprecated = false;\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        object.deprecated = message.deprecated;\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this EnumValueOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.EnumValueOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                EnumValueOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return EnumValueOptions;\n            })();\n    \n            protobuf.ServiceOptions = (function() {\n    \n                /**\n                 * Properties of a ServiceOptions.\n                 * @memberof google.protobuf\n                 * @interface IServiceOptions\n                 * @property {boolean|null} [deprecated] ServiceOptions deprecated\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption\n                 * @property {string|null} [\".google.api.defaultHost\"] ServiceOptions .google.api.defaultHost\n                 * @property {string|null} [\".google.api.oauthScopes\"] ServiceOptions .google.api.oauthScopes\n                 */\n    \n                /**\n                 * Constructs a new ServiceOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a ServiceOptions.\n                 * @implements IServiceOptions\n                 * @constructor\n                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set\n                 */\n                function ServiceOptions(properties) {\n                    this.uninterpretedOption = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * ServiceOptions deprecated.\n                 * @member {boolean} deprecated\n                 * @memberof google.protobuf.ServiceOptions\n                 * @instance\n                 */\n                ServiceOptions.prototype.deprecated = false;\n    \n                /**\n                 * ServiceOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.ServiceOptions\n                 * @instance\n                 */\n                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * ServiceOptions .google.api.defaultHost.\n                 * @member {string} .google.api.defaultHost\n                 * @memberof google.protobuf.ServiceOptions\n                 * @instance\n                 */\n                ServiceOptions.prototype[\".google.api.defaultHost\"] = \"\";\n    \n                /**\n                 * ServiceOptions .google.api.oauthScopes.\n                 * @member {string} .google.api.oauthScopes\n                 * @memberof google.protobuf.ServiceOptions\n                 * @instance\n                 */\n                ServiceOptions.prototype[\".google.api.oauthScopes\"] = \"\";\n    \n                /**\n                 * Creates a new ServiceOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.ServiceOptions\n                 * @static\n                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance\n                 */\n                ServiceOptions.create = function create(properties) {\n                    return new ServiceOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.ServiceOptions\n                 * @static\n                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ServiceOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    if (message[\".google.api.defaultHost\"] != null && message.hasOwnProperty(\".google.api.defaultHost\"))\n                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[\".google.api.defaultHost\"]);\n                    if (message[\".google.api.oauthScopes\"] != null && message.hasOwnProperty(\".google.api.oauthScopes\"))\n                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[\".google.api.oauthScopes\"]);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.ServiceOptions\n                 * @static\n                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a ServiceOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.ServiceOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.ServiceOptions} ServiceOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ServiceOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 33:\n                            message.deprecated = reader.bool();\n                            break;\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        case 1049:\n                            message[\".google.api.defaultHost\"] = reader.string();\n                            break;\n                        case 1050:\n                            message[\".google.api.oauthScopes\"] = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.ServiceOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.ServiceOptions} ServiceOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a ServiceOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.ServiceOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ServiceOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        if (typeof message.deprecated !== \"boolean\")\n                            return \"deprecated: boolean expected\";\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    if (message[\".google.api.defaultHost\"] != null && message.hasOwnProperty(\".google.api.defaultHost\"))\n                        if (!$util.isString(message[\".google.api.defaultHost\"]))\n                            return \".google.api.defaultHost: string expected\";\n                    if (message[\".google.api.oauthScopes\"] != null && message.hasOwnProperty(\".google.api.oauthScopes\"))\n                        if (!$util.isString(message[\".google.api.oauthScopes\"]))\n                            return \".google.api.oauthScopes: string expected\";\n                    return null;\n                };\n    \n                /**\n                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.ServiceOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.ServiceOptions} ServiceOptions\n                 */\n                ServiceOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.ServiceOptions)\n                        return object;\n                    var message = new $root.google.protobuf.ServiceOptions();\n                    if (object.deprecated != null)\n                        message.deprecated = Boolean(object.deprecated);\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.ServiceOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.ServiceOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    if (object[\".google.api.defaultHost\"] != null)\n                        message[\".google.api.defaultHost\"] = String(object[\".google.api.defaultHost\"]);\n                    if (object[\".google.api.oauthScopes\"] != null)\n                        message[\".google.api.oauthScopes\"] = String(object[\".google.api.oauthScopes\"]);\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.ServiceOptions\n                 * @static\n                 * @param {google.protobuf.ServiceOptions} message ServiceOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ServiceOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.uninterpretedOption = [];\n                    if (options.defaults) {\n                        object.deprecated = false;\n                        object[\".google.api.defaultHost\"] = \"\";\n                        object[\".google.api.oauthScopes\"] = \"\";\n                    }\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        object.deprecated = message.deprecated;\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    if (message[\".google.api.defaultHost\"] != null && message.hasOwnProperty(\".google.api.defaultHost\"))\n                        object[\".google.api.defaultHost\"] = message[\".google.api.defaultHost\"];\n                    if (message[\".google.api.oauthScopes\"] != null && message.hasOwnProperty(\".google.api.oauthScopes\"))\n                        object[\".google.api.oauthScopes\"] = message[\".google.api.oauthScopes\"];\n                    return object;\n                };\n    \n                /**\n                 * Converts this ServiceOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.ServiceOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ServiceOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return ServiceOptions;\n            })();\n    \n            protobuf.MethodOptions = (function() {\n    \n                /**\n                 * Properties of a MethodOptions.\n                 * @memberof google.protobuf\n                 * @interface IMethodOptions\n                 * @property {boolean|null} [deprecated] MethodOptions deprecated\n                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel\n                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption\n                 * @property {google.api.IHttpRule|null} [\".google.api.http\"] MethodOptions .google.api.http\n                 * @property {Array.<string>|null} [\".google.api.methodSignature\"] MethodOptions .google.api.methodSignature\n                 */\n    \n                /**\n                 * Constructs a new MethodOptions.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a MethodOptions.\n                 * @implements IMethodOptions\n                 * @constructor\n                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set\n                 */\n                function MethodOptions(properties) {\n                    this.uninterpretedOption = [];\n                    this[\".google.api.methodSignature\"] = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * MethodOptions deprecated.\n                 * @member {boolean} deprecated\n                 * @memberof google.protobuf.MethodOptions\n                 * @instance\n                 */\n                MethodOptions.prototype.deprecated = false;\n    \n                /**\n                 * MethodOptions idempotencyLevel.\n                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel\n                 * @memberof google.protobuf.MethodOptions\n                 * @instance\n                 */\n                MethodOptions.prototype.idempotencyLevel = 0;\n    \n                /**\n                 * MethodOptions uninterpretedOption.\n                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n                 * @memberof google.protobuf.MethodOptions\n                 * @instance\n                 */\n                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;\n    \n                /**\n                 * MethodOptions .google.api.http.\n                 * @member {google.api.IHttpRule|null|undefined} .google.api.http\n                 * @memberof google.protobuf.MethodOptions\n                 * @instance\n                 */\n                MethodOptions.prototype[\".google.api.http\"] = null;\n    \n                /**\n                 * MethodOptions .google.api.methodSignature.\n                 * @member {Array.<string>} .google.api.methodSignature\n                 * @memberof google.protobuf.MethodOptions\n                 * @instance\n                 */\n                MethodOptions.prototype[\".google.api.methodSignature\"] = $util.emptyArray;\n    \n                /**\n                 * Creates a new MethodOptions instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.MethodOptions\n                 * @static\n                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set\n                 * @returns {google.protobuf.MethodOptions} MethodOptions instance\n                 */\n                MethodOptions.create = function create(properties) {\n                    return new MethodOptions(properties);\n                };\n    \n                /**\n                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.MethodOptions\n                 * @static\n                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MethodOptions.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);\n                    if (message.idempotencyLevel != null && message.hasOwnProperty(\"idempotencyLevel\"))\n                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);\n                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();\n                    if (message[\".google.api.methodSignature\"] != null && message[\".google.api.methodSignature\"].length)\n                        for (var i = 0; i < message[\".google.api.methodSignature\"].length; ++i)\n                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[\".google.api.methodSignature\"][i]);\n                    if (message[\".google.api.http\"] != null && message.hasOwnProperty(\".google.api.http\"))\n                        $root.google.api.HttpRule.encode(message[\".google.api.http\"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.MethodOptions\n                 * @static\n                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a MethodOptions message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.MethodOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.MethodOptions} MethodOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MethodOptions.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 33:\n                            message.deprecated = reader.bool();\n                            break;\n                        case 34:\n                            message.idempotencyLevel = reader.int32();\n                            break;\n                        case 999:\n                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))\n                                message.uninterpretedOption = [];\n                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));\n                            break;\n                        case 72295728:\n                            message[\".google.api.http\"] = $root.google.api.HttpRule.decode(reader, reader.uint32());\n                            break;\n                        case 1051:\n                            if (!(message[\".google.api.methodSignature\"] && message[\".google.api.methodSignature\"].length))\n                                message[\".google.api.methodSignature\"] = [];\n                            message[\".google.api.methodSignature\"].push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.MethodOptions\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.MethodOptions} MethodOptions\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MethodOptions.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a MethodOptions message.\n                 * @function verify\n                 * @memberof google.protobuf.MethodOptions\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                MethodOptions.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        if (typeof message.deprecated !== \"boolean\")\n                            return \"deprecated: boolean expected\";\n                    if (message.idempotencyLevel != null && message.hasOwnProperty(\"idempotencyLevel\"))\n                        switch (message.idempotencyLevel) {\n                        default:\n                            return \"idempotencyLevel: enum value expected\";\n                        case 0:\n                        case 1:\n                        case 2:\n                            break;\n                        }\n                    if (message.uninterpretedOption != null && message.hasOwnProperty(\"uninterpretedOption\")) {\n                        if (!Array.isArray(message.uninterpretedOption))\n                            return \"uninterpretedOption: array expected\";\n                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);\n                            if (error)\n                                return \"uninterpretedOption.\" + error;\n                        }\n                    }\n                    if (message[\".google.api.http\"] != null && message.hasOwnProperty(\".google.api.http\")) {\n                        var error = $root.google.api.HttpRule.verify(message[\".google.api.http\"]);\n                        if (error)\n                            return \".google.api.http.\" + error;\n                    }\n                    if (message[\".google.api.methodSignature\"] != null && message.hasOwnProperty(\".google.api.methodSignature\")) {\n                        if (!Array.isArray(message[\".google.api.methodSignature\"]))\n                            return \".google.api.methodSignature: array expected\";\n                        for (var i = 0; i < message[\".google.api.methodSignature\"].length; ++i)\n                            if (!$util.isString(message[\".google.api.methodSignature\"][i]))\n                                return \".google.api.methodSignature: string[] expected\";\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.MethodOptions\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.MethodOptions} MethodOptions\n                 */\n                MethodOptions.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.MethodOptions)\n                        return object;\n                    var message = new $root.google.protobuf.MethodOptions();\n                    if (object.deprecated != null)\n                        message.deprecated = Boolean(object.deprecated);\n                    switch (object.idempotencyLevel) {\n                    case \"IDEMPOTENCY_UNKNOWN\":\n                    case 0:\n                        message.idempotencyLevel = 0;\n                        break;\n                    case \"NO_SIDE_EFFECTS\":\n                    case 1:\n                        message.idempotencyLevel = 1;\n                        break;\n                    case \"IDEMPOTENT\":\n                    case 2:\n                        message.idempotencyLevel = 2;\n                        break;\n                    }\n                    if (object.uninterpretedOption) {\n                        if (!Array.isArray(object.uninterpretedOption))\n                            throw TypeError(\".google.protobuf.MethodOptions.uninterpretedOption: array expected\");\n                        message.uninterpretedOption = [];\n                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n                            if (typeof object.uninterpretedOption[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.MethodOptions.uninterpretedOption: object expected\");\n                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n                        }\n                    }\n                    if (object[\".google.api.http\"] != null) {\n                        if (typeof object[\".google.api.http\"] !== \"object\")\n                            throw TypeError(\".google.protobuf.MethodOptions..google.api.http: object expected\");\n                        message[\".google.api.http\"] = $root.google.api.HttpRule.fromObject(object[\".google.api.http\"]);\n                    }\n                    if (object[\".google.api.methodSignature\"]) {\n                        if (!Array.isArray(object[\".google.api.methodSignature\"]))\n                            throw TypeError(\".google.protobuf.MethodOptions..google.api.methodSignature: array expected\");\n                        message[\".google.api.methodSignature\"] = [];\n                        for (var i = 0; i < object[\".google.api.methodSignature\"].length; ++i)\n                            message[\".google.api.methodSignature\"][i] = String(object[\".google.api.methodSignature\"][i]);\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.MethodOptions\n                 * @static\n                 * @param {google.protobuf.MethodOptions} message MethodOptions\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                MethodOptions.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.uninterpretedOption = [];\n                        object[\".google.api.methodSignature\"] = [];\n                    }\n                    if (options.defaults) {\n                        object.deprecated = false;\n                        object.idempotencyLevel = options.enums === String ? \"IDEMPOTENCY_UNKNOWN\" : 0;\n                        object[\".google.api.http\"] = null;\n                    }\n                    if (message.deprecated != null && message.hasOwnProperty(\"deprecated\"))\n                        object.deprecated = message.deprecated;\n                    if (message.idempotencyLevel != null && message.hasOwnProperty(\"idempotencyLevel\"))\n                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;\n                    if (message.uninterpretedOption && message.uninterpretedOption.length) {\n                        object.uninterpretedOption = [];\n                        for (var j = 0; j < message.uninterpretedOption.length; ++j)\n                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n                    }\n                    if (message[\".google.api.methodSignature\"] && message[\".google.api.methodSignature\"].length) {\n                        object[\".google.api.methodSignature\"] = [];\n                        for (var j = 0; j < message[\".google.api.methodSignature\"].length; ++j)\n                            object[\".google.api.methodSignature\"][j] = message[\".google.api.methodSignature\"][j];\n                    }\n                    if (message[\".google.api.http\"] != null && message.hasOwnProperty(\".google.api.http\"))\n                        object[\".google.api.http\"] = $root.google.api.HttpRule.toObject(message[\".google.api.http\"], options);\n                    return object;\n                };\n    \n                /**\n                 * Converts this MethodOptions to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.MethodOptions\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                MethodOptions.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                /**\n                 * IdempotencyLevel enum.\n                 * @name google.protobuf.MethodOptions.IdempotencyLevel\n                 * @enum {string}\n                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value\n                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value\n                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value\n                 */\n                MethodOptions.IdempotencyLevel = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"IDEMPOTENCY_UNKNOWN\"] = 0;\n                    values[valuesById[1] = \"NO_SIDE_EFFECTS\"] = 1;\n                    values[valuesById[2] = \"IDEMPOTENT\"] = 2;\n                    return values;\n                })();\n    \n                return MethodOptions;\n            })();\n    \n            protobuf.UninterpretedOption = (function() {\n    \n                /**\n                 * Properties of an UninterpretedOption.\n                 * @memberof google.protobuf\n                 * @interface IUninterpretedOption\n                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name\n                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue\n                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue\n                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue\n                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue\n                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue\n                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue\n                 */\n    \n                /**\n                 * Constructs a new UninterpretedOption.\n                 * @memberof google.protobuf\n                 * @classdesc Represents an UninterpretedOption.\n                 * @implements IUninterpretedOption\n                 * @constructor\n                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set\n                 */\n                function UninterpretedOption(properties) {\n                    this.name = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * UninterpretedOption name.\n                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @instance\n                 */\n                UninterpretedOption.prototype.name = $util.emptyArray;\n    \n                /**\n                 * UninterpretedOption identifierValue.\n                 * @member {string} identifierValue\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @instance\n                 */\n                UninterpretedOption.prototype.identifierValue = \"\";\n    \n                /**\n                 * UninterpretedOption positiveIntValue.\n                 * @member {number|Long} positiveIntValue\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @instance\n                 */\n                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n    \n                /**\n                 * UninterpretedOption negativeIntValue.\n                 * @member {number|Long} negativeIntValue\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @instance\n                 */\n                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n    \n                /**\n                 * UninterpretedOption doubleValue.\n                 * @member {number} doubleValue\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @instance\n                 */\n                UninterpretedOption.prototype.doubleValue = 0;\n    \n                /**\n                 * UninterpretedOption stringValue.\n                 * @member {Uint8Array} stringValue\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @instance\n                 */\n                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);\n    \n                /**\n                 * UninterpretedOption aggregateValue.\n                 * @member {string} aggregateValue\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @instance\n                 */\n                UninterpretedOption.prototype.aggregateValue = \"\";\n    \n                /**\n                 * Creates a new UninterpretedOption instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @static\n                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set\n                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance\n                 */\n                UninterpretedOption.create = function create(properties) {\n                    return new UninterpretedOption(properties);\n                };\n    \n                /**\n                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @static\n                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                UninterpretedOption.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.name.length)\n                        for (var i = 0; i < message.name.length; ++i)\n                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.identifierValue != null && message.hasOwnProperty(\"identifierValue\"))\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);\n                    if (message.positiveIntValue != null && message.hasOwnProperty(\"positiveIntValue\"))\n                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);\n                    if (message.negativeIntValue != null && message.hasOwnProperty(\"negativeIntValue\"))\n                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);\n                    if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);\n                    if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);\n                    if (message.aggregateValue != null && message.hasOwnProperty(\"aggregateValue\"))\n                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @static\n                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes an UninterpretedOption message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                UninterpretedOption.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 2:\n                            if (!(message.name && message.name.length))\n                                message.name = [];\n                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));\n                            break;\n                        case 3:\n                            message.identifierValue = reader.string();\n                            break;\n                        case 4:\n                            message.positiveIntValue = reader.uint64();\n                            break;\n                        case 5:\n                            message.negativeIntValue = reader.int64();\n                            break;\n                        case 6:\n                            message.doubleValue = reader.double();\n                            break;\n                        case 7:\n                            message.stringValue = reader.bytes();\n                            break;\n                        case 8:\n                            message.aggregateValue = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies an UninterpretedOption message.\n                 * @function verify\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                UninterpretedOption.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\")) {\n                        if (!Array.isArray(message.name))\n                            return \"name: array expected\";\n                        for (var i = 0; i < message.name.length; ++i) {\n                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);\n                            if (error)\n                                return \"name.\" + error;\n                        }\n                    }\n                    if (message.identifierValue != null && message.hasOwnProperty(\"identifierValue\"))\n                        if (!$util.isString(message.identifierValue))\n                            return \"identifierValue: string expected\";\n                    if (message.positiveIntValue != null && message.hasOwnProperty(\"positiveIntValue\"))\n                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))\n                            return \"positiveIntValue: integer|Long expected\";\n                    if (message.negativeIntValue != null && message.hasOwnProperty(\"negativeIntValue\"))\n                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))\n                            return \"negativeIntValue: integer|Long expected\";\n                    if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                        if (typeof message.doubleValue !== \"number\")\n                            return \"doubleValue: number expected\";\n                    if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                        if (!(message.stringValue && typeof message.stringValue.length === \"number\" || $util.isString(message.stringValue)))\n                            return \"stringValue: buffer expected\";\n                    if (message.aggregateValue != null && message.hasOwnProperty(\"aggregateValue\"))\n                        if (!$util.isString(message.aggregateValue))\n                            return \"aggregateValue: string expected\";\n                    return null;\n                };\n    \n                /**\n                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n                 */\n                UninterpretedOption.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.UninterpretedOption)\n                        return object;\n                    var message = new $root.google.protobuf.UninterpretedOption();\n                    if (object.name) {\n                        if (!Array.isArray(object.name))\n                            throw TypeError(\".google.protobuf.UninterpretedOption.name: array expected\");\n                        message.name = [];\n                        for (var i = 0; i < object.name.length; ++i) {\n                            if (typeof object.name[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.UninterpretedOption.name: object expected\");\n                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);\n                        }\n                    }\n                    if (object.identifierValue != null)\n                        message.identifierValue = String(object.identifierValue);\n                    if (object.positiveIntValue != null)\n                        if ($util.Long)\n                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;\n                        else if (typeof object.positiveIntValue === \"string\")\n                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);\n                        else if (typeof object.positiveIntValue === \"number\")\n                            message.positiveIntValue = object.positiveIntValue;\n                        else if (typeof object.positiveIntValue === \"object\")\n                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);\n                    if (object.negativeIntValue != null)\n                        if ($util.Long)\n                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;\n                        else if (typeof object.negativeIntValue === \"string\")\n                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);\n                        else if (typeof object.negativeIntValue === \"number\")\n                            message.negativeIntValue = object.negativeIntValue;\n                        else if (typeof object.negativeIntValue === \"object\")\n                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();\n                    if (object.doubleValue != null)\n                        message.doubleValue = Number(object.doubleValue);\n                    if (object.stringValue != null)\n                        if (typeof object.stringValue === \"string\")\n                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);\n                        else if (object.stringValue.length)\n                            message.stringValue = object.stringValue;\n                    if (object.aggregateValue != null)\n                        message.aggregateValue = String(object.aggregateValue);\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @static\n                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                UninterpretedOption.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.name = [];\n                    if (options.defaults) {\n                        object.identifierValue = \"\";\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, true);\n                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.positiveIntValue = options.longs === String ? \"0\" : 0;\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, false);\n                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.negativeIntValue = options.longs === String ? \"0\" : 0;\n                        object.doubleValue = 0;\n                        if (options.bytes === String)\n                            object.stringValue = \"\";\n                        else {\n                            object.stringValue = [];\n                            if (options.bytes !== Array)\n                                object.stringValue = $util.newBuffer(object.stringValue);\n                        }\n                        object.aggregateValue = \"\";\n                    }\n                    if (message.name && message.name.length) {\n                        object.name = [];\n                        for (var j = 0; j < message.name.length; ++j)\n                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);\n                    }\n                    if (message.identifierValue != null && message.hasOwnProperty(\"identifierValue\"))\n                        object.identifierValue = message.identifierValue;\n                    if (message.positiveIntValue != null && message.hasOwnProperty(\"positiveIntValue\"))\n                        if (typeof message.positiveIntValue === \"number\")\n                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;\n                        else\n                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;\n                    if (message.negativeIntValue != null && message.hasOwnProperty(\"negativeIntValue\"))\n                        if (typeof message.negativeIntValue === \"number\")\n                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;\n                        else\n                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;\n                    if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                    if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;\n                    if (message.aggregateValue != null && message.hasOwnProperty(\"aggregateValue\"))\n                        object.aggregateValue = message.aggregateValue;\n                    return object;\n                };\n    \n                /**\n                 * Converts this UninterpretedOption to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.UninterpretedOption\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                UninterpretedOption.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                UninterpretedOption.NamePart = (function() {\n    \n                    /**\n                     * Properties of a NamePart.\n                     * @memberof google.protobuf.UninterpretedOption\n                     * @interface INamePart\n                     * @property {string} namePart NamePart namePart\n                     * @property {boolean} isExtension NamePart isExtension\n                     */\n    \n                    /**\n                     * Constructs a new NamePart.\n                     * @memberof google.protobuf.UninterpretedOption\n                     * @classdesc Represents a NamePart.\n                     * @implements INamePart\n                     * @constructor\n                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set\n                     */\n                    function NamePart(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n    \n                    /**\n                     * NamePart namePart.\n                     * @member {string} namePart\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @instance\n                     */\n                    NamePart.prototype.namePart = \"\";\n    \n                    /**\n                     * NamePart isExtension.\n                     * @member {boolean} isExtension\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @instance\n                     */\n                    NamePart.prototype.isExtension = false;\n    \n                    /**\n                     * Creates a new NamePart instance using the specified properties.\n                     * @function create\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @static\n                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set\n                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance\n                     */\n                    NamePart.create = function create(properties) {\n                        return new NamePart(properties);\n                    };\n    \n                    /**\n                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.\n                     * @function encode\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @static\n                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    NamePart.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);\n                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);\n                        return writer;\n                    };\n    \n                    /**\n                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @static\n                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n    \n                    /**\n                     * Decodes a NamePart message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    NamePart.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.namePart = reader.string();\n                                break;\n                            case 2:\n                                message.isExtension = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        if (!message.hasOwnProperty(\"namePart\"))\n                            throw $util.ProtocolError(\"missing required 'namePart'\", { instance: message });\n                        if (!message.hasOwnProperty(\"isExtension\"))\n                            throw $util.ProtocolError(\"missing required 'isExtension'\", { instance: message });\n                        return message;\n                    };\n    \n                    /**\n                     * Decodes a NamePart message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    NamePart.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n    \n                    /**\n                     * Verifies a NamePart message.\n                     * @function verify\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    NamePart.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (!$util.isString(message.namePart))\n                            return \"namePart: string expected\";\n                        if (typeof message.isExtension !== \"boolean\")\n                            return \"isExtension: boolean expected\";\n                        return null;\n                    };\n    \n                    /**\n                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n                     */\n                    NamePart.fromObject = function fromObject(object) {\n                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)\n                            return object;\n                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();\n                        if (object.namePart != null)\n                            message.namePart = String(object.namePart);\n                        if (object.isExtension != null)\n                            message.isExtension = Boolean(object.isExtension);\n                        return message;\n                    };\n    \n                    /**\n                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @static\n                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    NamePart.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.namePart = \"\";\n                            object.isExtension = false;\n                        }\n                        if (message.namePart != null && message.hasOwnProperty(\"namePart\"))\n                            object.namePart = message.namePart;\n                        if (message.isExtension != null && message.hasOwnProperty(\"isExtension\"))\n                            object.isExtension = message.isExtension;\n                        return object;\n                    };\n    \n                    /**\n                     * Converts this NamePart to JSON.\n                     * @function toJSON\n                     * @memberof google.protobuf.UninterpretedOption.NamePart\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    NamePart.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n    \n                    return NamePart;\n                })();\n    \n                return UninterpretedOption;\n            })();\n    \n            protobuf.SourceCodeInfo = (function() {\n    \n                /**\n                 * Properties of a SourceCodeInfo.\n                 * @memberof google.protobuf\n                 * @interface ISourceCodeInfo\n                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location\n                 */\n    \n                /**\n                 * Constructs a new SourceCodeInfo.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a SourceCodeInfo.\n                 * @implements ISourceCodeInfo\n                 * @constructor\n                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set\n                 */\n                function SourceCodeInfo(properties) {\n                    this.location = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * SourceCodeInfo location.\n                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @instance\n                 */\n                SourceCodeInfo.prototype.location = $util.emptyArray;\n    \n                /**\n                 * Creates a new SourceCodeInfo instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @static\n                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set\n                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance\n                 */\n                SourceCodeInfo.create = function create(properties) {\n                    return new SourceCodeInfo(properties);\n                };\n    \n                /**\n                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @static\n                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                SourceCodeInfo.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.location != null && message.location.length)\n                        for (var i = 0; i < message.location.length; ++i)\n                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @static\n                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a SourceCodeInfo message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                SourceCodeInfo.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.location && message.location.length))\n                                message.location = [];\n                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a SourceCodeInfo message.\n                 * @function verify\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                SourceCodeInfo.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.location != null && message.hasOwnProperty(\"location\")) {\n                        if (!Array.isArray(message.location))\n                            return \"location: array expected\";\n                        for (var i = 0; i < message.location.length; ++i) {\n                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);\n                            if (error)\n                                return \"location.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n                 */\n                SourceCodeInfo.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.SourceCodeInfo)\n                        return object;\n                    var message = new $root.google.protobuf.SourceCodeInfo();\n                    if (object.location) {\n                        if (!Array.isArray(object.location))\n                            throw TypeError(\".google.protobuf.SourceCodeInfo.location: array expected\");\n                        message.location = [];\n                        for (var i = 0; i < object.location.length; ++i) {\n                            if (typeof object.location[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.SourceCodeInfo.location: object expected\");\n                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @static\n                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                SourceCodeInfo.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.location = [];\n                    if (message.location && message.location.length) {\n                        object.location = [];\n                        for (var j = 0; j < message.location.length; ++j)\n                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this SourceCodeInfo to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.SourceCodeInfo\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                SourceCodeInfo.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                SourceCodeInfo.Location = (function() {\n    \n                    /**\n                     * Properties of a Location.\n                     * @memberof google.protobuf.SourceCodeInfo\n                     * @interface ILocation\n                     * @property {Array.<number>|null} [path] Location path\n                     * @property {Array.<number>|null} [span] Location span\n                     * @property {string|null} [leadingComments] Location leadingComments\n                     * @property {string|null} [trailingComments] Location trailingComments\n                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments\n                     */\n    \n                    /**\n                     * Constructs a new Location.\n                     * @memberof google.protobuf.SourceCodeInfo\n                     * @classdesc Represents a Location.\n                     * @implements ILocation\n                     * @constructor\n                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set\n                     */\n                    function Location(properties) {\n                        this.path = [];\n                        this.span = [];\n                        this.leadingDetachedComments = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n    \n                    /**\n                     * Location path.\n                     * @member {Array.<number>} path\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @instance\n                     */\n                    Location.prototype.path = $util.emptyArray;\n    \n                    /**\n                     * Location span.\n                     * @member {Array.<number>} span\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @instance\n                     */\n                    Location.prototype.span = $util.emptyArray;\n    \n                    /**\n                     * Location leadingComments.\n                     * @member {string} leadingComments\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @instance\n                     */\n                    Location.prototype.leadingComments = \"\";\n    \n                    /**\n                     * Location trailingComments.\n                     * @member {string} trailingComments\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @instance\n                     */\n                    Location.prototype.trailingComments = \"\";\n    \n                    /**\n                     * Location leadingDetachedComments.\n                     * @member {Array.<string>} leadingDetachedComments\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @instance\n                     */\n                    Location.prototype.leadingDetachedComments = $util.emptyArray;\n    \n                    /**\n                     * Creates a new Location instance using the specified properties.\n                     * @function create\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @static\n                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set\n                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance\n                     */\n                    Location.create = function create(properties) {\n                        return new Location(properties);\n                    };\n    \n                    /**\n                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.\n                     * @function encode\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @static\n                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Location.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.path != null && message.path.length) {\n                            writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                            for (var i = 0; i < message.path.length; ++i)\n                                writer.int32(message.path[i]);\n                            writer.ldelim();\n                        }\n                        if (message.span != null && message.span.length) {\n                            writer.uint32(/* id 2, wireType 2 =*/18).fork();\n                            for (var i = 0; i < message.span.length; ++i)\n                                writer.int32(message.span[i]);\n                            writer.ldelim();\n                        }\n                        if (message.leadingComments != null && message.hasOwnProperty(\"leadingComments\"))\n                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);\n                        if (message.trailingComments != null && message.hasOwnProperty(\"trailingComments\"))\n                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);\n                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)\n                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)\n                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);\n                        return writer;\n                    };\n    \n                    /**\n                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @static\n                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Location.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n    \n                    /**\n                     * Decodes a Location message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {google.protobuf.SourceCodeInfo.Location} Location\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Location.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                if (!(message.path && message.path.length))\n                                    message.path = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.path.push(reader.int32());\n                                } else\n                                    message.path.push(reader.int32());\n                                break;\n                            case 2:\n                                if (!(message.span && message.span.length))\n                                    message.span = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.span.push(reader.int32());\n                                } else\n                                    message.span.push(reader.int32());\n                                break;\n                            case 3:\n                                message.leadingComments = reader.string();\n                                break;\n                            case 4:\n                                message.trailingComments = reader.string();\n                                break;\n                            case 6:\n                                if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))\n                                    message.leadingDetachedComments = [];\n                                message.leadingDetachedComments.push(reader.string());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n    \n                    /**\n                     * Decodes a Location message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {google.protobuf.SourceCodeInfo.Location} Location\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Location.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n    \n                    /**\n                     * Verifies a Location message.\n                     * @function verify\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    Location.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.path != null && message.hasOwnProperty(\"path\")) {\n                            if (!Array.isArray(message.path))\n                                return \"path: array expected\";\n                            for (var i = 0; i < message.path.length; ++i)\n                                if (!$util.isInteger(message.path[i]))\n                                    return \"path: integer[] expected\";\n                        }\n                        if (message.span != null && message.hasOwnProperty(\"span\")) {\n                            if (!Array.isArray(message.span))\n                                return \"span: array expected\";\n                            for (var i = 0; i < message.span.length; ++i)\n                                if (!$util.isInteger(message.span[i]))\n                                    return \"span: integer[] expected\";\n                        }\n                        if (message.leadingComments != null && message.hasOwnProperty(\"leadingComments\"))\n                            if (!$util.isString(message.leadingComments))\n                                return \"leadingComments: string expected\";\n                        if (message.trailingComments != null && message.hasOwnProperty(\"trailingComments\"))\n                            if (!$util.isString(message.trailingComments))\n                                return \"trailingComments: string expected\";\n                        if (message.leadingDetachedComments != null && message.hasOwnProperty(\"leadingDetachedComments\")) {\n                            if (!Array.isArray(message.leadingDetachedComments))\n                                return \"leadingDetachedComments: array expected\";\n                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)\n                                if (!$util.isString(message.leadingDetachedComments[i]))\n                                    return \"leadingDetachedComments: string[] expected\";\n                        }\n                        return null;\n                    };\n    \n                    /**\n                     * Creates a Location message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {google.protobuf.SourceCodeInfo.Location} Location\n                     */\n                    Location.fromObject = function fromObject(object) {\n                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)\n                            return object;\n                        var message = new $root.google.protobuf.SourceCodeInfo.Location();\n                        if (object.path) {\n                            if (!Array.isArray(object.path))\n                                throw TypeError(\".google.protobuf.SourceCodeInfo.Location.path: array expected\");\n                            message.path = [];\n                            for (var i = 0; i < object.path.length; ++i)\n                                message.path[i] = object.path[i] | 0;\n                        }\n                        if (object.span) {\n                            if (!Array.isArray(object.span))\n                                throw TypeError(\".google.protobuf.SourceCodeInfo.Location.span: array expected\");\n                            message.span = [];\n                            for (var i = 0; i < object.span.length; ++i)\n                                message.span[i] = object.span[i] | 0;\n                        }\n                        if (object.leadingComments != null)\n                            message.leadingComments = String(object.leadingComments);\n                        if (object.trailingComments != null)\n                            message.trailingComments = String(object.trailingComments);\n                        if (object.leadingDetachedComments) {\n                            if (!Array.isArray(object.leadingDetachedComments))\n                                throw TypeError(\".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected\");\n                            message.leadingDetachedComments = [];\n                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)\n                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);\n                        }\n                        return message;\n                    };\n    \n                    /**\n                     * Creates a plain object from a Location message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @static\n                     * @param {google.protobuf.SourceCodeInfo.Location} message Location\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Location.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.path = [];\n                            object.span = [];\n                            object.leadingDetachedComments = [];\n                        }\n                        if (options.defaults) {\n                            object.leadingComments = \"\";\n                            object.trailingComments = \"\";\n                        }\n                        if (message.path && message.path.length) {\n                            object.path = [];\n                            for (var j = 0; j < message.path.length; ++j)\n                                object.path[j] = message.path[j];\n                        }\n                        if (message.span && message.span.length) {\n                            object.span = [];\n                            for (var j = 0; j < message.span.length; ++j)\n                                object.span[j] = message.span[j];\n                        }\n                        if (message.leadingComments != null && message.hasOwnProperty(\"leadingComments\"))\n                            object.leadingComments = message.leadingComments;\n                        if (message.trailingComments != null && message.hasOwnProperty(\"trailingComments\"))\n                            object.trailingComments = message.trailingComments;\n                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {\n                            object.leadingDetachedComments = [];\n                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)\n                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];\n                        }\n                        return object;\n                    };\n    \n                    /**\n                     * Converts this Location to JSON.\n                     * @function toJSON\n                     * @memberof google.protobuf.SourceCodeInfo.Location\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Location.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n    \n                    return Location;\n                })();\n    \n                return SourceCodeInfo;\n            })();\n    \n            protobuf.GeneratedCodeInfo = (function() {\n    \n                /**\n                 * Properties of a GeneratedCodeInfo.\n                 * @memberof google.protobuf\n                 * @interface IGeneratedCodeInfo\n                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation\n                 */\n    \n                /**\n                 * Constructs a new GeneratedCodeInfo.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a GeneratedCodeInfo.\n                 * @implements IGeneratedCodeInfo\n                 * @constructor\n                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set\n                 */\n                function GeneratedCodeInfo(properties) {\n                    this.annotation = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * GeneratedCodeInfo annotation.\n                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @instance\n                 */\n                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;\n    \n                /**\n                 * Creates a new GeneratedCodeInfo instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @static\n                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set\n                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance\n                 */\n                GeneratedCodeInfo.create = function create(properties) {\n                    return new GeneratedCodeInfo(properties);\n                };\n    \n                /**\n                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @static\n                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                GeneratedCodeInfo.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.annotation != null && message.annotation.length)\n                        for (var i = 0; i < message.annotation.length; ++i)\n                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @static\n                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                GeneratedCodeInfo.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.annotation && message.annotation.length))\n                                message.annotation = [];\n                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a GeneratedCodeInfo message.\n                 * @function verify\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                GeneratedCodeInfo.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.annotation != null && message.hasOwnProperty(\"annotation\")) {\n                        if (!Array.isArray(message.annotation))\n                            return \"annotation: array expected\";\n                        for (var i = 0; i < message.annotation.length; ++i) {\n                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);\n                            if (error)\n                                return \"annotation.\" + error;\n                        }\n                    }\n                    return null;\n                };\n    \n                /**\n                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n                 */\n                GeneratedCodeInfo.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)\n                        return object;\n                    var message = new $root.google.protobuf.GeneratedCodeInfo();\n                    if (object.annotation) {\n                        if (!Array.isArray(object.annotation))\n                            throw TypeError(\".google.protobuf.GeneratedCodeInfo.annotation: array expected\");\n                        message.annotation = [];\n                        for (var i = 0; i < object.annotation.length; ++i) {\n                            if (typeof object.annotation[i] !== \"object\")\n                                throw TypeError(\".google.protobuf.GeneratedCodeInfo.annotation: object expected\");\n                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @static\n                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                GeneratedCodeInfo.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.annotation = [];\n                    if (message.annotation && message.annotation.length) {\n                        object.annotation = [];\n                        for (var j = 0; j < message.annotation.length; ++j)\n                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);\n                    }\n                    return object;\n                };\n    \n                /**\n                 * Converts this GeneratedCodeInfo to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.GeneratedCodeInfo\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                GeneratedCodeInfo.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                GeneratedCodeInfo.Annotation = (function() {\n    \n                    /**\n                     * Properties of an Annotation.\n                     * @memberof google.protobuf.GeneratedCodeInfo\n                     * @interface IAnnotation\n                     * @property {Array.<number>|null} [path] Annotation path\n                     * @property {string|null} [sourceFile] Annotation sourceFile\n                     * @property {number|null} [begin] Annotation begin\n                     * @property {number|null} [end] Annotation end\n                     */\n    \n                    /**\n                     * Constructs a new Annotation.\n                     * @memberof google.protobuf.GeneratedCodeInfo\n                     * @classdesc Represents an Annotation.\n                     * @implements IAnnotation\n                     * @constructor\n                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set\n                     */\n                    function Annotation(properties) {\n                        this.path = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n    \n                    /**\n                     * Annotation path.\n                     * @member {Array.<number>} path\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @instance\n                     */\n                    Annotation.prototype.path = $util.emptyArray;\n    \n                    /**\n                     * Annotation sourceFile.\n                     * @member {string} sourceFile\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @instance\n                     */\n                    Annotation.prototype.sourceFile = \"\";\n    \n                    /**\n                     * Annotation begin.\n                     * @member {number} begin\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @instance\n                     */\n                    Annotation.prototype.begin = 0;\n    \n                    /**\n                     * Annotation end.\n                     * @member {number} end\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @instance\n                     */\n                    Annotation.prototype.end = 0;\n    \n                    /**\n                     * Creates a new Annotation instance using the specified properties.\n                     * @function create\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @static\n                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set\n                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance\n                     */\n                    Annotation.create = function create(properties) {\n                        return new Annotation(properties);\n                    };\n    \n                    /**\n                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.\n                     * @function encode\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @static\n                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Annotation.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.path != null && message.path.length) {\n                            writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                            for (var i = 0; i < message.path.length; ++i)\n                                writer.int32(message.path[i]);\n                            writer.ldelim();\n                        }\n                        if (message.sourceFile != null && message.hasOwnProperty(\"sourceFile\"))\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);\n                        if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);\n                        return writer;\n                    };\n    \n                    /**\n                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @static\n                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n    \n                    /**\n                     * Decodes an Annotation message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Annotation.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                if (!(message.path && message.path.length))\n                                    message.path = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.path.push(reader.int32());\n                                } else\n                                    message.path.push(reader.int32());\n                                break;\n                            case 2:\n                                message.sourceFile = reader.string();\n                                break;\n                            case 3:\n                                message.begin = reader.int32();\n                                break;\n                            case 4:\n                                message.end = reader.int32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n    \n                    /**\n                     * Decodes an Annotation message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Annotation.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n    \n                    /**\n                     * Verifies an Annotation message.\n                     * @function verify\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    Annotation.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.path != null && message.hasOwnProperty(\"path\")) {\n                            if (!Array.isArray(message.path))\n                                return \"path: array expected\";\n                            for (var i = 0; i < message.path.length; ++i)\n                                if (!$util.isInteger(message.path[i]))\n                                    return \"path: integer[] expected\";\n                        }\n                        if (message.sourceFile != null && message.hasOwnProperty(\"sourceFile\"))\n                            if (!$util.isString(message.sourceFile))\n                                return \"sourceFile: string expected\";\n                        if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                            if (!$util.isInteger(message.begin))\n                                return \"begin: integer expected\";\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            if (!$util.isInteger(message.end))\n                                return \"end: integer expected\";\n                        return null;\n                    };\n    \n                    /**\n                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n                     */\n                    Annotation.fromObject = function fromObject(object) {\n                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)\n                            return object;\n                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();\n                        if (object.path) {\n                            if (!Array.isArray(object.path))\n                                throw TypeError(\".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected\");\n                            message.path = [];\n                            for (var i = 0; i < object.path.length; ++i)\n                                message.path[i] = object.path[i] | 0;\n                        }\n                        if (object.sourceFile != null)\n                            message.sourceFile = String(object.sourceFile);\n                        if (object.begin != null)\n                            message.begin = object.begin | 0;\n                        if (object.end != null)\n                            message.end = object.end | 0;\n                        return message;\n                    };\n    \n                    /**\n                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @static\n                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Annotation.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.path = [];\n                        if (options.defaults) {\n                            object.sourceFile = \"\";\n                            object.begin = 0;\n                            object.end = 0;\n                        }\n                        if (message.path && message.path.length) {\n                            object.path = [];\n                            for (var j = 0; j < message.path.length; ++j)\n                                object.path[j] = message.path[j];\n                        }\n                        if (message.sourceFile != null && message.hasOwnProperty(\"sourceFile\"))\n                            object.sourceFile = message.sourceFile;\n                        if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                            object.begin = message.begin;\n                        if (message.end != null && message.hasOwnProperty(\"end\"))\n                            object.end = message.end;\n                        return object;\n                    };\n    \n                    /**\n                     * Converts this Annotation to JSON.\n                     * @function toJSON\n                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Annotation.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n    \n                    return Annotation;\n                })();\n    \n                return GeneratedCodeInfo;\n            })();\n    \n            protobuf.Timestamp = (function() {\n    \n                /**\n                 * Properties of a Timestamp.\n                 * @memberof google.protobuf\n                 * @interface ITimestamp\n                 * @property {number|Long|null} [seconds] Timestamp seconds\n                 * @property {number|null} [nanos] Timestamp nanos\n                 */\n    \n                /**\n                 * Constructs a new Timestamp.\n                 * @memberof google.protobuf\n                 * @classdesc Represents a Timestamp.\n                 * @implements ITimestamp\n                 * @constructor\n                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n                 */\n                function Timestamp(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n    \n                /**\n                 * Timestamp seconds.\n                 * @member {number|Long} seconds\n                 * @memberof google.protobuf.Timestamp\n                 * @instance\n                 */\n                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n    \n                /**\n                 * Timestamp nanos.\n                 * @member {number} nanos\n                 * @memberof google.protobuf.Timestamp\n                 * @instance\n                 */\n                Timestamp.prototype.nanos = 0;\n    \n                /**\n                 * Creates a new Timestamp instance using the specified properties.\n                 * @function create\n                 * @memberof google.protobuf.Timestamp\n                 * @static\n                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n                 * @returns {google.protobuf.Timestamp} Timestamp instance\n                 */\n                Timestamp.create = function create(properties) {\n                    return new Timestamp(properties);\n                };\n    \n                /**\n                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n                 * @function encode\n                 * @memberof google.protobuf.Timestamp\n                 * @static\n                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Timestamp.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.seconds != null && message.hasOwnProperty(\"seconds\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);\n                    if (message.nanos != null && message.hasOwnProperty(\"nanos\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);\n                    return writer;\n                };\n    \n                /**\n                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof google.protobuf.Timestamp\n                 * @static\n                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n    \n                /**\n                 * Decodes a Timestamp message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof google.protobuf.Timestamp\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {google.protobuf.Timestamp} Timestamp\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Timestamp.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.seconds = reader.int64();\n                            break;\n                        case 2:\n                            message.nanos = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n    \n                /**\n                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof google.protobuf.Timestamp\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {google.protobuf.Timestamp} Timestamp\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Timestamp.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n    \n                /**\n                 * Verifies a Timestamp message.\n                 * @function verify\n                 * @memberof google.protobuf.Timestamp\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Timestamp.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.seconds != null && message.hasOwnProperty(\"seconds\"))\n                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))\n                            return \"seconds: integer|Long expected\";\n                    if (message.nanos != null && message.hasOwnProperty(\"nanos\"))\n                        if (!$util.isInteger(message.nanos))\n                            return \"nanos: integer expected\";\n                    return null;\n                };\n    \n                /**\n                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof google.protobuf.Timestamp\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {google.protobuf.Timestamp} Timestamp\n                 */\n                Timestamp.fromObject = function fromObject(object) {\n                    if (object instanceof $root.google.protobuf.Timestamp)\n                        return object;\n                    var message = new $root.google.protobuf.Timestamp();\n                    if (object.seconds != null)\n                        if ($util.Long)\n                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;\n                        else if (typeof object.seconds === \"string\")\n                            message.seconds = parseInt(object.seconds, 10);\n                        else if (typeof object.seconds === \"number\")\n                            message.seconds = object.seconds;\n                        else if (typeof object.seconds === \"object\")\n                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();\n                    if (object.nanos != null)\n                        message.nanos = object.nanos | 0;\n                    return message;\n                };\n    \n                /**\n                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof google.protobuf.Timestamp\n                 * @static\n                 * @param {google.protobuf.Timestamp} message Timestamp\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Timestamp.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, false);\n                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.seconds = options.longs === String ? \"0\" : 0;\n                        object.nanos = 0;\n                    }\n                    if (message.seconds != null && message.hasOwnProperty(\"seconds\"))\n                        if (typeof message.seconds === \"number\")\n                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;\n                        else\n                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;\n                    if (message.nanos != null && message.hasOwnProperty(\"nanos\"))\n                        object.nanos = message.nanos;\n                    return object;\n                };\n    \n                /**\n                 * Converts this Timestamp to JSON.\n                 * @function toJSON\n                 * @memberof google.protobuf.Timestamp\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Timestamp.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n    \n                return Timestamp;\n            })();\n    \n            return protobuf;\n        })();\n    \n        return google;\n    })();\n\n    return $root;\n});\n"]},"metadata":{},"sourceType":"script"}