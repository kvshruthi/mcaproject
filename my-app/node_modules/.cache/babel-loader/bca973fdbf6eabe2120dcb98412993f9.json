{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRUTHI KV\\\\Desktop\\\\project_positive\\\\my-app\\\\src\\\\componets\\\\vendor\\\\FHome.js\";\nimport React, { Component, Fragment } from \"react\";\nimport logo from \"../../assets/logo.png\";\nimport user from \"../../assets/instants.jpg\";\nimport \"../CSS/farm.css\";\nimport axios from \"axios\";\nimport { Redirect, Link } from \"react-router-dom\"; //import Sentiment from 'sentiment';\n//const sentiment=new Sentiment();\n\nclass FHome extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [] //sentimentScore: null,\n      //generalSentiment: null,\n\n    }; //this.findSentiment = this.findSentiment.bind(this);\n  } // findSentiment(event){\n  //   const result=sentiment.analyze(event.target.value);\n  //   //console.log(result);\n  //   this.setState({\n  //     sentimentScore:result.score,\n  //   })\n  //   if(result.score<0){\n  //     this.setState({\n  //       generalSentiment:\"negative\"\n  //     })\n  //   }else if(result.score>0){\n  //                             this.setState({\n  //                               generalSentiment: \"positive\",\n  //                             });\n  //                           }else{\n  //                                  this.setState({\n  //                                    generalSentiment: \"neutral\",\n  //                                  });\n  //                                }\n  // }\n\n\n  componentDidMount() {\n    //top live headlines\n    fetch(\"http://newsapi.org/v2/top-headlines?country=us&apiKey=0976e1460f954e439dc6f1938e0a096f\").then(Response => Response.json()).then(findresponse => {\n      console.log(findresponse.articles);\n      this.setState({\n        data: findresponse.articles\n      });\n    });\n  } //   async function quickstart() {\n  //   // Imports the Google Cloud client library\n  //   const language = require('@google-cloud/language');\n  //   // Instantiates a client\n  //   const client = new language.LanguageServiceClient();\n  //   // The text to analyze\n  //   const text = {dynamicData.title};\n  //   const document = {\n  //     content: text,\n  //     type: 'PLAIN_TEXT',\n  //   };\n  //   // Detects the sentiment of the text\n  //   const [result] = await client.analyzeSentiment({document: document});\n  //   const sentiment = result.documentSentiment;\n  //   console.log(`Text: ${text}`);\n  //   console.log(`Sentiment score: ${sentiment.score}`);\n  //   console.log(`Sentiment magnitude: ${sentiment.magnitude}`);\n  // }\n\n\n  render() {\n    async function quickstart() {\n      // Imports the Google Cloud client library\n      const language = require('@google-cloud/language'); // Instantiates a client\n\n\n      const client = new language.LanguageServiceClient(); // The text to analyze\n\n      const text = {\n        title\n      };\n      const document = {\n        content: text,\n        type: 'PLAIN_TEXT'\n      }; // Detects the sentiment of the text\n\n      const [result] = await client.analyzeSentiment({\n        document: document\n      });\n      const sentiment = result.documentSentiment;\n      console.log(`Text: ${text}`);\n      console.log(`Sentiment score: ${sentiment.score}`);\n      console.log(`Sentiment magnitude: ${sentiment.magnitude}`);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \" container-fluid mt-5\",\n        id: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"$nbps;\", React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" Latest\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.data.map((dynamicData, key) => React.createElement(\"div\", {\n        className: \"col-lg-3 col-md-3 col-sm-3   animated fadeInUp wow animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"product-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: dynamicData.urlToImage,\n        className: \"img1\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        title: \"Quick Shop\" //data-toggle=\"modal\"\n        //data-target=\"#quickModel\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        title: \"Add to Cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-shopping-cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"product-bottom text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fa fa-star-half-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fa fa-star-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, dynamicData.title), React.createElement(Link, {\n        type: \"submit\",\n        className: \"btn input-btn\",\n        title: \"click here\",\n        to: {\n          pathname: \"/vendor/Readmore\",\n          state: {\n            dynamicData: dynamicData,\n            urlToImage: dynamicData.urlToImage,\n            description: dynamicData.description\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Read More\")))))));\n    }\n  }\n\n}\n\nexport default FHome;","map":{"version":3,"sources":["C:/Users/SHRUTHI KV/Desktop/project_positive/my-app/src/componets/vendor/FHome.js"],"names":["React","Component","Fragment","logo","user","axios","Redirect","Link","FHome","constructor","state","data","componentDidMount","fetch","then","Response","json","findresponse","console","log","articles","setState","render","quickstart","language","require","client","LanguageServiceClient","text","title","document","content","type","result","analyzeSentiment","sentiment","documentSentiment","score","magnitude","map","dynamicData","key","urlToImage","pathname","description"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport logo from \"../../assets/logo.png\";\nimport user from \"../../assets/instants.jpg\";\nimport \"../CSS/farm.css\";\nimport axios from \"axios\";\nimport { Redirect, Link } from \"react-router-dom\";\n//import Sentiment from 'sentiment';\n//const sentiment=new Sentiment();\n\nclass FHome extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n      //sentimentScore: null,\n      //generalSentiment: null,\n    };\n    //this.findSentiment = this.findSentiment.bind(this);\n  }\n  // findSentiment(event){\n  //   const result=sentiment.analyze(event.target.value);\n  //   //console.log(result);\n  //   this.setState({\n  //     sentimentScore:result.score,\n  //   })\n  //   if(result.score<0){\n  //     this.setState({\n  //       generalSentiment:\"negative\"\n  //     })\n  //   }else if(result.score>0){\n  //                             this.setState({\n  //                               generalSentiment: \"positive\",\n  //                             });\n  //                           }else{\n  //                                  this.setState({\n  //                                    generalSentiment: \"neutral\",\n  //                                  });\n  //                                }\n\n  // }\n\n  componentDidMount() {\n    //top live headlines\n    fetch(\n      \"http://newsapi.org/v2/top-headlines?country=us&apiKey=0976e1460f954e439dc6f1938e0a096f\"\n    )\n      .then((Response) => Response.json())\n      .then((findresponse) => {\n        console.log(findresponse.articles);\n        this.setState({\n          data: findresponse.articles,\n        });\n      });\n  }\n  \n//   async function quickstart() {\n//   // Imports the Google Cloud client library\n//   const language = require('@google-cloud/language');\n\n//   // Instantiates a client\n//   const client = new language.LanguageServiceClient();\n\n//   // The text to analyze\n//   const text = {dynamicData.title};\n\n//   const document = {\n//     content: text,\n//     type: 'PLAIN_TEXT',\n//   };\n\n//   // Detects the sentiment of the text\n//   const [result] = await client.analyzeSentiment({document: document});\n//   const sentiment = result.documentSentiment;\n\n//   console.log(`Text: ${text}`);\n//   console.log(`Sentiment score: ${sentiment.score}`);\n//   console.log(`Sentiment magnitude: ${sentiment.magnitude}`);\n// }\n\n  render() {\n               async function quickstart() {\n               // Imports the Google Cloud client library\n               const language = require('@google-cloud/language');\n\n               // Instantiates a client\n               const client = new language.LanguageServiceClient();\n\n               // The text to analyze\n               const text = {title};\n\n               const document = {\n                 content: text,\n                 type: 'PLAIN_TEXT',\n               };\n\n               // Detects the sentiment of the text\n               const [result] = await client.analyzeSentiment({document: document});\n               const sentiment = result.documentSentiment;\n\n               console.log(`Text: ${text}`);\n               console.log(`Sentiment score: ${sentiment.score}`);\n               console.log(`Sentiment magnitude: ${sentiment.magnitude}`);\n             \n             return (\n               <Fragment>\n                 <div className=\" container-fluid mt-5\" id=\"product\">\n                   $nbps;\n                   <h2> Latest</h2>\n                   {/* <textarea onChange={this.findSentiment}></textarea>\n          <p>sentiment score:{this.state.sentimentScore}</p>\n          <p>general sentiment:{this.state.generalSentiment}</p> */}\n                   <div className=\"row\">\n                     {this.state.data.map((dynamicData, key) => (\n                       <div className=\"col-lg-3 col-md-3 col-sm-3   animated fadeInUp wow animated\">\n                         <div className=\"product-top\">\n                           <img\n                             src={dynamicData.urlToImage}\n                             className=\"img1\"\n                             alt=\"\"\n                           />\n                           <div className=\"overlay\">\n                             <button\n                               type=\"button\"\n                               className=\"btn btn-secondary\"\n                               title=\"Quick Shop\"\n\n                               //data-toggle=\"modal\"\n                               //data-target=\"#quickModel\"\n                             >\n                               <i className=\"fa fa-eye\"></i>\n                             </button>\n\n                             <button\n                               type=\"button\"\n                               className=\"btn btn-secondary\"\n                               title=\"Add to Cart\"\n                             >\n                               <i className=\"fa fa-shopping-cart\"></i>\n                             </button>\n                           </div>\n                         </div>\n                         <div className=\"product-bottom text-center\">\n                           <i className=\"fa fa-star\"></i>\n                           <i className=\"fa fa-star-half-o\"></i>\n                           <i className=\"fa fa-star-o\"></i>\n                           <h5>{dynamicData.title}</h5>\n                           <Link\n                             type=\"submit\"\n                             className=\"btn input-btn\"\n                             title=\"click here\"\n                             to={{\n                               pathname: \"/vendor/Readmore\",\n                               state: {\n                                 dynamicData: dynamicData,\n                                 urlToImage: dynamicData.urlToImage,\n                                 description: dynamicData.description,\n                               },\n                             }}\n                           >\n                             Read More\n                           </Link>\n                           {/* }} */}\n                         </div>\n                       </div>\n                     ))}\n                   </div>\n                 </div>\n               </Fragment>\n             );\n           }\n}\n}\n\nexport default FHome;\n"]},"metadata":{},"sourceType":"module"}